{"version":3,"sources":["components/airtellogo.png","reducer/packReducer.js","reducer/index.js","action/types.js","createStore.js","components/service/AuthService.js","utils/config.js","components/service/UserService.js","components/LoginNavbar.js","utils/Notify.js","utils/ResponseHandler.js","components/login/LoginNewUI.js","components/login/LoginComponent.js","components/service/AdminService.js","components/service/ActivationService.js","components/LeftMenuBar.js","components/PostLoginNavbar.js","components/report/MaterialUIPickers.js","components/report/Report.js","components/report/TestReport.js","utils/MaterialUIPickers.js","components/banner/BannerAdd.js","components/banner/BannerEdit.js","components/verify/VerifyList.js","components/verify/ResubmitVerify.js","utils/SlideShowGalary.js","components/verify/VerifyEdit.js","components/dataentry/DataEntryList.js","components/dataentry/ResubmitDataEntryList.js","components/dataentry/MaterialUIPickers.js","components/dataentry/DataEntryEdit.js","components/distributer/DistributerList.js","components/distributer/DistResubmit.js","api.js","components/pack/RechargePack.js","action/index.js","components/pack/RechargePackAdd.js","components/pack/RechargePackEdit.js","components/banner/BannerList.js","components/backoffice/Title.js","components/backoffice/SimpleExpansionPanel.js","components/backoffice/BackOffice.js","components/backoffice/OfferUpload.js","components/login/AdminWelcome.js","components/login/RoleManagement.js","components/backoffice/CurrentMSISDNStatus.js","components/RouterComponent.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","INTIAL_STATE","packs","pack","updatedPack","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","service_AuthService","localStorage","getItem","headers","Authorization","RETAILER_API_BASE_URL","location","hostname","RETAILER_REPORT_BASEAPI","RETAILER_RECHAGE_REPORT_BASEAPI","RETAILER_SIMSWAP_REPORT_BASEAPI","RETAILER_RETAILER_REPORT_BASEAPI","RETAILER_SLRetailerA","SL_AD_LOGIN_URL","SL_AD_LOGOUT_URL","VERIFY_DOCS_LISTING","VERIFY_DOCS_LISTING_RESUBMIT","RECORD_TOBE_PROCESSED","RECHARGE_PACK_LISTING","RECHARGE_PACK_GET_BY_ID","SAVE_PACK","UPLAOD_PACK_IMAGE","GET_ALL_BANNERS_DETAILS","SAVE_BANNER","UPDATE_BANNER","UPLOAD_IMG_BANNER","GET_ONE_BANNER","SEARCH_BY_MOBILE_NO","VERIFICATION_STATIC_DATA","VERIFY_DETAILS","VERIFY_DOCS_APPROVE","DATAENTRY_DETAILS","SAVE_DATAENTRY_DETAILS","DISTRIBUTER_SEARCH","DISTRIBUTER_UPLOAD","DISTRIBUTER_SEARCH_RESUBMIT","DISTRIBUTER_UPLOAD_RESUBMIT","UNLOCK_SKIP_VERIFICATION","RETAILER_ONBOARD","RETAILER_DELETE","RETAILER_SEARCH","RETAILER_API_OFFER_UPLOAD","RETAILER_API_OFFER_DOWNLOAD","LIST_OF_ROLES","ROLE_DETAILS_BY_ID","SEARCH_BY_MSISDN","service_UserService","credentials","key","console","log","axios","post","url","Origin","Host","get","AuthService","getHeader","style","flexGrow","LoginNavBar","props","react_default","a","createElement","Fragment","AppBar","position","Toolbar","width","src","AirtellLogo","Typography","variant","utils_Notify","msg","toast","error","this","options","success","warn","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","resolveResponse","response","data","status","clear","Promise","reject","replace","Notify","showError","message","useStyles","makeStyles","theme","@global","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","form","submit","SignIn","classes","handleOnChange","e","loginProps","onChange","Container","component","maxWidth","CssBaseline","className","Avatar","Person_default","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","userName","password","Button","color","onClick","login","LoginComponent","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","defineProperty","target","trim","isError","preventDefault","isDasable","keynum","Math","floor","random","toString","atualkey","substring","encryptedPass","CryptoJS","AES","encrypt","loginPayload","UserService","then","res","result","roleCode","setItem","JSON","stringify","token","history","push","bind","assertThisInitialized","LoginNavbar","Grid","container","justify","xs","sm","InputLabel","styles","waitMessage","errorMessage","lastUrl","React","Component","formStyle","flexFlow","justifyContent","service_AdminService","role","apiConstant","formData","lapuNumber","api","startDate","retrieveType","endDate","instance","create","defaults","timeout","fullapiurl","service_ActivationService","productId","postdata","product","mobile","object","mobileNumber","AdminMenuList","ListItem","button","href","ListItemIcon","EmojiEmotions_default","ListItemText","primary","FileCopy_default","Layers_default","LocalOffer_default","Assignment_default","People_default","BarChart_default","BOAMenuList","VerifiedUser_default","History_default","DEMenuList","DISTMenuList","CloudUpload_default","LogoutMenu","react_router_dom","textDecoration","logout","PowerSettingsNew_default","root","endMenu","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","concat","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","content","contentShift","PostLoginNavBar","_React$useState","useState","acquisitionCount","resubmitCount","_React$useState2","slicedToArray","useTheme","_React$useState3","_React$useState4","open","setOpen","userDetails","parse","acquisitionCountText","resubmitCountText","clsx","IconButton","aria-label","edge","Menu_default","item","noWrap","direction","loginName","toUpperCase","Drawer","anchor","ChevronLeft_default","ChevronRight_default","Divider","List","Menu","MaterialUIPickers","maxAllowedDate","startd","Date","setHours","endd","selectedStartDate","setSelectedStartDate","selectedEndDate","setSelectedEndDate","showSingleDate","callbackFromParent","d1DateRangeFlag","getTime","dateObj","setMonth","getMonth","setDate","getDate","currDate","back18Month","d","$","prop","useUtils_cfb96ac9","utils","DateFnsUtils","DatePicker","disabled","generateReportLoader","disableFuture","allowKeyboardControl","minDate","minDateMessage","maxDate","maxDateMessage","format","date","myCallback","KeyboardButtonProps","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","Report","zoneChange","includes","selectedZone","listofzones","selectAllzone","_this$setState2","showZoneSelection","retrieveTypeAll","retrieveTypeDataEntry","responseFlag","dataEntryData","responseFlagMsg","resetCalander","onChangeRetriveBy","fromDate","endD","disabledGenButton","products","reporttype","month","year","days","day","numofDays","listofYear","zone","reportName","generateReportMsg","filenameToGo","getReportDetails","convertBool","moment","_this2","ActivationService","getStaticData","zones","i","getFullYear","_this3","verficationname","firstDate","range","AdminService","sentReportToEmail","verifications","dataEntry","flag","_React$createElement","_React$createElement2","_React$createElement3","_React$createElement4","_React$createElement8","dateParam","adminReports","MenuItem","agentStatusRetrieveBy","retrieveTypeFileName","toLowerCase","downloadfilename","dateFormat","Paper","gutterBottom","syt","FormControl","multiselect","htmlFor","Select","selectStyle","labelId","multiple","input","Input","map","react_csv","filename","Table","tableStyle","minWidth","marginBottom","dateSelect","handleStartDateChange","startDateMili","document","getElementById","handleEndDateChange","endDateMili","disablePast","firstLavel","TimePicker","secondLavel","BannerAdd","publishDate","expireDate","savePack","title","bannerType","order","active","file","FormData","append","parseInt","link","categoryType","addBanner","cancel","handleChange","event","checked","validateUploadFile","test","fileSize","size","fileext","split","pop","writable","md5","onChangeFileUpload","_this$setState3","files","URL","createObjectURL","onChangeHandler","amsConstant","content-type","imageURL","catch","section","category","forAndroid","forIos","forWindows","validityDays","updateTime","updateBy","showFileSize","textStyle","formContainer","MaterialUIPickers_MaterialUIPickers","height","_styles","flexWrap","BannerEdit","getInitialData","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","loading","getOneBanner","selectedData","bannerId","stop","updateBanner","showSuccess","BannerEdit_styles","VerifyList","onlockTransectionOnSkip","txn","transactionsIds","unlockTransectionsSkip","searchby","searchedproducts","loadProductList","editProduct","getTotalToBeProcessed","count","verifyListingTxn","innerHTML","listDocs","activationList","listingIds","val","index","txnId","setTimeout","alert","sim","_this4","overflow","searchOnDB","TableHead","TableRow","whiteSpace","TableCell","align","TableBody","row","hover","Visibility_default","cursor","scope","nic","pefCount","nicCount","distributer","ftaDate","submitDate","fontSize","textAlign","tableRow","&:hover","background","addProduct","listDocsResubmit","resubmitDate","fadeProperties","defaultIndex","transitionDuration","infinite","indicators","arrows","scale","autoplay","oldIndex","newIndex","SlideSlowGalary","openImageGalary","isOpen","photoIndex","imageDetails","_this$state","topImg","images","topImgItem","img","verticalAlign","PanViewer_default","image","alt","react_slideshow_image_min","assign","ref","slideRef","VerifyEdit","selectedReasons","updateLocalActList","splice","skipThisVerify","comments","selectedProductId","nextid","loadOneTransection","approveLoader","approveDone","approveButton","rejectDone","rejectButton","current","goTo","approveEV","values","find","rejectedReasons","isPOIRejected","isCumtomerPhotoRejected","verificationDateTime","verificationUser","loginId","isRejected","transactionId","approveDocs","rejectEV","rejectLoader","keys","onlyCode","keyList","rejectData","join","address1","address2","address3","altContactNumber","customerImageUrl","customerSignatureUrl","deDateTime","deUser","dob","firstName","gender","lastName","middleName","pefImageUrl","poiBackImageUrl","poiFrontImageUrl","poiNumber","poiType","submittedBy","showPersonalDetails","loader","emailid","presentAddress","bothReasons","createRef","getOneVerify","selectedProduct","objectReason","reduce","array","alternateNumber","retailerSignatureUrl","simNumber","submittedDate","submittedDateStr","resubmittedDate","resubmittedDateStr","prevRejectedImgs","prevData","eactivatedRejectionReasons","preActivatedRejectionReasons","reasonList","isMandatory","exemptReason","author","featured","prevImageDetails","pefcontainer","doccontaiter","datacontainer","textStyleHeading","paddingLeft","paddingRight","VerifyEdit_SubmitedByRetailer","cafdetails","VerifyEdit_SubmitedByDistributer","pefImage","prevPefImage","SlideShowGalary","multiline","rows","footerButton","CircularProgress","DoneSharp_default","mainDivAdjustment","left","bottom","SubmitedByRetailer","SubmitedByDistributer","pefdetails","prevPefdetails","DataEntryList","listingTakingTime","dataentryListingTxn","alignContent","endTime","noOfRecords","date15Years","setFullYear","today","DataEntryEdit","formattedDate","toLocaleDateString","propMobile","comment","dataEntryId","submitDataEntry","toLocaleLowerCase","saveDataEntry","productName","displayName","servingTimeInMins","priority","iconUrl","onlineBooking","showRecent","tagUrl","helpTextImage","helpText","updateProduct","onChangeDob","getOneDataEntry","genderSelect","rejectmsg","propertiesName","screenFields","fields","paddingBottom","dataentry_MaterialUIPickers_MaterialUIPickers","MuiTextField","variyant","paddingTop","imgStyle","overflowY","onUploadFiles","pef_image","poi_front_image","uploadFlag","uploadLoader","poi_back_image","uploadDistrubuter","uploadResponse","user_image","user_image_upload","user_signature_loader","user_signature_upload","retailer_signature_loader","poi_front_image_loader","poi_front_image_upload","poi_back_image_loader","poi_back_image_upload","pef_image_loader","pef_image_upload","pef_image_response","poi_front_image_response","poi_back_image_response","numberFound","reset","searchDistributer","onSubmit","handleSubmit","show","uploadDistrubuterResubmit","searchDistributerResubmit","performServerAction","baseURL","RechargePack","loadPackList","listPack","allPacks","portal","removeItem","flex","connectionType","amount","validityType","description","displayType","lib_default","connect","setPackLoaded","_ref","dispatch","sent","_x","apply","RechargePackAdd","displayOrder","packType","startDatetime","endDatetime","packTypeitem","dataDay","dataDayType","nightDay","nightDayType","activationStatus","isFtr","addPack","showFileBrowser","onChangePack","packtypevalue","showDescription","userCategory","min","max","RechargePackAdd_styles","_this$setState","packRes","getPackById","addPackTpe","ftr","packvalue","RechargePackEdit_styles","editPackInfo","updatedInfo","_ref3","_callee3","_context3","String","t0","_x3","_ref2","_callee2","_context2","abrupt","_x2","BaneerList","loadBannerList","getAllBanner","toTimeString","indexOf","Title","children","heading","typography","pxToRem","fontWeight","fontWeightRegular","SimpleExpansionPanel","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","ExpansionPanelDetails","laId","reason","Retailer","retailerOnboardExcelTemplatePath","retailerDeleteExcelTemplatePath","deletefile","retailerDetails","deleteResponse","relailerOnboard","relailerDelete","searchRetailer","uploadfile","uploadRetailer","rejectedAgents","deleteRetailer","_this5","startIcon","Search_default","laid","msisdn","emailId","tlId","tlNum","managerId","managerNum","department","remarks","Link","Delete_default","OfferUpload","allOfferData","getAdmminStaticData","uploadOffer","downlaodAllOfferData","param","retailerAirtelId","imagestyle","RoleManagement","obj","roleDetails","alreadyAssigned","addNewEnable","roleName","selectedRole","addRole","showRoleDetails","deleteNewRole","deleteRole","getListOfRoles","css","getRoleDetails","authorites","confirm","authority","DeleteForever_default","CurrentMSISDNStatus","msisdnDetails","searchMSISDN","msisdnNumber","nicNumber","verificationDate","dataEnteredDate","omniTransferDate","verifyBy","verifiyComment","verificationStatus","dataEnteredBy","distributorName","distributorNumber","retailerNumber","omniStatus","imageCount","refNumber","AppRouter","react_router","path","exact","ResubmitVerify","ResubmitDataEntryList","DistributerList","DistResubmit","RechargePackEdit","BackOffice","AdminWelcome","App","RouterComponent","react_toastify","ReactDOM","render","es","src_App","querySelector"],"mappings":"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","file":"static/js/main.a768548f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/airtellogo.09dde59b.png\";","import * as actionTypes from \"../action/types\";\nconst INTIAL_STATE = {\n    packs: [],\n    pack:[],\n    updatedPack:null\n  };\n export default (state = INTIAL_STATE,action)=>{\n    switch (action.type) {\n        case actionTypes.SET_PACK_LOADED:\n          return { ...state, packs:action.payload };\n        case actionTypes.EDIT_PACK_INFO:\n          return {...state,updatedPack:action.payload}\n          case actionTypes.GET_PACK_INFO_BY_ID:\n              return {...state,pack:action.payload}    \n     default:\n          return state;\n      }\n}\n\n","import { combineReducers } from 'redux';\n\nimport getPackReducer from './packReducer';\n\nexport default combineReducers({\n    packs: getPackReducer,\n});","export const SET_PACK_LOADED = 'SET PACK LOADED';\nexport const EDIT_PACK_INFO ='EDIT PACK INFO';\nexport const GET_PACK_INFO_BY_ID ='GET_PACK_INFO_BY_ID';\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nexport default store;","class AuthService {\n\n    getLoggedInUserInfo() {\n        localStorage.getItem(\"UserInfo\");\n    }\n\n    getHeader() {\n        return { 'headers': {'Authorization': 'Bearer ' + localStorage.getItem(\"token\") } }\n        //return { 'headers': { 'X-Server-Key': '8786gfhy' } }\n    }\n\n    // logout() {\n\n    //     if(window.localStorage.getItem(\"token\")){\n    //       localStorage.clear();\n    //       this.props.history.push(\"/login\");\n    //     }\n    //     console.log(\"logout\");\n    // }\n}\n\nexport default new AuthService();","var RETAILER_API_BASE_URL = 'https://retailer.airtel.lk/SLRetailer/';\nvar STAGING_IP_PORT = 'http://125.16.74.160:30611/';\nvar DEV_IP_PORT = 'http://125.17.6.6/retailer/';\n\n\nif(window.location.hostname == \"retailer.airtel.lk\"){\n    RETAILER_API_BASE_URL = 'https://retailer.airtel.lk/SLRetailer/';\n}\nif(window.location.hostname == \"retailer.srilanka.airtel.itm\"){\n    RETAILER_API_BASE_URL = 'http://retailer.srilanka.airtel.itm:5443/SLRetailer/';\n}\n\n//window.location.hostname == \"localhost\"  SLRetailerIPACS  SLRetailer\nif(window.location.hostname == \"125.16.74.160\"){\n    RETAILER_API_BASE_URL = 'http://125.16.74.160:30611/SLRetailer/'; \n}\n\nif(window.location.hostname == \"125.17.6.6\"){\n    RETAILER_API_BASE_URL = 'http://125.17.6.6/retailer/SLRetailer/';\n//    RETAILER_API_BASE_URL = 'http://125.16.74.160:30611/SLRetailer/'; \n}\n\nif(window.location.hostname == \"tstretailer.airtel.lk\"){\n    RETAILER_API_BASE_URL = 'https://tstretailer.airtel.lk/SLRetailer/';\n}\n\nif(window.location.hostname == \"localhost\" || window.location.hostname == \"127.0.0.1\"){\n    RETAILER_API_BASE_URL = 'http://125.16.74.160:30611/SLRetailer/'; //staging\n  //  RETAILER_API_BASE_URL = 'http://125.17.6.6/retailer/SLRetailer/'; //dev\n}\n\n//reports \nexport const RETAILER_REPORT_BASEAPI = RETAILER_API_BASE_URL + 'reports/';\n// export const RETAILER_RECHAGE_REPORT_BASEAPI = STAGING_IP_PORT + 'SLRetailerA/' + 'recharges/';\n// export const RETAILER_SIMSWAP_REPORT_BASEAPI = STAGING_IP_PORT + 'SLRetailerA/' + 'swapping/';\n// export const RETAILER_RETAILER_REPORT_BASEAPI = STAGING_IP_PORT + 'SLRetailerA/' + 'retailer/';\n// export const RETAILER_SLRetailerA = STAGING_IP_PORT + 'SLRetailerA/' + 'reports/';\n\n//d1 reports changes \nexport const RETAILER_RECHAGE_REPORT_BASEAPI = RETAILER_API_BASE_URL + 'recharges/';\nexport const RETAILER_SIMSWAP_REPORT_BASEAPI = RETAILER_API_BASE_URL + 'simswap/';\nexport const RETAILER_RETAILER_REPORT_BASEAPI = RETAILER_API_BASE_URL + 'retailer/';\nexport const RETAILER_SLRetailerA = RETAILER_API_BASE_URL+ 'reports/';\n\n//login\nexport const SL_AD_LOGIN_URL = RETAILER_API_BASE_URL + 'auth/portaLogin';\nexport const SL_AD_LOGOUT_URL = RETAILER_API_BASE_URL + 'user/logout'; \n\nexport const VERIFY_DOCS_LISTING = RETAILER_API_BASE_URL + 'avde/prepaidAcquisitions';\nexport const VERIFY_DOCS_LISTING_RESUBMIT = RETAILER_API_BASE_URL + 'avde/prepaidResubmits';\nexport const RECORD_TOBE_PROCESSED =  RETAILER_API_BASE_URL + \"avde/pendingCount\";\n\n// export const VERIFY_DOCS_LISTING = STAGING_IP_PORT + 'SLRetailerA/' + 'avde/prepaidAcquisitions';\n// export const VERIFY_DOCS_LISTING_RESUBMIT = STAGING_IP_PORT + 'SLRetailerA/'  + 'avde/prepaidResubmits';\n// export const RECORD_TOBE_PROCESSED =  STAGING_IP_PORT + 'SLRetailerA/'  + \"avde/pendingCount\";\n\n//packs \nexport const RECHARGE_PACK_LISTING = RETAILER_API_BASE_URL + 'recharges/getPrepaidPacksForPortal';\nexport const RECHARGE_PACK_GET_BY_ID= RETAILER_API_BASE_URL + \"recharges/getPrepaidPacksById\"\nexport const SAVE_PACK= RETAILER_API_BASE_URL + 'recharges/uploadPrepaidPack';\nexport const UPLAOD_PACK_IMAGE= RETAILER_API_BASE_URL + 'recharges/uploadRechargeImage';\n\n\n//Baneer \nexport const GET_ALL_BANNERS_DETAILS = RETAILER_API_BASE_URL + 'banner/getAllBannersForPortal';\nexport const SAVE_BANNER = RETAILER_API_BASE_URL + 'banner/upload';\nexport const UPDATE_BANNER = RETAILER_API_BASE_URL + 'banner/update';\n\n\nexport const UPLOAD_IMG_BANNER = RETAILER_API_BASE_URL + 'recharges/uploadRechargeImage';\nexport const GET_ONE_BANNER = RETAILER_API_BASE_URL + 'banner/getById';\n\n//arti api  old: createCAF/prepaidAcqTxnData new: avde/acqDataForDataEntry\nexport const SEARCH_BY_MOBILE_NO = RETAILER_API_BASE_URL + 'avde/acqDataForDataEntry';\nexport const VERIFY_DOCS_BY_ID = RETAILER_API_BASE_URL + 'avde/acqDataForDataEntry?role=AV';\nexport const VERIFICATION_STATIC_DATA = RETAILER_API_BASE_URL + 'cms/data';\n\nexport const VERIFY_DETAILS = RETAILER_API_BASE_URL + 'avde/acqDataForVerification';\nexport const VERIFY_DOCS_APPROVE = RETAILER_API_BASE_URL + 'avde/saveVerificationDetails';\n\nexport const DATAENTRY_DETAILS = RETAILER_API_BASE_URL + 'avde/acqDataForDataEntry';\nexport const SAVE_DATAENTRY_DETAILS = RETAILER_API_BASE_URL + 'avde/saveDataEntryDetails';\n\n//distributer\n//export const DISTRIBUTER_SEARCH = RETAILER_API_BASE_URL + 'createCAF/validatePreActivation';\n\n//createCAF/validatePreActivation createCAF/submitPreActivationForPortal\nexport const DISTRIBUTER_SEARCH = RETAILER_API_BASE_URL + 'preactivation/validate';\nexport const DISTRIBUTER_SUBMIT = RETAILER_API_BASE_URL + 'createCAF/submitPreActivation';\nexport const DISTRIBUTER_UPLOAD = RETAILER_API_BASE_URL + 'preactivation/portal';\n\nexport const DISTRIBUTER_SEARCH_RESUBMIT = RETAILER_API_BASE_URL + 'resubmit/data';\nexport const DISTRIBUTER_UPLOAD_RESUBMIT = RETAILER_API_BASE_URL + 'resubmit/portal';\n\nexport const UNLOCK_SKIP_VERIFICATION = RETAILER_API_BASE_URL + 'cms/unlockSelection';\n\n//Retailer \nexport const RETAILER_ONBOARD = RETAILER_API_BASE_URL + 'agent/add';\nexport const RETAILER_DELETE  = RETAILER_API_BASE_URL + 'agent/delete';\nexport const RETAILER_SEARCH = RETAILER_API_BASE_URL + 'agent/retrieve';\n\n//Offer Uplaod  \nexport const RETAILER_API_OFFER_UPLOAD = RETAILER_API_BASE_URL + 'bestoffers/upload';\nexport const RETAILER_API_OFFER_DOWNLOAD = RETAILER_API_BASE_URL + 'bestoffers/download';\n\n//role Management \nexport const LIST_OF_ROLES = RETAILER_API_BASE_URL + 'roles/all';\nexport const ROLE_DETAILS_BY_ID = RETAILER_API_BASE_URL + 'roles/';\n\n//search msisnd\nexport const SEARCH_BY_MSISDN = RETAILER_API_BASE_URL + 'acquisition/msisdnAcquisitionHistory';\n\n// for dev environment:   '/retailer'    otherwise ''\nexport const DEV_PROTJECT_PATH =  '';  ","import axios from 'axios';\n\nimport AuthService from \"./AuthService\";\nimport {SL_AD_LOGIN_URL,SL_AD_LOGOUT_URL} from \"../../utils/config\";\n\nclass UserService {\n\n    login(credentials, key) {\n\n        console.log(credentials)\n     //   return axios.post(STORE_API_BASE_URL + '/auth/portal-login', credentials, { 'headers': { 'X-Server-Key': '8786gfhy' } });\n         // return axios.post(SL_AD_LOGIN_URL, credentials,  { 'headers': { 'MyServerKey': key }});\n          return axios.post(SL_AD_LOGIN_URL, credentials, '');\n\n    } \n    checkapi(url, credentials) {\n        console.log(credentials);\n        //   return axios.post(STORE_API_BASE_URL + '/auth/portal-login', credentials, { 'headers': { 'X-Server-Key': '8786gfhy' } });\n             return axios.post(url, credentials, { Origin: '125.17.6.6' ,   Host: '125.17.6.6' } );\n       }\n    logout() {\n     //   return axios.post(STORE_API_BASE_URL + '/auth/portal-login', credentials, { 'headers': { 'X-Server-Key': '8786gfhy' } });\n          return axios.get(SL_AD_LOGOUT_URL, AuthService.getHeader());\n    }\n\n} \n\nexport default new UserService();\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport AirtellLogo from './airtellogo.png';\n\n\n\nconst style = {\n    flexGrow: 1\n}\n\n\nconst LoginNavBar = (props) => {\n    return (\n        <React.Fragment>\n            {/* <AppBar position=\"static\" style={{backgroundColor: '#f44336'}}/> */}\n            <AppBar position=\"static\">\n                <Toolbar>\n                <img  style={{width:\"100px\"}} src={ AirtellLogo } />\n\n                    <div style={{width:\"300px\"}}>\n                        <Typography variant=\"h6\" style={style}>\n                             &nbsp;&nbsp;  SL MITRA Retailer Portal\n                        </Typography>\n                    </div>              \n                    \n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n};\n\nexport default LoginNavBar;","import { toast } from 'react-toastify';\n\nclass Notify {\n\n    showError(msg) {\n        toast.error(msg, this.options());\n    }\n\n    showSuccess(msg) {\n        toast.success(msg , this.options());\n    }\n\n    showWarning(msg) {\n        toast.warn(msg , this.options());\n    }\n\n    options() {\n        return {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true\n        }\n    }\n\n}\n\nexport default new Notify();","import AuthService from \"../components/service/AuthService\";\nimport Notify from \"./Notify\";\n\nexport function resolveResponse(response, msg) {\n   \n    let data = {};\n        if (response.status === 200) {\n            console.log(response,\"RESPONSE@@@@@@@@@@@\")\n            data = response.data;\n            if(data.status === 200 || data.status === 201) {\n                // if(data.message){\n                //     Notify.showSuccess(data.message);\n                // }\n            }else if(data.status === 400 || data.status === 401 || data.status === 403) {\n              //  Notify.showError(\"We need to authenticate you. Please login again.\");\n                localStorage.clear();\n                //return window.location.replace(\"/#/login\");\n                return Promise.reject(window.location.replace(\"#/login\"));\n            }else {\n               // console.log(data.message,\"XXXX\");\n                Notify.showError(data.message);\n                return Promise.reject(data.message);\n            }\n        }\n        // else {\n        //     Notify.showError(data.message);\n        //     return Promise.reject(data.message);\n        // }\n        return data;\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport LoginNavBar from \"../LoginNavbar\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Bharti Airtel Ltd\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#df0915',//theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\n\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n\n  const handleOnChange = e => {\n    props.loginProps.onChange(e);\n  };\n\n\n  return (\n    <>\n        {/* <LoginNavBar/> */}\n\n    <Container component=\"main\" maxWidth=\"xs\">\n\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <PersonIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Olm Id\"\n            name=\"userName\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange={handleOnChange}\n            value={props.loginProps.userName}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handleOnChange}\n            value={props.loginProps.password}\n          />\n          {/* <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          /> */}\n          <Button\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={props.loginProps.login}\n          >\n            Sign In\n          </Button>\n\n         \n          \n          {/* <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid> */}\n        </form>\n      </div>\n      {/* <Box mt={8}>\n        <Copyright />\n      </Box> */}\n    </Container>\n    </>\n  );\n}\n\n\n\n\n\n\n\n// method calling\n\n// import React from \"react\";\n// import \"./styles.css\";\n\n// class Child extends React.Component {\n//   render() {\n//     return <input name=\"username\" onChange = {this.props.handler}/ >\n//   }\n// }\n\n// class Parent extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       username : \"vijay\"\n//     }\n//     this.handler = this.handler.bind(this)\n//   }\n\n//   handler(e) {\n//     console.log(e.target.name ); \n//     this.setState({\n//       [e.target.name]: e.target.value \n//     })\n//   }\n\n//   render() {\n//     return <>\n//     Hello:  {this.state.username} \n//      <Child handler = {this.handler} />\n     \n//      </>\n//   }\n// }\n\n// export default Parent;\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport UserService from \"../service/UserService\";\nimport LoginNavBar from \"../LoginNavbar\";\nimport {Container} from \"@material-ui/core\";\nimport { resolveResponse } from '../../utils/ResponseHandler';\nimport Notify from \"../../utils/Notify\";\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nimport CryptoJS  from 'crypto-js'; \n\nimport LoginNewUI from './LoginNewUI';\n\n\nclass LoginComponent extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: \"\",\n            password: \"\", \n            isDasable:false,\n            isError:false,\n            \n        };\n        this.login = this.login.bind(this);\n\n    }\n\n\n    render() {\n\n        return(\n            <React.Fragment>\n                <LoginNavBar/>\n                \n                {/* <Container maxWidth=\"sm\">\n                     <br/><br/><br/> \n                    <Typography variant=\"h4\" style={styles.label}>Login</Typography>\n                    <form style={styles.formStyle}>\n                        <TextField type=\"text\"  required={true} label=\"Olms Id\" fullWidth margin=\"normal\" name=\"userName\" value={this.state.userName}  onChange={this.onChange}/>\n\n                        <TextField type=\"password\"  required={true} label=\"Password\" fullWidth margin=\"normal\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\n                        <Grid item  xs={12} sm={8}>\n                            <Button disabled={this.state.isDasable}  variant=\"contained\" color=\"primary\" onClick={this.login}>Login</Button>\n                        </Grid>\n                        <Grid item  xs={12} sm={10}>\n                             {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                             {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                        </Grid>\n                    </form>\n                </Container> */}\n\n                {/* New Login UI */}\n                <LoginNewUI loginProps={ {onChange : this.onChange, login: this.login,   userName: this.state.userName, password:  this.state.password } }/>\n                <Grid container justify=\"space-around\">\n                    <Grid justify={\"center\"} container  xs={12} sm={10}>\n                            {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                            {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                    </Grid>\n                </Grid>\n            </React.Fragment>\n        )\n\n    }\n\n    componentDidMount() {\n      const token =   window.localStorage.getItem(\"token\"); \n      if(token){\n        const lastUrl = localStorage.getItem(\"lastUrl\"); \n        this.props.history.push('/'+lastUrl);\n      }\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n    login = (e) => {\n        \n        this.setState({ isError: \"\" });\n\n\n        e.preventDefault();\n        if(!this.state.userName || !this.state.password){\n            this.setState({ isError: \"Olms Id and password is required.\" });\n\n            // setTimeout(() => {\n            //     this.setState({ isError: \"\" });\n            // }, 3000);\n\n          //  Notify.showError(\"Olms Id and password is required.\");\n            return;\n        }\n         \n        this.setState({ isDasable: true });\n\n        var keynum = Math.floor(Math.random()*1E16);\n        if(keynum.toString().length == 15){\n            keynum = keynum.toString() + \"9\"; \n        }\n        var atualkey = (keynum * 69-99).toString(); \n        atualkey =  atualkey.substring(0, 15);\n\n       var encryptedPass = CryptoJS.AES.encrypt( this.state.password, atualkey).toString();\n        // console.log( keynum , encryptedPass);\n\n        const loginPayload = {\n            userName:  this.state.userName,\n            password: encryptedPass+keynum // this.state.password //\n\n        };\n        UserService.login(loginPayload)\n            .then(res => {\n              //  Notify.showError(\"Olms Id and password is required.\");\n            //  alert(JSON.stringify(res));\n\n              \n              this.setState({ isError: res.data.message });\n\n                var data = resolveResponse(res);\n                console.log(\"resolveResponse\",data.result && data.result.roleCode); \n              \n               // data = res.data; \n                this.setState({ isDasable: false });\n\n                if(data.result){\n                    window.localStorage.setItem(\"userDetails\",JSON.stringify(data.result));\n                    window.localStorage.setItem(\"token\",data.result.token)\n                }\n               \n                // BO agent : BOA\n                // Data Entry : DE\n                // Admin : ADMIN\n                // Distributor : DIST\n\n                console.log(this.props.history);\n                if(data.result && data.result.roleCode == \"BOA\"){\n                    this.props.history.push('/verify');\n                    return;\n                }\n              //  window.location.replace( \"#/verify\");  \n\n                if(data.result && data.result.roleCode == \"DE\")\n                this.props.history.push('/dataentry');\n\n                if(data.result && data.result.roleCode == \"ADMIN\")\n                this.props.history.push('/welcome');\n\n                if((data.result && data.result.roleCode== \"DIST\") || (data.result &&  data.result.roleCode== \"FSE\"))\n                this.props.history.push('/distributor');\n                \n            });\n          \n            // setTimeout(() => {\n            //     this.setState({ isError: \"\" });\n            // }, 3000);\n\n\n           \n    }\n\n}\n\nconst styles ={\n    formStyle :{\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n    label: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    errorMessage:{\n        color:\"red\",\n        marginTop: '11px'\n    },\n    waitMessage:{\n        color:\"gray\",\n        marginTop: '11px'\n\n    }\n\n}\n\nexport default LoginComponent;","import axios from 'axios';\nimport AuthService from \"./AuthService\";\nimport  * as apiConstant from \"../../utils/config\";\n\nclass AdminService {\n\n    getStaticData(role){\n        return axios.get(apiConstant.VERIFICATION_STATIC_DATA + '?role=' + role, AuthService.getHeader());\n    }\n    getListOfRoles(){\n        return axios.get(apiConstant.LIST_OF_ROLES , AuthService.getHeader());\n    }\n\n    getRoleDetails(id){\n        return axios.get(apiConstant.ROLE_DETAILS_BY_ID+id , AuthService.getHeader());\n    }\n\n\n    downlaodAllOfferData(){\n        return axios.get(apiConstant.RETAILER_API_OFFER_DOWNLOAD, AuthService.getHeader());\n    }\n\n    uploadRetailer(formData){\n        return axios.post(apiConstant.RETAILER_ONBOARD, formData, AuthService.getHeader());\n    }\n\n    uploadOffer(formData){\n        return axios.post(apiConstant.RETAILER_API_OFFER_UPLOAD, formData, AuthService.getHeader());\n    }\n\n    deleteRetailer(formData){\n        return axios.post(apiConstant.RETAILER_DELETE, formData, AuthService.getHeader());\n    }\n\n    searchRetailer(lapuNumber){\n        return axios.get(apiConstant.RETAILER_SEARCH+\"?laId=\" +lapuNumber , AuthService.getHeader());\n    }\n\n    \n\n    reportDirectDownload(formData,api){\n        \n       // var url = 'http://125.16.74.160:30611/SLRetailer/reports/ftaDeviationReport?retrieveType=BY_FTA_DATE&startDate=1577817000000&endDate=1592850599059'; \n      //  var url ='ftaDeviationReport?retrieveType=BY_FTA_DATE&startDate=1577817000000&endDate=1593023399059&id=ZXlKaGJHY2lPaUpJVXpJMU5pSjkuZXlKemRXSWlPaUpNUVRGUVRVaExNU0lzSW5SdmEyVnVTV1FpT2lJeE5Ua3lPVGs1T0RZMU16ZzJJaXdpVWs5TVJVTlBSRVVpT2lKQlJFMUpUaUlzSWtsVFgxQlBVbFJCVENJNmRISjFaU3dpUVVsU1ZFVk1YMGxFSWpvaVRFRXhVRTFJU3pFaUxDSnBjM01pT2lKb2RIUndjem92TDJGcGNuUmxiQzVqYjIwaUxDSnBZWFFpT2pFMU9USTVPVGs0TmpVc0ltVjRjQ0k2TVRVNU16QTROakkyTlgwLkhNOXpabHNPdV9rTTgwM1dWWE1SNTVhN3NVNkZLYU5NdmRtNmV1UzU4Rlk='; \n        \n      if(api == 'disconnectionReport' || api == 'reconnectionReport'){\n        return axios.get(apiConstant.RETAILER_REPORT_BASEAPI+api+\"?date=\"+formData.startDate+'&id='+ localStorage.getItem(\"token\"), AuthService.getHeader());\n      }else{\n        return axios.get(apiConstant.RETAILER_REPORT_BASEAPI+api+\"?retrieveType=\"+formData.retrieveType+\"&startDate=\"+formData.startDate+\"&endDate=\"+formData.endDate + '&id='+ localStorage.getItem(\"token\"), AuthService.getHeader());\n      }\n    \n      \n       \n\n //        window.open(apiConstant.RETAILER_REPORT_BASEAPI+api+\"?retrieveType=\"+formData.retrieveType+\"&startDate=\"+formData.startDate+\"&endDate=\"+formData.endDate + '&id='+ localStorage.getItem(\"token\"), '');\n\n        // axios({\n        //     url: url,\n        //     method: 'GET',\n        //     responseType: 'blob', \n        //     //headers: AuthService.getHeader(),\n        //   }, AuthService.getHeader() ).then((response) => {\n        //     const url = window.URL.createObjectURL(new Blob([response.data]));\n        //     const link = document.createElement('a');\n        //     link.href = url;\n        //     link.setAttribute('download', 'file.csv');\n        //     document.body.appendChild(link);\n        //     link.click();\n        //   });\n\n      \n      \n    //   var request = new XMLHttpRequest();\n    //     request.open('GET', url, true);\n    //     request.setRequestHeader(\"Authorization\", 'Bearer ' + localStorage.getItem(\"token\"));\n\n    //     request.onload = function() {\n\n    //     if (request.status >= 200 && request.status < 400) {\n    //         // Success!\n    //         var resp = request.responseText;\n            \n    //         const saveData = (function () {\n    //             const a = document.createElement(\"a\");\n    //             document.body.appendChild(a);\n    //             a.style = \"display: none\";\n    //             return function (data, fileName) {\n    //                 const blob = new Blob([data], {type: \"octet/stream\"}),\n    //                     url = window.URL.createObjectURL(blob);\n    //                 a.href = url;\n    //                 a.download = fileName;\n    //                 a.click();\n    //                 window.URL.revokeObjectURL(url);\n    //             };\n    //         }());\n            \n    //         //const data = 'a,b,c\\n5,6,7',\n    //          var   fileName = \"my-csv.csv\";\n            \n    //         saveData(resp, fileName);\n\n    //         alert(\"ok done\")\n    //     } else {\n    //         alert(\"not done\")\n    //     }\n    //     };\n\n    //     request.onerror = function() {\n    //         alert(\"error came\")\n    //     };\n\n    //     request.send();\n\n\n       // window.open(apiConstant.RETAILER_REPORT_BASEAPI+api+\"?retrieveType=\"+formData.retrieveType+\"&startDate=\"+formData.startDate+\"&endDate=\"+formData.endDate, '_blank');\n           \n       // window.open(\"http://125.16.74.160:30611/SLRetailer/reports/ftaDeviationReportCsv?retrieveType=BY_FTA_DATE&startDate=1577817000000&endDate=1592850599059\", '_blank');        // return axios.get(apiConstant.RETAILER_REPORT_BASEAPI+api+\"?retrieveType=\"+formData.retrieveType+\"&startDate=\"+formData.retrieveType+\"&endDate=\"+formData.endDate, AuthService.getHeader());\n    }\n\n    sentReportToEmail(formData,api ){\n        const instance = axios.create();\n        instance.defaults.timeout = 10 * 60 * 1000;\n        \n        var fullapiurl = apiConstant.RETAILER_REPORT_BASEAPI+api ; \n        if(api === 'reloadAndBillPayCount'){\n             fullapiurl = apiConstant.RETAILER_RECHAGE_REPORT_BASEAPI+api; \n        }\n        if(api === 'simSwapCount' ){\n            fullapiurl = apiConstant.RETAILER_SIMSWAP_REPORT_BASEAPI+api; \n        }\n       if(api === 'mpinResetCount' || api === 'idleRetailers' || api ==='monthlyActiveRetailers' || api === 'dailyActiveRetailers'){\n            fullapiurl = apiConstant.RETAILER_RETAILER_REPORT_BASEAPI+api; \n        }\n\n        if(api === 'acquisitionCountReport' || api === 'retailerOnboardedReport' ){\n            fullapiurl = apiConstant.RETAILER_SLRetailerA+api; \n        }\n\n        return instance.post(fullapiurl, formData, AuthService.getHeader());\n    \n    //    return axios.get('http://localhost:8080/report',\n    //             {responseType: 'blob'})\n    //                 .then((response) => {\n    //                     console.log(\"sas\");\n    //                 console.log(response);\n    //                 const url = window.URL.createObjectURL(new Blob([response.data], { type: response.headers['content-type'], encoding: 'UTF-8' }));\n    //                 const link = document.createElement('a');\n    //                 link.href = url;\n    //                 link.setAttribute('download', 'file.csv');\n    //                 document.body.appendChild(link);\n    //                 //link.click();\n    //                 });\n    \n    }\n\n    \n\n    //from pack service\n    uploadPackImage(formData) {\n        return axios.post(apiConstant.UPLAOD_PACK_IMAGE, formData, AuthService.getHeader());\n    }\n\n    addPack(pack) {\n        return axios.post(apiConstant.SAVE_PACK, pack, AuthService.getHeader());\n    }\n\n    addBanner(pack) {\n        return axios.post(apiConstant.SAVE_BANNER, pack, AuthService.getHeader());\n    }\n\n    updateBanner(pack) {\n        return axios.post(apiConstant.UPDATE_BANNER, pack, AuthService.getHeader());\n    }\n\n    getOneBanner(id) {\n        return axios.get(apiConstant.GET_ONE_BANNER+\"?Id=\"+id, AuthService.getHeader());\n\n    }\n\n    //retailer admin service\n    listPack(data){\n         return axios.get(apiConstant.RECHARGE_PACK_LISTING , AuthService.getHeader());\n       // return axios.post(apiConstant.RECHARGE_PACK_LISTING, data, AuthService.getHeader());\n \n     }\n \n \n     getAllBanner(data){\n         return axios.post(apiConstant.GET_ALL_BANNERS_DETAILS,data,  AuthService.getHeader());\n     }\n \n\n     searchMSISDN(id) {\n        return axios.get(apiConstant.SEARCH_BY_MSISDN+\"?msisdn=\"+id, AuthService.getHeader());\n    }\n\n\n\n}\n\n\n\nexport default new AdminService();\n","import axios from 'axios';\nimport AuthService from \"./AuthService\";\nimport  * as apiConstant from \"../../utils/config\";\n\nclass ActivationService {\n\n    listDocs(data){\n        //return axios.post(apiConstant.VERIFY_DOCS_LISTING, data, { 'headers': { 'ContentType': 'application/json' } });\n      return axios.post(apiConstant.VERIFY_DOCS_LISTING,data, AuthService.getHeader() );\n    }\n    listDocsResubmit(data){\n        //return axios.post(apiConstant.VERIFY_DOCS_LISTING, data, { 'headers': { 'ContentType': 'application/json' } });\n      return axios.post(apiConstant.VERIFY_DOCS_LISTING_RESUBMIT,data, AuthService.getHeader() );\n    }\n    \n    getListOfRoles(){\n        return axios.get(apiConstant.LIST_OF_ROLES , AuthService.getHeader());\n    }\n\n    getOneVerify(productId){\n        //return axios.get(apiConstant.VERIFY_DOCS_BY_ID + '&txnId=' + productId, AuthService.getHeader());\n        return axios.get(apiConstant.VERIFY_DETAILS + '?txnId=' + productId, AuthService.getHeader());\n    }\n\n    getOneDataEntry(productId){\n        \n        return axios.get(apiConstant.DATAENTRY_DETAILS + '?txnId=' + productId, AuthService.getHeader());\n    }\n\n\n    saveDataEntry(postdata){\n        return axios.post(apiConstant.SAVE_DATAENTRY_DETAILS, postdata, AuthService.getHeader());\n    }\n\n    unlockTransectionsSkip(postdata){\n        return axios.post(apiConstant.UNLOCK_SKIP_VERIFICATION, postdata, AuthService.getHeader());\n    }\n    \n    getStaticData(role){\n        return axios.get(apiConstant.VERIFICATION_STATIC_DATA + '?role=' + role, AuthService.getHeader());\n    }\n\n    getTotalToBeProcessed(){\n        return axios.get(apiConstant.RECORD_TOBE_PROCESSED, AuthService.getHeader());\n    }\n\n    approveDocs(product) {\n        return axios.post(apiConstant.VERIFY_DOCS_APPROVE, product, AuthService.getHeader());\n    }\n\n    searchMobileNo(mobile) {\n        return axios.get(apiConstant.SEARCH_BY_MOBILE_NO+ '?role=DE&mobileNumber='+mobile, AuthService.getHeader());\n    }\n\n    searchDistributer(object){\n        return axios.get(apiConstant.DISTRIBUTER_SEARCH+'?mobileNumber='+object.mobileNumber, AuthService.getHeader());\n    }\n\n    uploadDistrubuter(formData){\n        return axios.post(apiConstant.DISTRIBUTER_UPLOAD, formData, AuthService.getHeader());\n    } \n    \n    searchDistributerResubmit(object){\n        return axios.get(apiConstant.DISTRIBUTER_SEARCH_RESUBMIT+'?mobileNumber='+object.mobileNumber, AuthService.getHeader());\n    } \n\n    uploadDistrubuterResubmit(formData){\n        return axios.post(apiConstant.DISTRIBUTER_UPLOAD_RESUBMIT, formData, AuthService.getHeader());\n    } \n\n\n    \n}\n\n\n\nexport default new ActivationService();\n","import React from 'react';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport { Redirect } from 'react-router-dom'\nimport { Link } from \"react-router-dom\";\n\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport HistoryIcon from '@material-ui/icons/History';\n\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport UserService from \"./service/UserService\";\n\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n//import RouterComponent from '../RouterComponent'; \n\n\n\n\nexport const AdminMenuList = (\n  <div>\n    {/* <ListSubheader inset>Upload & Create</ListSubheader> */}\n   \n\n    <ListItem button component='a' href={\"#/welcome\"} >  \n      <ListItemIcon>\n        <EmojiEmotionsIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Welcome\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"#/msisdn-status\"} >  \n      <ListItemIcon>\n        <FileCopyIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"MSISDN History\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"#/packs\"} >  \n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Pack Activation\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"#/offerupload\"} >\n      <ListItemIcon>\n        <LocalOfferIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Offer Upload\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"#/banners\"} >\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Upload Banner\" />\n    </ListItem>\n\n    \n    <ListItem button component='a' href={\"#/backoffice\"} >\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"BO Agent\" />\n    </ListItem>\n\n\n    {/* <ListItem button component='a' href={\"#/role\"} >\n      <ListItemIcon>\n        <PeopleIcon /> \n      </ListItemIcon>\n      <ListItemText primary=\"Role Management\" />\n    </ListItem> */}\n  \n    \n    <ListItem button component='a' href={\"#/report\"}>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Reports\" />\n    </ListItem>\n\n\n  </div>\n);\n\n\nexport const  BOAMenuList  = (\n\n  <div>\n    {/* selected */}\n   \n    <ListItem component='a' href={\"#/verify\"} button>\n      <ListItemIcon>\n        <VerifiedUserIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Acquisition Verification\" />\n    </ListItem>\n\n    {/* sprint 7 &  8 changes */}\n    <ListItem component='a' href={\"#/resubmit-verify\"} button>\n     <ListItemIcon>\n        <HistoryIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Resubmit Verification\" />\n    </ListItem>   \n    \n  </div>\n);\n\n\nexport const DEMenuList = (\n  <div>\n    {/* <ListSubheader inset>Update Acquisition</ListSubheader> */}\n\n    <ListItem component='a' href={\"#/dataentry\"} button>\n      <ListItemIcon>\n        <VerifiedUserIcon />\n      </ListItemIcon>\n        {/* sprint 7 &  8 changes */}\n      <ListItemText primary=\"Acquisition Data Entry\" />\n      {/* <ListItemText primary=\"Data Entry\" /> */}\n\n    </ListItem> \n    \n    {/* sprint 7 &  8 changes */}\n    <ListItem component='a' href={\"#/resubmit-dataentry\"} button>\n     <ListItemIcon>\n        <HistoryIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Resubmit Data Entry\" />\n    </ListItem>   \n\n  </div>\n);\n\n\nexport const DISTMenuList = (\n  <div>\n    {/* <ListSubheader inset>Upload</ListSubheader> */}\n   \n    <ListItem component='a' href={\"#/distributor\"} button>\n      <ListItemIcon>\n        <CloudUploadIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Upload Document\" />\n    </ListItem>   \n\n    <ListItem component='a' href={\"#/dist-resubmit\"} button>\n      <ListItemIcon>\n        <CloudUploadIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Resubmit Document\" />\n    </ListItem>   \n    \n    <ListItem button component='a' href={\"#/report\"}>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Reports\" />\n    </ListItem>\n\n  </div>\n);\n\nfunction logoutPortal(){\n  //console.log(\"yo_man\")\n\n  UserService.logout()\n  .then(res => {\n   // {\"status\":200,\"message\":\"Success\",\"result\":{\"message\":\"User logged out successfully\"}}\n   //console.log(res.data);   \n   localStorage.clear();\n   window.location.replace(\"#/login\");\n   return;\n  //  if(res.data && res.data.message == \"Unauthorised\" || res.data.message == \"Success\"){\n  //   localStorage.clear();\n  //   window.location.replace(\"#/login\");\n  //   return;\n  //  }\n\n  });\n //  window.localStorage.setItem(\"userDetails\", '' );\n}\n\nexport const LogoutMenu = (\n  <div>\n    <Link style={{textDecoration: \"none\"}} onClick={logoutPortal}>\n      <ListItem button>\n          <ListItemIcon><PowerSettingsNewIcon/></ListItemIcon><ListItemText primary=\"Logout\" />\n      </ListItem>\n    </Link>\n  </div>\n);\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { textAlign } from '@material-ui/system';\nimport * as Menu from './LeftMenuBar';\nimport AirtellLogo from './airtellogo.png';\n\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Badge from '@material-ui/core/Badge';\nimport Button from '@material-ui/core/Button';\nimport ActivationService from \"./service/ActivationService\";\nimport {resolveResponse} from \"../utils/ResponseHandler\";\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    endMenu: {\n        display: 'flex',\n        flexDirection: 'row reverse'\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        //backgroundColor: '#f44336'\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nexport default function PostLoginNavBar(props) {\n\n    const [values, setValues] = React.useState({\n        acquisitionCount: '',\n        resubmitCount:''\n    });\n    \n\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    function handleDrawerOpen() {\n        setOpen(true);\n    }\n\n    function handleDrawerClose() {\n        setOpen(false);\n    }\n\n    function handleClick(e) {\n        console.log(e.target.innerText)\n        //this.props.history.push('/login');\n    }\n    const mystyle = {\n        height: \"40px\",\n        width: \"30px\"\n    };\n\n    var userDetails = localStorage.getItem(\"userDetails\")\n    userDetails = userDetails && JSON.parse(userDetails);\n     \n    var roleCode = userDetails && userDetails.roleCode; \n\n\n    var acquisitionCountText='', resubmitCountText=''; \n    if(roleCode == \"DE\" || roleCode == \"BOA\"){\n        acquisitionCountText = \"Acquisition records to be processed: \" ; // ACQUISITION RECORDS TO BE PROCESSED:\n        resubmitCountText =  \"Resubmit records to be processed:  \"; //'RESUBMIT RECORDS TO BE PROCESSED: ';\n    }\n\n  //  console.log(\"propsss\", props)\n    return (\n\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n\n            >\n                <Toolbar>\n\n                    <IconButton\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n\n                    >\n                        <MenuIcon />\n                    </IconButton>\n\n                    {/* <div style={{ width: \"250px\" }}>\n                        <Typography variant=\"h6\" noWrap>\n                            SL MITRA Retailer Portal\n                    </Typography>\n                    </div>\n                    <Grid direction=\"row\" container  justify=\"space-between\"   spacing={10} style={{ paddingLeft: \"10px\", paddingRight: \"10px\"}}>\n                        <Grid item xs={12} sm={1}></Grid>\n                        <Grid item xs={12} sm={3} style={{textAlign:\"right\"}}>\n                            <Typography variant=\"p\" style={{ color: \"white\" }} noWrap>\n                              {userDetails && userDetails.loginName ? userDetails.loginName.toUpperCase() : null}\n                            </Typography> \n                        </Grid>\n                    </Grid> */}\n\n\n                        {/* sprint 8 changes */}\n                        <Grid\n                                justify=\"space-between\"\n                                container\n                            >\n                        <Grid item >\n                        <Typography variant=\"h6\" noWrap>\n                            SL MITRA Retailer Portal\n                         </Typography>\n                        </Grid>\n\n                        <Grid item >\n\n                        <Grid\n                           \n                            container\n                            direction=\"row\"\n                        >\n\n                            <Grid item >\n                                <Typography style={{ color: \"white\" }} >\n                                {acquisitionCountText} {localStorage.getItem(\"acquisitionCount\") || ''}\n                                </Typography> \n                            </Grid>\n                                <Grid item >\n                                    &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                              </Grid>\n\n                            <Grid item >\n                                <Typography style={{ color: \"white\" }} noWrap>\n                                {resubmitCountText} {localStorage.getItem(\"resubmitCount\") || ''}\n                                </Typography> \n                            </Grid>\n                             <Grid item >\n                                    &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                              </Grid>\n\n                           \n\n                            <Grid item>\n                                <Typography variant=\"p\" style={{ color: \"white\" }} noWrap>\n                                {userDetails && userDetails.loginName ? userDetails.loginName.toUpperCase() : null}\n                                </Typography> \n                            </Grid>\n\n\n                        </Grid>\n\n\n\n                        </Grid>\n\n                        </Grid>\n\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <img style={{ marginRight: \"73px\", width: \"100px\" }} src={AirtellLogo} />\n\n                    {/* <img width=\"40\" style={{ color: \"red\", marginRight:\"130px\"}} src={ 'https://www.pinclipart.com/picdir/middle/498-4988102_36-53k-airtel-logos-of-indian-companies-quiz.png'} /> */}\n\n                    <IconButton onClick={handleDrawerClose}  >\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon style={{ color: \"gray\" }} /> : <ChevronRightIcon style={{ color: \"gray\" }} />}\n                    </IconButton>\n                </div>\n\n\n\n                <Divider />\n                {roleCode == \"ADMIN\" ? <List>{Menu.AdminMenuList}</List> : null}\n                {roleCode == \"BOA\" ? <List>{Menu.BOAMenuList}</List> : null}\n                {roleCode == \"DE\" ? <List>{Menu.DEMenuList}</List> : null}\n                {roleCode == \"DIST\" ? <List>{Menu.DISTMenuList}</List> : null}\n\n                <Divider />\n                <List>{Menu.LogoutMenu}</List>\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n            </main>\n        </div>\n    );\n}\n\n\n// BO agent : BOA\n// Data Entry : DE\n// Admin : ADMIN\n// Distributor : DIST\n\n","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport $ from 'jquery';\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nfunction addMonths(date, months) {\n  var d = date.getDate();\n  date.setMonth(date.getMonth() + +months);\n  if (date.getDate() != d) {\n    date.setDate(0);\n  }\n  return date;\n}\n\nexport default function MaterialUIPickers(props) {\n  var maxAllowedDate ='';\n  var startd = new Date(); \n  startd.setHours(0,0,0,0);\n  var endd = new Date(); \n  endd.setHours(23,59,59,59);\n\n  // The first commit of Material-UI\n  var [selectedStartDate, setSelectedStartDate] = React.useState(startd);\n  var [selectedEndDate, setSelectedEndDate] = React.useState(endd);\n  const handleStartDateChange = date => {\n    setSelectedStartDate(date);\n    props.callbackFromParent.myCallback(date,\"START_DATE\");\n  };\n  const handleEndDateChange = date => {\n    setSelectedEndDate(date);\n    props.callbackFromParent.myCallback(date,\"END_DATE\");\n  };\n\n  const showSingleDate =  props.callbackFromParent && props.callbackFromParent.showSingleDate; \n  const d1DateRangeFlag =  props.callbackFromParent && props.callbackFromParent.d1DateRangeFlag; \n\n\n  if(!selectedStartDate){\n    selectedStartDate = new Date().getTime();\n  }\n  \n\n  var dateObj = new Date(selectedStartDate);\n  dateObj.setMonth(dateObj.getMonth() + 6);\n\n  var maxAllowedDate = dateObj.setDate(dateObj.getDate() - 1);\n\n\n  var currDate = new Date();\n  var back18Month= currDate.setMonth(currDate.getMonth() - 18);\n\n\n  if(selectedStartDate <  back18Month){\n    selectedStartDate = back18Month;\n  }\n\n  if(selectedStartDate >  selectedEndDate){\n    selectedEndDate = new Date().getTime();\n  }\n\n\n  var d = new Date();\n  if(showSingleDate){\n    maxAllowedDate = d.setDate(d.getDate()-1);\n  }\n\n  if(d1DateRangeFlag){\n    maxAllowedDate = d.setDate(d.getDate()-1);\n  }\n\n  if(showSingleDate && selectedStartDate.getDate() == new Date().getDate()){\n    selectedStartDate = d;\n  }\n\n\n  if(d1DateRangeFlag && selectedStartDate.getDate() == new Date().getDate()){\n    selectedStartDate = d;\n  }\n\n  if(d1DateRangeFlag && selectedEndDate.getDate() == new Date().getDate()){\n    selectedEndDate = d;\n  }\n\n $('.MuiInputBase-inputAdornedEnd').prop('readonly', true);\n\n return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container justify=\"space-around\">\n     \n        <KeyboardDatePicker\n          disabled={props.callbackFromParent && props.callbackFromParent.generateReportLoader}\n          margin=\"normal\"\n          //readOnly=\"true\"\n          // disabled=\"true\"\n          disableFuture=\"true\"\n          allowKeyboardControl=\"true\"\n          minDate={back18Month}\n          minDateMessage=\"Only 18 months back report can be fatch.\"\n          maxDate={maxAllowedDate}\n          maxDateMessage=\"Current date report won't be available\"\n          id=\"date-picker-dialog\"\n          label={ showSingleDate ? \"Select Verification Date\" :  \"Start Date\" }\n          format=\"dd/MM/yyyy\"\n          value={selectedStartDate ? selectedStartDate : maxAllowedDate}\n          onChange={handleStartDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n        { !showSingleDate ? <KeyboardDatePicker\n          disableFuture=\"true\"\n          disabled={props.callbackFromParent && props.callbackFromParent.generateReportLoader}\n          maxDateMessage=\"Max allowed date range is 6 months.\"\n      //    minDateMessage=\"End date can't be less than start date.\"\n          minDate={selectedStartDate}\n          maxDate={maxAllowedDate}\n          margin=\"normal\"\n          id=\"date-picker-dialog\"\n          label=\"End Date\"\n          format=\"dd/MM/yyyy\"\n          value={selectedEndDate ? selectedEndDate : maxAllowedDate}\n          onChange={handleEndDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }} \n        />: \"\"}\n          \n       \n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React, { useState } from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport Notify from \"../../utils/Notify\";\nimport Input from \"@material-ui/core/Input\";\nimport ActivationService from \"../service/ActivationService\";\n\nimport TextField from '@material-ui/core/TextField';\n\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MaterialUIPickers from \"./MaterialUIPickers\";\n\nimport DoneSharpIcon from '@material-ui/icons/DoneSharp';\nimport { CSVLink } from \"react-csv\";\nimport * as moment from 'moment';\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\n \nclass Report extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          //  products: {\"status\":200,\"message\":\"ok\",\"result\":{\"data\":[{\"msisdn\":\"753651094\",\"simNumber\":\"00017\",\"customerPoiId\":\"801912575V\",\"activationDate\":\"15-01-2020 13:44:34\",\"zone\":\"West 1\",\"imageCount\":3,\"status\":\"av_pending\",\"submittedUserId\":\"9560210319\",\"submittedDate\":1582535180056,\"submittedDateStr\":null,\"rejectionReason\":null,\"comment\":null},{\"msisdn\":\"753651095\",\"simNumber\":\"00017\",\"customerPoiId\":\"801912575V\",\"activationDate\":\"15-01-2020 13:44:34\",\"zone\":\"West 1\",\"imageCount\":3,\"status\":\"av_pending\",\"submittedUserId\":\"9560210319\",\"submittedDate\":1582535180056,\"submittedDateStr\":null,\"rejectionReason\":null,\"comment\":null}]}},\n          products:'',\n          reporttype: '',\n            startDate: \"\",\n            endDate: \"\",\n            month: \"\",\n            year: '', \n            days: '',\n            day:'',\n            numofDays : [],\n            listofYear: [], \n            responseFlag: false,\n            responseFlagMsg:'',\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All',\n            reportName : \"Download Report\",\n            generateReportLoader:false,\n            generateReportMsg: \"\", \n            roleCode:\"\",\n            retrieveType:\"BY_SUBMIT_DATE\", \n            showSingleDate: false, \n            retrieveTypeAll:false,\n            resetCalander:false,\n            filenameToGo:\"\",\n            retrieveTypeDataEntry:false,\n            d1DateRangeFlag:false\n        };\n        this.getReportDetails = this.getReportDetails.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onChangeRetriveBy = this.onChangeRetriveBy.bind(this);\n        this.myCallback = this.myCallback.bind(this);\n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value});\n\n        if(e.target.value.includes(\"Select All\")){\n            this.setState({selectedZone: this.state.listofzones})\n            this.setState({selectAllzone: \"Remove All\"})\n        }\n    \n        if(e.target.value.includes(\"Remove All\")){\n            this.setState({selectedZone: []})\n            this.setState({selectAllzone: \"Select All\"})\n        }\n\n    }\n    dateFormat(date){ \n      return  moment.unix(date / 1000).format(\"DD/MM/YYYY\")\n\n       // return moment.utc(date).format('DD-MM-YYYY');\n    }\n\n    componentDidMount() {\n\n        var userDetails = localStorage.getItem(\"userDetails\")\n        userDetails = userDetails && JSON.parse(userDetails);\n        this.setState({roleCode: userDetails.roleCode}) ; \n        var roleCode = userDetails && userDetails.roleCode; \n    \n        if(roleCode == \"ADMIN\"){\n            ActivationService.getStaticData(roleCode).then(res => {\n                let data = resolveResponse(res);\n                this.setState({listofzones: data.result && data.result.zones}) \n            })  \n        }\n\n        \n        for(var i = 2018; i <= new Date().getFullYear(); i++){\n           this.state.listofYear.push(i); \n        }\n        for(var i = 1; i <= 60; i++){\n            this.state.numofDays.push(i); \n        }\n       \n\n    }\n\n    onChange = e => {\n\n        this.setState({ [e.target.name]: e.target.value, retrieveTypeAll: false,  retrieveType:\"BY_SUBMIT_DATE\", startDate : '', endDate:''  });\n        if(e.target.value == 'zoneWiseDetailedReport'){\n            this.setState({ showZoneSelection: true });\n        }else{\n            this.setState({ showZoneSelection: false });\n        }\n\n        \n        if(e.target.value == 'disconnectionReport' || e.target.value == 'reconnectionReport'||  e.target.value == 'dailyActiveRetailers'){\n            this.setState({ showSingleDate: true , retrieveType: '', });\n        }else{\n            this.setState({ showSingleDate: false });\n        }\n\n        if(e.target.value == 'simSwapCount' || e.target.value == 'mpinResetCount'||  e.target.value == 'reloadAndBillPayCount' ||  e.target.value == 'idleRetailers' ||  e.target.value == 'acquisitionCountReport'){\n            this.setState({ d1DateRangeFlag: true, retrieveType: '' });  \n        }else{\n            this.setState({ d1DateRangeFlag: false });  \n        }\n\n        if(e.target.value == 'agentStatusReport'){\n            this.setState({ retrieveTypeAll: true });\n        }\n\n        if(e.target.value == 'agentWisePerformanceLog' || e.target.value == \"agentAuditReport\"  || e.target.value == \"ipacsReadyReport\"){\n            this.setState({ retrieveTypeDataEntry: true });\n        }else{\n            this.setState({ retrieveTypeDataEntry: false }); \n        }\n\n        this.setState({responseFlag : false, dataEntryData :false, generateReportLoader : false,  responseFlagMsg : \"\", resetCalander:true });\n\n    } \n\n    onChangeRetriveBy = e => {\n        this.setState({ [e.target.name]: e.target.value });\n        this.setState({responseFlag : false, dataEntryData :false, generateReportLoader : false,  responseFlagMsg : \"\" });\n    } \n\n    getReportDetails() {\n        this.setState({verficationname:\"\", filenameToGo : this.state.reporttype});\n\n        if(!this.state.startDate){\n            var startd = new Date(); \n            startd.setHours(0,0,0,0);\n            if(this.state.reporttype == 'disconnectionReport' || this.state.reporttype == 'reconnectionReport' || this.state.reporttype =='dailyActiveRetailers' || this.state.reporttype  == 'simSwapCount' || this.state.reporttype =='mpinResetCount' || this.state.reporttype =='reloadAndBillPayCount' || this.state.reporttype == 'idleRetailers' || this.state.reporttype =='acquisitionCountReport'){\n                startd.setDate(startd.getDate() - 1);\n            }\n            this.state.startDate = startd.getTime();\n            this.setState({ startDate : startd.getTime() }, () => {\n                console.log(\"startDate : setting\", this.state.startDate);\n            }); \n\n        }else{\n            var startd = new Date(this.state.startDate); \n            startd.setHours(0,0,0,0);\n            this.setState({ startDate : startd.getTime() }); \n        }\n      \n        if(!this.state.endDate){\n            var endd = new Date(); \n            endd.setHours(23,59,59,59);   \n            if(this.state.reporttype  == 'simSwapCount' || this.state.reporttype =='mpinResetCount' || this.state.reporttype =='reloadAndBillPayCount' || this.state.reporttype == 'idleRetailers' || this.state.reporttype =='acquisitionCountReport'){\n                endd.setDate(endd.getDate() - 1);\n            } \n            this.state.endDate = endd.getTime();\n            this.setState({ endDate : endd.getTime()  }, () => {\n                console.log(\"endDate : setting\", this.state.endDate);\n            }); \n        }else{\n            var endd = new Date(this.state.endDate); \n            endd.setHours(23,59,59,59);\n            this.state.endDate = endd.getTime();\n        }\n\n          \n        if(!this.state.reporttype){\n            Notify.showError(\"First select report type\");\n            return;\n        }\n\n        console.log(\"year\",this.state.year , \"month\", this.state.month); \n\n\n        if(this.state.reporttype == 'monthlyActiveRetailers'){\n         \n            var firstDate = new Date(\"1 \" + this.state.month + ' ' + this.state.year);\n            firstDate.setHours(0,0,0,0);\n            var startDate =  new  Date(firstDate.getDate()+ ' '+ this.state.month+ ' '+ this.state.year);\n            var endd = new Date(firstDate.getFullYear(), firstDate.getMonth() + 1, 0);\n            endd.setHours(23,59,59,59);  \n            this.state.startDate = startDate.getTime();\n            this.setState({ startDate : startDate.getTime() }, () => {\n              //  console.log(\"startDate : setting\", this.state.startDate);\n            }); \n         //   console.log(\"startDate\", new Date( this.state.startDate ));   \n            this.state.endDate = endd.getTime();\n            this.setState({ endDate : endd.getTime() }, () => {\n               // console.log(\"endDate : setting\", this.state.endDate);\n            }); \n          //  console.log(\"endDate\", new Date( this.state.endDate ) );   \n        }\n\n       \n        var data = {\n               retrieveType: this.state.retrieveType,\n               startDate: this.state.startDate,\n               endDate: this.state.endDate,\n               zones: this.state.selectedZone.length ? this.state.selectedZone : null\n           } \n           console.log(\"param data\" ,data)\n\n        if(this.state.reporttype == 'reloadAndBillPayCount' || this.state.reporttype == 'simSwapCount' || this.state.reporttype == 'mpinResetCount' || this.state.reporttype == 'monthlyActiveRetailers' || this.state.reporttype =='idleRetailers' || this.state.reporttype =='acquisitionCountReport'){\n            data = {\n                startDate: this.state.startDate,\n                endDate: this.state.endDate,\n            }\n           \n        }\n       \n        if(this.state.reporttype == 'disconnectionReport' || this.state.reporttype == 'reconnectionReport' || this.state.reporttype == 'dailyActiveRetailers'){\n            data = {\n                date: this.state.startDate,\n            }\n        }\n\n        if(this.state.reporttype == 'retailerOnboardedReport' ){\n            data = {\n                range: this.state.day || 0\n            }\n        }\n       \n        \n\n      this.setState({ responseFlag : false, responseFlagMsg : '', dataEntryData :false, reportName:\"Download Report\", generateReportLoader : true,generateReportMsg : \"Generating report please wait...\" });\n\n        \n        AdminService.sentReportToEmail(data,this.state.reporttype)\n            .then((res) => {\n\n                let data = resolveResponse(res);\n            \n                if(this.state.reporttype == \"agentStatusReport\" && data.result){\n\n                    if(data.result && data.result.verifications)\n                    this.setState({ products: data.result.verifications, responseFlag : true, reportName:\"Verification Report\" });\n                    if(data.result && data.result.dataEntry)\n                    this.setState({ dataEntryData: data.result.dataEntry});\n                    this.setState({ generateReportMsg:  \"Ready to Download\", verficationname:\"VerificationReport_of_\"});\n\n                    this.setState({  generateReportLoader: false});\n\n                }else if(data.result && data.result.data && data.result.data.length ){\n                    this.setState({ generateReportMsg:  \"Ready to Download\"});\n                    this.setState({ products: data.result.data, responseFlag : true});\n\n                    if(this.state.reporttype == \"detailedPendingReport\"){\n                        this.setState({ filenameToGo: \"distributorDetailReport\"});\n                    }\n                    this.setState({  generateReportLoader: false});\n\n                }else{\n                    this.setState({ generateReportMsg:  \"\",  generateReportLoader: false});\n                    this.setState({ responseFlagMsg : \"No Records Found\" });\n                }\n                \n            });\n    }\n\n\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    myCallback = (date, fromDate) => {\n\n        if (fromDate === \"START_DATE\") {\n            console.log(\"date\",date)\n            this.setState({ startDate: new Date(date).getTime(),  generateReportLoader: false, responseFlag:false, responseFlagMsg : \"\", dataEntryData:\"\" });\n       \n            var dateObj = new Date(date);\n            dateObj.setMonth(dateObj.getMonth() + 6);\n            dateObj.setHours(23,59,59,59);\n            dateObj.setDate(dateObj.getDate() - 1);\n           \n            var endD = this.state.endDate; \n            //console.log(\"endDate\",  new Date(this.state.endDate) ); \n            if(!this.state.endDate){\n                 endD = new Date(); \n                 endD.setHours(23,59,59,59);\n            }\n\n            console.log(\"start: \" +date +\" | start+6month \"+ dateObj,   \"  | end date: \"+ new Date(endD), endD > dateObj.getTime() )\n          \n            if(endD > dateObj.getTime()){\n                this.setState({ disabledGenButton: true  });\n            }else{\n                this.setState({ disabledGenButton: false  });\n            }\n            \n        } else if (fromDate === \"END_DATE\") {\n            this.setState({ endDate: new Date(date).getTime(), generateReportLoader: false, responseFlag:false, responseFlagMsg : \"\",dataEntryData:\"\" });\n            this.setState({ disabledGenButton: false  });\n        }\n\n    };\n\n    \n\n\n\n\n\n    render() {\n\n        const dateParam = {\n            myCallback: this.myCallback,\n            startDate: '',\n            endDate: '', \n            showSingleDate: this.state.showSingleDate,\n            resetCalander : this.state.resetCalander,\n            generateReportLoader: this.state.generateReportLoader,\n            d1DateRangeFlag: this.state.d1DateRangeFlag\n           \n\n        }\n\n        var adminReports = []; \n\n\n\n        //POST /reports/ftaDeviationReportCsv\n        adminReports.push(<MenuItem value=\"agentStatusReport\">Agent Status Report</MenuItem>); \n        adminReports.push(<MenuItem value=\"backOfficeReceptionReport\">Back Office Reception Report</MenuItem>); \n        adminReports.push(<MenuItem value=\"backOfficeReceptionReportWithDetails\">Back Office Reception Report with Details</MenuItem>); \n        adminReports.push(<MenuItem value=\"agentWisePerformanceLog\">Agent Wise Performance Report</MenuItem>); \n        adminReports.push(<MenuItem value=\"agentAuditReport\">Agent Audit Report</MenuItem>); \n        adminReports.push(<MenuItem value=\"ipacsReadyReport\">IPACS Ready Report</MenuItem>); \n        adminReports.push(<MenuItem value=\"noneComplainceReport\">None Compliance Report</MenuItem>); \n        adminReports.push(<MenuItem value=\"omniTransferReport\">OMNI Transfer Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"zoneWiseDetailedReport\">Zone Wise Detailed Report </MenuItem>);\n        adminReports.push(<MenuItem value=\"simSwapReport\">SIM Swap Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"disconnectionReport\">D-1 Disconnect Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"reconnectionReport\">D-1 Re-connection Report</MenuItem>);\n\n        //sprint 8 changes\n        adminReports.push(<MenuItem value=\"simSwapCount\">D-1 Sim Swap Count Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"mpinResetCount\">D-1 Mpin Reset Count Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"reloadAndBillPayCount\">D-1 Reload & Bill Pay Count Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"idleRetailers\">D-1 Idle Retailers Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"monthlyActiveRetailers\">D-1 Monthly Active Retailers Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"dailyActiveRetailers\">D-1 Daily Active Retailers Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"acquisitionCountReport\">D-1 SUK vs CYN Count Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"retailerOnboardedReport\">D-1 Retailer Onboarded Report</MenuItem>);\n\n        // BY_VERIFICATION_DATE,\n        // BY_DATA_ENTRY_DATE\n        var agentStatusRetrieveBy = []; \n        agentStatusRetrieveBy.push(<MenuItem key={'BY_VERIFICATION_DATE'} value={'BY_VERIFICATION_DATE'} >By Verification Date</MenuItem>); \n        agentStatusRetrieveBy.push(<MenuItem key={'BY_DATA_ENTRY_DATE'} value={'BY_DATA_ENTRY_DATE'} >By Data Entry Date</MenuItem>); \n       \n        var retrieveTypeFileName = this.state.retrieveType ? this.state.retrieveType.toLowerCase()+\"_\" : \"\"; \n        var downloadfilename = this.state.verficationname + this.state.filenameToGo+\"_\"+ retrieveTypeFileName + this.dateFormat(this.state.startDate)+ \"_to_\"+this.dateFormat(this.state.endDate)+\".csv\"; \n\n   //   console.log(\"this.state.reporttype\",this.state.reporttype)\n\n        if(this.state.reporttype == 'disconnectionReport' || this.state.reporttype == 'reconnectionReport'){\n            downloadfilename =  this.state.reporttype+\"_by_verification_date_\"+this.dateFormat(this.state.startDate)+\".csv\"; \n        }\n        if(this.state.reporttype == 'dailyActiveRetailers'){\n            downloadfilename =  this.state.reporttype+\"_report_of_\"+this.dateFormat(this.state.startDate)+\".csv\"; \n        }\n        if(this.state.reporttype == 'retailerOnboardedReport'){\n            downloadfilename =  this.state.reporttype+\"_report_for_\"+this.state.day+\"_days.csv\"; \n        }\n        \n\n        return (\n\n            <React.Fragment>\n                <PostLoginNavBar />\n                <div style={{ padding: \"20px\" }}>\n                    <br />\n                    <Paper style={{ padding: \"40px\" }}>\n\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                        Report Download\n                        </Typography>\n             \n                        <Grid syt container spacing={2} container\n                            direction=\"row\"\n                            justify=\"right\"\n                            alignItems=\"center\">\n                            <Grid item xs={12} sm={3} >\n                                <FormControl style={styles.multiselect}>\n                                {/* ftaDeviationReport */}\n                                    <InputLabel htmlFor=\"Active\" required={true}>Select type of report</InputLabel>\n                                    <Select name=\"reporttype\" disabled={this.state.generateReportLoader} value={this.state.reporttype} onChange={this.onChange}>\n                                    <MenuItem value=\"distributorLastUploadedData\">Distributor Uploaded Data Status</MenuItem>\n                                    <MenuItem value=\"detailedPendingReport\">Distributor Detail Report</MenuItem>\n                                    <MenuItem value=\"rejectReport\"> Distributor Reject Data Report</MenuItem>\n                                    <MenuItem value=\"summaryReportForDistributor\">Distributor Summary Report</MenuItem>\n                                    <MenuItem value=\"ftaDeviationReport\">FTA Deviation Report</MenuItem>\n                                    \n                                    {this.state.roleCode===\"ADMIN\" ? adminReports : \"\"}\n                                    </Select>\n                                </FormControl>\n\n                            </Grid>\n\n                            {this.state.roleCode==\"ADMIN\" && this.state.showZoneSelection ? \n                            <Grid item xs={12} sm={3}>\n                                <FormControl style={styles.selectStyle}>\n                                    <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                    <Select \n                                    disabled={this.state.generateReportLoader}\n                                    labelId=\"demo-mutiple-name-label\"\n                                    id=\"demo-mutiple-name\"\n                                    multiple\n                                    name=\"selectedZone\"\n                                    value={this.state.selectedZone}\n                                    onChange={this.zoneChange}\n                                    input={<Input />}\n                                    MenuProps={MenuProps}\n                                    >\n                                    <MenuItem key={this.state.selectAllzone} value={this.state.selectAllzone} >\n                                        <b> {this.state.selectAllzone}   </b>                                         \n                                    </MenuItem>\n                                    {this.state.listofzones ? this.state.listofzones.map(name => (\n                                        <MenuItem key={name} value={name} >\n                                            {name}\n                                        </MenuItem>\n                                    )): \"\"}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            :\"\"}\n\n                          {this.state.reporttype != 'disconnectionReport' && this.state.reporttype != 'reconnectionReport' && this.state.reporttype != 'simSwapCount' && this.state.reporttype != 'mpinResetCount' && this.state.reporttype != 'reloadAndBillPayCount' && this.state.reporttype != 'idleRetailers' &&  this.state.reporttype != 'monthlyActiveRetailers' && this.state.reporttype != 'dailyActiveRetailers' && this.state.reporttype !=  'acquisitionCountReport' &&  this.state.reporttype != 'retailerOnboardedReport'? \n                            <Grid item xs={12} sm={3}>\n                                <FormControl style={styles.selectStyle}>\n                                    <InputLabel id=\"demo-mutiple-name-label\">Retrieve Type</InputLabel>\n                                    <Select\n                                    disabled={this.state.generateReportLoader}\n                                    name=\"retrieveType\"\n                                    value={this.state.retrieveType}\n                                    onChange={this.onChangeRetriveBy}\n                                    >\n                                     {this.state.reporttype != 'simSwapReport' ?  \n                                        <MenuItem key={'BY_FTA_DATE'} value={'BY_FTA_DATE'} >\n                                        By FTA Date\n                                    </MenuItem>\n                                    : \"\"} \n                                    <MenuItem key={'BY_SUBMIT_DATE'} value={'BY_SUBMIT_DATE'} >\n                                        By Submit Date\n                                    </MenuItem>\n\n                                    \n                                    {this.state.retrieveTypeDataEntry ?  \n                                        <MenuItem key={'BY_DATA_ENTRY_DATE'} value={'BY_DATA_ENTRY_DATE'} >\n                                            By Data Entry Date\n                                        </MenuItem>\n                                    : \"\"}\n\n                                    {this.state.retrieveTypeAll ? agentStatusRetrieveBy : \"\"}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            :\"\"}\n\n                                {this.state.reporttype =='retailerOnboardedReport' ? \n                                    <Grid item xs={12} sm={3}>\n                                    <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select No. of Days</InputLabel>\n                                        <Select \n                                        disabled={this.state.generateReportLoader}\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        \n                                        name=\"day\"\n                                        value={this.state.day}\n                                        onChange={this.onChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        {this.state.numofDays ? this.state.numofDays.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                    \n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                            : \"\"}\n\n                          \n                            {this.state.reporttype != 'monthlyActiveRetailers' && this.state.reporttype != 'retailerOnboardedReport' ? \n                            <Grid item xs={12} sm={3} >\n                                <MaterialUIPickers  callbackFromParent={dateParam} /> \n\n                                </Grid>\n                            : \"\"}\n\n                            {this.state.reporttype =='monthlyActiveRetailers' ? \n                                    <Grid item xs={12} sm={3}>\n                                    <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Year</InputLabel>\n                                        <Select \n                                        disabled={this.state.generateReportLoader}\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        \n                                        name=\"year\"\n                                        value={this.state.year}\n                                        onChange={this.onChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        {this.state.listofYear ? this.state.listofYear.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                    \n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                            : \"\"}\n\n                            {this.state.reporttype =='monthlyActiveRetailers' ? \n                                <Grid item xs={12} sm={3}>\n                                    <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Month</InputLabel>\n                                        <Select \n                                        disabled={this.state.generateReportLoader}\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        \n                                        name=\"month\"\n                                        value={this.state.month}\n                                        onChange={this.onChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        <MenuItem key='1' value='jan'>January</MenuItem>\n                                        <MenuItem key='2' value='feb'>February</MenuItem>\n                                        <MenuItem key='3' value='mar'>March</MenuItem>\n                                        <MenuItem key='4' value='apr'>April</MenuItem>\n                                        <MenuItem key='5' value='may'>May</MenuItem>\n                                        <MenuItem key='6' value='jun'>June </MenuItem>\n                                        <MenuItem key='7' value='jul'>July</MenuItem>\n                                        <MenuItem key='8' value='aug'>August</MenuItem>\n                                        <MenuItem key='9' value='sept'>September</MenuItem>\n                                        <MenuItem key='10' value='oct'>October</MenuItem>\n                                        <MenuItem key='11' value='nov'>November</MenuItem>\n                                        <MenuItem key='12' value='dec'>December</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                :\"\"}\n\n                            \n                          \n\n                            </Grid>\n\n\n                        \n\n\n                            {/*                                 \n                            <Grid syt container spacing={4} container\n                            direction=\"row\"\n                            justify=\"right\"\n                            alignItems=\"center\">\n                                <Grid item xs={12} sm={8} item alignItems='flex-end'>\n                                    <MaterialUIPickers callbackFromParent={dateParam} />\n                                </Grid>\n                            </Grid> */}\n\n                        \n\n                            \n                            <br />\n                            <Grid syt container spacing={2} container\n                            direction=\"row\"\n                            justify=\"right\"\n                            alignItems=\"\">\n\n\n                            <Grid item xs={12} sm={3} item alignItems='flex-end'>\n                                \n                                {!this.state.generateReportLoader ? \n                                <Button disabled={this.state.disabledGenButton} variant=\"contained\" color=\"Primary\" style={{ marginLeft: '20px' }} onClick={this.getReportDetails} >Generate Report</Button>\n                                :\"\"}\n                                \n                                {this.state.generateReportLoader ? \n                                <Typography  component=\"h5\" color=\"primary\" gutterBottom>\n                                    {this.state.generateReportMsg}\n                                </Typography>\n                                :\"\"}\n                            </Grid>\n                            <Grid item xs={12} sm={9} item alignItems='flex-end'  >\n                                {this.state.responseFlag ? \n                                <CSVLink data={this.state.products}\n                                  //  filename={this.state.verficationname + this.state.reporttype+\"_\"+ this.state.retrieveType.toLowerCase()+\"_\"+this.dateFormat(this.state.startDate)+ \"_to_\"+this.dateFormat(this.state.endDate)+\".csv\"}\n                                    filename={downloadfilename}\n                                    className=\"btn btn-primary\"\n                                    target=\"_blank\"\n                                    >\n                                    <Typography component=\"h2\" variant=\"h6\" style={{ color: 'green' }} gutterBottom>\n                                        {this.state.reportName}\n                                    </Typography>\n                                    </CSVLink> \n                                    \n                                :\"\"}\n\n                                {this.state.dataEntryData ? \n                                <CSVLink data={this.state.dataEntryData}\n                                    //filename={\"dataEntry.csv\"}\n                                    filename={\"DataEntryReport_of_\"+this.state.reporttype+\"_\"+this.state.retrieveType.toLowerCase()+\"_\"+this.dateFormat(this.state.startDate)+ \"_to_\"+this.dateFormat(this.state.endDate)+\".csv\"} \n                                    className=\"btn btn-primary\"\n                                    target=\"_blank\"\n                                    >\n                                    <Typography component=\"h2\" variant=\"h6\" style={{ color: 'green' }} gutterBottom>\n                                        Data Entry Report\n                                    </Typography>\n                                    </CSVLink> \n                                    \n                                :\"\"}\n\n\n                                {/* {this.state.responseFlagMsg ?  <Typography component=\"h2\" variant=\"h6\" color=\"error\" gutterBottom>\n                                  No Records Found\n                                </Typography> : \"\" } */}\n\n                                <Typography component=\"h5\" color=\"error\" gutterBottom>\n                                  {this.state.responseFlagMsg}\n                                </Typography> \n                            </Grid>\n                        </Grid>\n\n\n                        <Grid syt container spacing={2} container\n                            direction=\"row\"\n                            justify=\"right\"\n                            alignItems=\"center\">\n                            <Grid item xs={12} sm={4} item >\n\n                            </Grid>\n\n                            <Grid item xs={12} sm={4} item >\n                                <br />\n                                {/* {this.state.responseFlag ?\n                                    <Typography component=\"h2\" variant=\"h6\" style={{ color: 'green' }} gutterBottom>\n                                        <DoneSharpIcon />  Report have been sent to your email id(s).\n                                        </Typography>\n                                    : \"\"} */}\n                            </Grid>\n                            <Grid item xs={12} sm={4} item >\n\n                           \n\n                            {this.state.responseFlag ? \n                                <Table data={this.state.products}/>\n\n                            :\"\"}\n\n                            \n\n\n                            </Grid>\n\n                        </Grid>\n\n\n\n                    </Paper>\n                </div>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n\nconst styles = {\n    tableStyle: {\n        display: 'flex',\n        justifyContent: 'left'\n    },\n    multiselect: {\n        minWidth: \"100%\",\n        marginBottom: '0px',\n    },\n    dateSelect: {\n        minWidth: \"100%\",\n        marginBottom: '0px',\n    },\n    selectStyle:{\n        // minWidth: '100%',\n          marginBottom: '0px',\n          minWidth: '100%',\n          maxWidth: '100%',\n    }\n}\n\n\nexport default Report;","import React, { useState } from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport Notify from \"../../utils/Notify\";\nimport Input from \"@material-ui/core/Input\";\nimport ActivationService from \"../service/ActivationService\";\n\nimport TextField from '@material-ui/core/TextField';\n\nimport $ from \"jquery\";\n\nimport AuthService from \"../service/AuthService\";\n\n\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MaterialUIPickers from \"./MaterialUIPickers\";\n\nimport DoneSharpIcon from '@material-ui/icons/DoneSharp';\nimport { CSVLink } from \"react-csv\";\nimport * as moment from 'moment';\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\n \nclass Report extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          //  products: {\"status\":200,\"message\":\"ok\",\"result\":{\"data\":[{\"msisdn\":\"753651094\",\"simNumber\":\"00017\",\"customerPoiId\":\"801912575V\",\"activationDate\":\"15-01-2020 13:44:34\",\"zone\":\"West 1\",\"imageCount\":3,\"status\":\"av_pending\",\"submittedUserId\":\"9560210319\",\"submittedDate\":1582535180056,\"submittedDateStr\":null,\"rejectionReason\":null,\"comment\":null},{\"msisdn\":\"753651095\",\"simNumber\":\"00017\",\"customerPoiId\":\"801912575V\",\"activationDate\":\"15-01-2020 13:44:34\",\"zone\":\"West 1\",\"imageCount\":3,\"status\":\"av_pending\",\"submittedUserId\":\"9560210319\",\"submittedDate\":1582535180056,\"submittedDateStr\":null,\"rejectionReason\":null,\"comment\":null}]}},\n          products:'',\n          reporttype: '',\n            startDate: \"\",\n            endDate: \"\",\n            emails: \"\",\n            responseFlag: false,\n            responseFlagMsg:'',\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All',\n            reportName : \"Download Report\",\n            generateReportLoader:false,\n            generateReportMsg: \"\", \n            roleCode:\"\",\n            retrieveType:\"BY_SUBMIT_DATE\", \n            showSingleDate: false, \n            retrieveTypeAll:false,\n            generateReportbutton:true, \n            resetCalander:false,\n            showagentlink: false,\n            retrieveTypeDataEntry:false\n        };\n        this.getReportDetails = this.getReportDetails.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onChangeRetriveBy = this.onChangeRetriveBy.bind(this);\n        this.myCallback = this.myCallback.bind(this);\n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value});\n\n        if(e.target.value.includes(\"Select All\")){\n            this.setState({selectedZone: this.state.listofzones})\n            this.setState({selectAllzone: \"Remove All\"})\n        }\n    \n        if(e.target.value.includes(\"Remove All\")){\n            this.setState({selectedZone: []})\n            this.setState({selectAllzone: \"Select All\"})\n        }\n\n    }\n    dateFormat(date){ \n      return  moment.unix(date / 1000).format(\"DD/MM/YYYY\")\n\n       // return moment.utc(date).format('DD-MM-YYYY');\n    }\n\n    componentDidMount() {\n\n        var userDetails = localStorage.getItem(\"userDetails\")\n        userDetails = userDetails && JSON.parse(userDetails);\n        var roleCode = userDetails && userDetails.roleCode; \n\n        this.setState({roleCode: roleCode}) \n    \n        if(roleCode == \"ADMIN\"){\n            ActivationService.getStaticData(roleCode).then(res => {\n                let data = resolveResponse(res);\n                this.setState({listofzones: data.result && data.result.zones}) \n            })  \n        }\n    }\n\n    onChange = e => {\n\n        this.setState({ [e.target.name]: e.target.value, retrieveTypeAll: false, generateReportbutton:true,showagentlink:false,   retrieveType:\"BY_SUBMIT_DATE\" });\n        if(e.target.value == 'zoneWiseDetailedReport'){\n            this.setState({ showZoneSelection: true });\n        }else{\n            this.setState({ showZoneSelection: false });\n        }\n\n        if(e.target.value == 'disconnectionReport' || e.target.value == 'reconnectionReport'){\n            this.setState({ showSingleDate: true });\n        }else{\n            this.setState({ showSingleDate: false });\n        }\n\n        if(e.target.value == 'agentStatusReport'){\n            this.setState({ retrieveTypeAll: true, generateReportbutton:false, showagentlink:true });\n\n            this.setState({ dataEntryReportAPI:   'http://125.16.74.160:30611/SLRetailer/reports/agentStatusDataEntryReport/?retrieveType=' }); \n            this.setState({ verificatioinReportAPI:   'http://125.16.74.160:30611/SLRetailer/reports/agentStatusDataEntryReport/'+\"?retrieveType=\"+this.state.retrieveType+\"&startDate=\"+this.state.startDate+\"&endDate=\"+this.state.endDate + '&id='+ localStorage.getItem(\"token\") }); \n\n        }\n\n        if(e.target.value == 'agentWisePerformanceLog' || e.target.value == \"agentAuditReport\"  || e.target.value == \"ipacsReadyReport\"){\n            this.setState({ retrieveTypeDataEntry: true });\n        }else{\n            this.setState({ retrieveTypeDataEntry: false }); \n        }\n        \n        \n        this.setState({responseFlag : false, dataEntryData :false, generateReportLoader : false,  responseFlagMsg : \"\", resetCalander:true });\n    } \n\n    onChangeRetriveBy = e => {\n\n        this.setState({ [e.target.name]: e.target.value });\n        this.setState({responseFlag : false, dataEntryData :false, generateReportLoader : false,  responseFlagMsg : \"\" });\n    } \n\n\n    getReportDetails() {\n        this.setState({verficationname:\"\"});\n        \n        // $.ajax({\n        //     type: \"GET\",\n        //     url: \"http://125.16.74.160:30611/SLRetailer/reports/ftaDeviationReportCsv?retrieveType=BY_FTA_DATE&startDate=1577817000000&endDate=1592850599059\",\n        //     headers: AuthService.getHeader(),\n        //     xhrFields: {\n        //       responseType: 'csv'\n        //     },\n        //     success: function (blob) {\n        //       var windowUrl = window.URL || window.webkitURL;\n        //       var url = windowUrl.createObjectURL(blob);\n        //       var anchor = document.createElement('a');\n        //       anchor.href = url;\n        //       anchor.download = 'filename.csv';\n        //       anchor.click();\n        //       anchor.parentNode.removeChild(anchor);\n        //       windowUrl.revokeObjectURL(url);\n        //     },\n        //     error: function (error) {\n        //       console.log(error);\n        //     }\n        //   });\n\n\n        // $.ajax({\n        //     url: 'http://125.16.74.160:30611/SLRetailer/reports/ftaDeviationReportCsv?retrieveType=BY_FTA_DATE&startDate=1577817000000&endDate=1592850599059',\n        //     type: 'GET',\n        //     dataType: 'binary',\n        //     headers: AuthService.getHeader(),\n        //     processData: false,\n        //     success: function(blob) {\n        //         alert(\"success\"); \n        //         var windowUrl = window.URL || window.webkitURL;\n        //         var url = windowUrl.createObjectURL(blob);\n        //         anchor.prop('href', url);\n        //         anchor.prop('download', fileName);\n        //         anchor.get(0).click();\n        //         windowUrl.revokeObjectURL(url);\n        //     }\n        // });\n\n\n        // $.ajax({\n        //     // `url` \n        //     url: 'http://125.16.74.160:30611/SLRetailer/reports/ftaDeviationReportCsv?retrieveType=BY_FTA_DATE&startDate=1577817000000&endDate=1592850599059',\n        //     type: \"GET\",\n        //     dataType: 'csv',\n        //     // `file`, data-uri, base64\n            \n        //     // `custom header`\n        //     headers: AuthService.getHeader(),\n        //     beforeSend: function (jqxhr) {\n        //         console.log(this.headers);\n        //         alert(\"custom headers\" + JSON.stringify(this.headers));\n        //     },\n        //     success: function (data) {\n        //         // `file download`\n        //         $(\"a\")\n        //             .attr({\n        //             \"href\": data.file,\n        //                 \"download\": \"file.csv\"\n        //         })\n        //             .html($(\"a\").attr(\"download\"))\n        //             .get(0).click();\n        //         console.log(JSON.parse(JSON.stringify(data)));\n        //     },\n        //     error: function (jqxhr, textStatus, errorThrown) {\n        //       console.log(textStatus, errorThrown)\n        //     }\n        // });\n\n\n        if(!this.state.startDate){\n            var startd = new Date(); \n            startd.setHours(0,0,0,0);\n            this.state.startDate = startd.getTime();\n        }else{\n            var startd = new Date(this.state.startDate); \n            startd.setHours(0,0,0,0);\n            this.state.startDate = startd.getTime();\n        }\n      \n        if(!this.state.endDate){\n            var endd = new Date(); \n            endd.setHours(23,59,59,59);    \n            this.state.endDate = endd.getTime();\n        }else{\n            var endd = new Date(this.state.endDate); \n            endd.setHours(23,59,59,59);\n            this.state.endDate = endd.getTime();\n        }\n\n          \n        if(!this.state.reporttype){\n        Notify.showError(\"First select report type\");\n        return;\n        }\n\n        if(this.state.reporttype ==  \"zoneWiseDetailedReport\" && !this.state.selectedZone.length){\n                Notify.showError(\"Select filter zones\");\n                return;\n        }\n\n        // BY_FTA_DATE,\n        // BY_SUBMIT_DATE,\n        // BY_VERIFICATION_DATE,\n        // BY_DATA_ENTRY_DATE\n        var data = {\n               retrieveType: this.state.retrieveType,\n               startDate: this.state.startDate,\n               endDate: this.state.endDate,\n               zones: this.state.selectedZone.length ? this.state.selectedZone : null\n           } \n       \n        // if(this.state.reporttype == 'disconnectionReport' || this.state.reporttype == 'reconnectionReport'){\n        //     data = {\n        //         date: this.state.startDate,\n        //     }\n\n\n        // }\n        \n        this.setState({ responseFlag : false, responseFlagMsg : '', dataEntryData :false, reportName:\"Download Report\", generateReportLoader : true,generateReportMsg : \"Generating report please wait...\" });\n        \n\n        if(this.state.reporttype == \"agentStatusReport\"){\n\n            AdminService.sentReportToEmail(data,this.state.reporttype)\n            .then((res) => {\n\n                let data = resolveResponse(res);\n              //  console.log(\"report data\",res.data)\n            \n              \n            //  this.setState({ products: res.data, responseFlag : true});\n\n                if(this.state.reporttype == \"agentStatusReport\" && data.result){\n\n                    if(data.result)\n                    this.setState({ products: data.result.verifications, responseFlag : true, reportName:\"Verification Report\" });\n                    if(data.result && data.result.dataEntry)\n                    this.setState({ dataEntryData: data.result.dataEntry});\n                    this.setState({ generateReportMsg:  \"Ready to Download\", verficationname:\"VerficationReport_of_\"});\n\n                }else{\n                    this.setState({ generateReportMsg:  \"\",  generateReportLoader: false});\n                    this.setState({ responseFlagMsg : \"No Records Found\" });\n                }\n\n                \n            });\n        \n        }else{\n            if(this.state.reporttype == 'disconnectionReport' || this.state.reporttype == 'reconnectionReport'){\n\n                window.open('http://125.16.74.160:30611/SLRetailer/reports/'+this.state.reporttype+ \"?date=\"+data.startDate+'&id='+ localStorage.getItem(\"token\"));\n\n            }else{\n\n                window.open('http://125.16.74.160:30611/SLRetailer/reports/'+this.state.reporttype+'?retrieveType='+this.state.retrieveType+\"&startDate=\"+this.state.startDate+\"&endDate=\"+this.state.endDate+\"&zones=\"+this.state.selectedZone+'&id='+localStorage.getItem(\"token\"), '');\n\n            }\n\n           this.setState({ generateReportLoader : false });\n\n        }\n\n\n\n      \n    //    AdminService.reportDirectDownload(data,this.state.reporttype)\n\n    //         .then((res) => {\n\n            \n    //             let data = resolveResponse(res);\n          \n    //             if(res.data){\n    //                 //this.setState({ generateReportMsg:  \"Ready to Download\"});\n    //                // http://125.16.74.160:30611/SLRetailer/reports/ftaDeviationReport?retrieveType=BY_FTA_DATE&startDate=1577817000000&endDate=1593023399059&id=ZXlKaGJHY2lPaUpJVXpJMU5pSjkuZXlKemRXSWlPaUpNUVRGUVRVaExNU0lzSW5SdmEyVnVTV1FpT2lJeE5Ua3pNREF4TmpjM01EZzVJaXdpVWs5TVJVTlBSRVVpT2lKQlJFMUpUaUlzSWtsVFgxQlBVbFJCVENJNmRISjFaU3dpUVVsU1ZFVk1YMGxFSWpvaVRFRXhVRTFJU3pFaUxDSnBjM01pT2lKb2RIUndjem92TDJGcGNuUmxiQzVqYjIwaUxDSnBZWFFpT2pFMU9UTXdNREUyTnpjc0ltVjRjQ0k2TVRVNU16QTRPREEzTjMwLi1iQVpfdUlqaldUMlN1U3ZBaGxGWjhPQU9BTUlROTdlMUpEZjdTb1hyTE0=\n    //                 window.open('http://125.16.74.160:30611/SLRetailer/reports/'+this.state.reporttype+'?retrieveType='+this.state.retrieveType+\"&startDate=\"+this.state.startDate+\"&endDate=\"+this.state.endDate+'&id='+localStorage.getItem(\"token\"), '');\n    //                 this.setState({ generateReportLoader : false });\n    //               //  this.setState({ products: data.result.data, responseFlag : true});\n\n    //                 // if(this.state.reporttype == \"detailedPendingReport\"){\n    //                 //     this.setState({ reporttype: \"distributorDetailReport\"});\n    //                 // }\n\n    //             }\n                \n              \n                \n    //         });\n    }\n\n\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n            console.log(\"date\",date)\n            this.setState({ startDate: new Date(date).getTime(),  generateReportLoader: false, responseFlag:false, responseFlagMsg : \"\", dataEntryData:\"\" });\n        } else if (fromDate === \"END_DATE\") {\n            this.setState({ endDate: new Date(date).getTime(), generateReportLoader: false, responseFlag:false, responseFlagMsg : \"\",dataEntryData:\"\" });\n        }\n    };\n\n\n    render() {\n\n        const dateParam = {\n            myCallback: this.myCallback,\n            startDate: '',\n            endDate: '', \n            showSingleDate: this.state.showSingleDate,\n            resetCalander : this.state.resetCalander\n        }\n\n        var adminReports = []; \n\n        //POST /reports/ftaDeviationReportCsv\n        adminReports.push(<MenuItem value=\"agentStatusReport\">Agent Status Report</MenuItem>); \n        adminReports.push(<MenuItem value=\"backOfficeReceptionReport\">Back Office Reception Report</MenuItem>); \n        adminReports.push(<MenuItem value=\"backOfficeReceptionReportWithDetails\">Back Office Reception Report with Details</MenuItem>); \n        adminReports.push(<MenuItem value=\"agentWisePerformanceLog\">Agent Wise Performance Report</MenuItem>); \n        adminReports.push(<MenuItem value=\"agentAuditReport\">Agent Audit Report</MenuItem>); \n        adminReports.push(<MenuItem value=\"ipacsReadyReport\">IPACS Ready Report</MenuItem>); \n        adminReports.push(<MenuItem value=\"noneComplainceReport\">None Compliance Report</MenuItem>); \n        adminReports.push(<MenuItem value=\"omniTransferReport\">OMNI Transfer Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"zoneWiseDetailedReport\">Zone Wise Detailed Report </MenuItem>);\n        adminReports.push(<MenuItem value=\"simSwapReport\">SIM Swap Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"disconnectionReport\">D-1 Disconnect Report</MenuItem>);\n        adminReports.push(<MenuItem value=\"reconnectionReport\">D-1 Re-connection Report</MenuItem>);\n\n           // BY_VERIFICATION_DATE,\n        // BY_DATA_ENTRY_DATE\n        var agentStatusRetrieveBy = []; \n        agentStatusRetrieveBy.push(<MenuItem key={'BY_VERIFICATION_DATE'} value={'BY_VERIFICATION_DATE'} >By Verification Date</MenuItem>); \n        agentStatusRetrieveBy.push(<MenuItem key={'BY_DATA_ENTRY_DATE'} value={'BY_DATA_ENTRY_DATE'} >By Data Entry Date</MenuItem>); \n        \n        return (\n\n            <React.Fragment>\n                <PostLoginNavBar />\n                <div style={{ padding: \"20px\" }}>\n                    <br />\n                   \n                    <Paper style={{ padding: \"40px\" }}>\n\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                        Report Download\n                        </Typography>\n             \n                        <Grid syt container spacing={1} container\n                            direction=\"row\"\n                            justify=\"right\"\n                            alignItems=\"center\">\n                            <Grid item xs={12} sm={3} >\n                                <FormControl style={styles.multiselect}>\n                                {/* ftaDeviationReport */}\n                                    <InputLabel htmlFor=\"Active\" required={true}>Select type of report</InputLabel>\n                                    <Select name=\"reporttype\" value={this.state.reporttype} onChange={this.onChange}>\n                                    <MenuItem value=\"distributorLastUploadedData\">Distributor Uploaded Data Status</MenuItem>\n                                    <MenuItem value=\"detailedPendingReport\">Distributor Detail Report</MenuItem>\n                                    <MenuItem value=\"rejectReport\"> Distributor Reject Data Report</MenuItem>\n                                    <MenuItem value=\"summaryReportForDistributor\">Distributor Summary Report</MenuItem>\n                                    <MenuItem value=\"ftaDeviationReport\">FTA Deviation Report</MenuItem>\n                                    \n                                    {this.state.roleCode===\"ADMIN\" ? adminReports : \"\"}\n                                    </Select>\n                                </FormControl>\n\n                            </Grid>\n\n                            {this.state.roleCode==\"ADMIN\" && this.state.showZoneSelection ? \n                            <Grid item xs={12} sm={3}>\n                                <FormControl style={styles.selectStyle}>\n                                    <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                    <Select\n                                    labelId=\"demo-mutiple-name-label\"\n                                    id=\"demo-mutiple-name\"\n                                    multiple\n                                    name=\"selectedZone\"\n                                    value={this.state.selectedZone}\n                                    onChange={this.zoneChange}\n                                    input={<Input />}\n                                    MenuProps={MenuProps}\n                                    >\n                                    <MenuItem key={this.state.selectAllzone} value={this.state.selectAllzone} >\n                                        <b> {this.state.selectAllzone}   </b>                                         \n                                    </MenuItem>\n                                    {this.state.listofzones ? this.state.listofzones.map(name => (\n                                        <MenuItem key={name} value={name} >\n                                            {name}\n                                        </MenuItem>\n                                    )): \"\"}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            :\"\"}\n\n                          {this.state.reporttype != 'disconnectionReport' && this.state.reporttype != 'reconnectionReport' ? \n                            <Grid item xs={12} sm={3}>\n                                <FormControl style={styles.selectStyle}>\n                                    <InputLabel id=\"demo-mutiple-name-label\">Retrieve Type</InputLabel>\n                                    <Select\n                                    name=\"retrieveType\"\n                                    value={this.state.retrieveType}\n                                    onChange={this.onChangeRetriveBy}\n                                    >\n                                   \n                                    {this.state.reporttype != 'simSwapReport' ?  \n                                        <MenuItem key={'BY_FTA_DATE'} value={'BY_FTA_DATE'} >\n                                        By FTA Date\n                                    </MenuItem>\n                                    : \"\"} \n                                    <MenuItem key={'BY_SUBMIT_DATE'} value={'BY_SUBMIT_DATE'} >\n                                        By Submit Date\n                                    </MenuItem>\n\n                                    \n                                    {this.state.retrieveTypeDataEntry ?  \n                                        <MenuItem key={'BY_DATA_ENTRY_DATE'} value={'BY_DATA_ENTRY_DATE'} >\n                                            By Data Entry Date\n                                        </MenuItem>\n                                    : \"\"}\n\n                                    {this.state.retrieveTypeAll ? agentStatusRetrieveBy : \"\"}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            :\"\"}\n\n                            <Grid item xs={12} sm={3} >\n                                <MaterialUIPickers callbackFromParent={dateParam} />\n                            </Grid>\n\n                            </Grid>\n\n\n                        \n\n\n                            {/*                                 \n                            <Grid syt container spacing={4} container\n                            direction=\"row\"\n                            justify=\"right\"\n                            alignItems=\"center\">\n                                <Grid item xs={12} sm={8} item alignItems='flex-end'>\n                                    <MaterialUIPickers callbackFromParent={dateParam} />\n                                </Grid>\n                            </Grid> */}\n\n                        \n\n                            \n                            <br />\n                            <Grid syt container spacing={2} container\n                            direction=\"row\"\n                            justify=\"right\"\n                            alignItems=\"\">\n\n                            {this.state.generateReportbutton ?     \n                            <Grid item xs={12} sm={3} item alignItems='flex-end'>\n                                \n                                {!this.state.generateReportLoader ? \n                                <Button variant=\"contained\" color=\"Primary\" style={{ marginLeft: '20px' }} onClick={this.getReportDetails} >Generate Report</Button>\n                                :\"\"}\n                                \n                                {this.state.generateReportLoader ? \n                                <Typography  component=\"h5\" color=\"primary\" gutterBottom>\n                                    {this.state.generateReportMsg}\n                                </Typography>\n                                :\"\"}\n                            </Grid>\n\n                            :\"\"}\n\n                            {this.state.showagentlink ?     <>  \n                            <Grid item xs={12} sm={3} item alignItems='flex-end'>\n                                <a   target=\"_blank\" href={this.state.dataEntryReportAPI + this.state.retrieveType+\"&startDate=\"+this.state.startDate+\"&endDate=\"+this.state.endDate + '&id='+ localStorage.getItem(\"token\")} >Download Data Entry</a>\n                             \n                                \n        \n\n                            </Grid>\n\n                            <Grid item xs={12} sm={3} item alignItems='flex-end'>\n                                <a target=\"_blank\"  href={this.state.verificatioinReportAPI + this.state.retrieveType+\"&startDate=\"+this.state.startDate+\"&endDate=\"+this.state.endDate + '&id='+ localStorage.getItem(\"token\")}>  Download Verification </a>\n                            </Grid> \n                            </>\n                            :\"\"}\n\n                            <Grid item xs={12} sm={9} item alignItems='flex-end'  >\n                                {this.state.responseFlag ? \n                                <CSVLink data={this.state.products}\n                                    filename={this.state.verficationname + this.state.reporttype+\"_\"+ this.state.retrieveType.toLowerCase()+\"_\"+this.dateFormat(this.state.startDate)+ \"_to_\"+this.dateFormat(this.state.endDate)+\".csv\"}\n                                    className=\"btn btn-primary\"\n                                    target=\"_blank\"\n                                    >\n                                    <Typography component=\"h2\" variant=\"h6\" style={{ color: 'green' }} gutterBottom>\n                                        {this.state.reportName}\n                                    </Typography>\n                                    </CSVLink> \n                                    \n                                :\"\"}\n\n                                {this.state.dataEntryData ? \n                                <CSVLink data={this.state.dataEntryData}\n                                    //filename={\"dataEntry.csv\"}\n                                    filename={\"DateEntryReport_of_\"+this.state.reporttype+\"_\"+this.state.retrieveType.toLowerCase()+\"_\"+this.dateFormat(this.state.startDate)+ \"_to_\"+this.dateFormat(this.state.endDate)+\".csv\"} \n                                    className=\"btn btn-primary\"\n                                    target=\"_blank\"\n                                    >\n                                    <Typography component=\"h2\" variant=\"h6\" style={{ color: 'green' }} gutterBottom>\n                                        Data Entry Report\n                                    </Typography>\n                                    </CSVLink> \n                                    \n                                :\"\"}\n\n\n                                {/* {this.state.responseFlagMsg ?  <Typography component=\"h2\" variant=\"h6\" color=\"error\" gutterBottom>\n                                  No Records Found\n                                </Typography> : \"\" } */}\n\n                                <Typography component=\"h5\" color=\"error\" gutterBottom>\n                                  {this.state.responseFlagMsg}\n                                </Typography> \n                            </Grid>\n                        </Grid>\n\n\n                        <Grid syt container spacing={2} container\n                            direction=\"row\"\n                            justify=\"right\"\n                            alignItems=\"center\">\n                            <Grid item xs={12} sm={4} item >\n\n                            </Grid>\n\n                            <Grid item xs={12} sm={4} item >\n                                <br />\n                                {/* {this.state.responseFlag ?\n                                    <Typography component=\"h2\" variant=\"h6\" style={{ color: 'green' }} gutterBottom>\n                                        <DoneSharpIcon />  Report have been sent to your email id(s).\n                                        </Typography>\n                                    : \"\"} */}\n                            </Grid>\n                            <Grid item xs={12} sm={4} item >\n\n                           \n\n                            {this.state.responseFlag ? \n                                <Table data={this.state.products}/>\n\n                            :\"\"}\n\n                            \n\n\n                            </Grid>\n\n                        </Grid>\n\n\n\n                    </Paper>\n                </div>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n\nconst styles = {\n    tableStyle: {\n        display: 'flex',\n        justifyContent: 'left'\n    },\n    multiselect: {\n        minWidth: \"100%\",\n        marginBottom: '0px',\n    },\n    dateSelect: {\n        minWidth: \"100%\",\n        marginBottom: '0px',\n    },\n    selectStyle:{\n        // minWidth: '100%',\n          marginBottom: '0px',\n          minWidth: '100%',\n          maxWidth: '100%',\n    }\n}\n\n\nexport default Report;","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Notify from \"../utils/Notify\";\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nexport default function MaterialUIPickers(props) {\n\n  console.log(\"startDatestartDate,\",props ); \n  var d = new Date(); \n  d.setHours(0,0,0,0);\n\n  // The first commit of Material-UI\n  var [selectedStartDate, setSelectedStartDate] = React.useState(d);\n  var [selectedEndDate, setSelectedEndDate] = React.useState(d);\n\n  const handleStartDateChange = date => {\n    setSelectedStartDate(date);\n    props.callbackFromParent.myCallback(date,\"START_DATE\");\n    var startDateMili = new Date(date).getTime(); \n    document.getElementById(\"startDateMili\").value = startDateMili; \n    var endDateMili = document.getElementById(\"endDateMili\").value; \n    if(startDateMili > endDateMili  ){\n      Notify.showError(\"Start date time can't be grater than end date.\");\n    }\n  };\n\n\n\n  const handleEndDateChange = date => {\n    setSelectedEndDate(date);\n    props.callbackFromParent.myCallback(date,\"END_DATE\");\n    var endDateMili = new Date(date).getTime(); \n    document.getElementById(\"endDateMili\").value = endDateMili; \n\n   var startDateMili = document.getElementById(\"startDateMili\").value; \n   if(endDateMili  < startDateMili){\n      Notify.showError(\"End Date time can't be less than start date.\");\n    }\n   \n  };\n\n  var selectedDate =  document.getElementById(\"startDateMili\") && document.getElementById(\"startDateMili\").value; \n  if(props.callbackFromParent && props.callbackFromParent.startDate){\n    selectedStartDate = new Date(props.callbackFromParent.startDate).getTime(); \n   // document.getElementById(\"startDateMili\").value = props.callbackFromParent.startDate;\n  }\n\n  var endDateMili =  document.getElementById(\"endDateMili\") && document.getElementById(\"endDateMili\").value; \n  //endDateMili ==''\n  if(props.callbackFromParent && props.callbackFromParent.endDate){\n    selectedEndDate = new Date(props.callbackFromParent.endDate).getTime();  \n    //document.getElementById(\"endDateMili\").value = props.callbackFromParent.endDate;\n\n  }\n\n\n console.log(\"propes\", props)\n return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container justify=\"space-around\">\n     \n        <KeyboardDatePicker\n          disablePast=\"true\"\n          margin=\"normal\"\n          required={true}\n          id=\"date-picker-dialog\"\n          label={props.callbackFromParent.firstLavel}\n          format=\"dd-MM-yyyy\"\n          value={selectedStartDate}\n          onChange={handleStartDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n         <KeyboardTimePicker\n          margin=\"normal\"\n          id=\"time-picker\"\n          label=\"Start Time\"\n          value={selectedStartDate}\n          onChange={handleStartDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change time',\n          }}\n        />\n        \n        <KeyboardDatePicker\n          disablePast=\"true\"\n          margin=\"normal\"\n          required={true}\n          id=\"date-picker-dialog\"\n          label={props.callbackFromParent.secondLavel}\n          format=\"dd-MM-yyyy\"\n          value={selectedEndDate}\n          onChange={handleEndDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n       \n       <KeyboardTimePicker\n          margin=\"normal\"\n          id=\"time-picker\"\n          label=\"End Time\"\n          value={selectedEndDate}\n          onChange={handleEndDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change time',\n          }}\n        />\n        \n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport pack from \"../service/AdminService\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container, Paper } from \"@material-ui/core\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport ActivationService from \"../service/ActivationService\";\nimport Input from \"@material-ui/core/Input\";\n\n\nimport Notify from \"../../utils/Notify\";\n//import MaterialUIPickers from \"./MaterialUIPickers\";\nimport MaterialUIPickers from \"../../utils/MaterialUIPickers\";\n\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport  * as amsConstant from \"../../utils/config\";\nimport md5  from 'md5'; \n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\n\nclass BannerAdd extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        title: '',\n        order: '',\n        active: \"\",\n        bannerType:'',\n        section:'', \n        categoryType:'', \n        category:'',\n        forAndroid:'',\n        forIos:'', \n        forWindows:'', \n        validityDays:\"\",\n        updateTime:'',\n        publishDate:'',\n        expireDate: \"\",\n        updateBy:'', \n        imageURL:'', \n        file: null,\n        link:'',\n        listofzones:[],\n        selectedZone:[],\n        zone:'',\n        showFileSize: \"\", \n        selectAllzone:'Select All'\n    };\n    this.savePack = this.savePack.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.myCallback = this.myCallback.bind(this);\n    this.zoneChange = this.zoneChange.bind(this);\n    this.validateUploadFile = this.validateUploadFile.bind(this);\n\n  }\n  myCallback = (date, fromDate) => {\n    if (fromDate === \"START_DATE\") {\n      this.setState({ publishDate: new Date(date).getTime() });\n    } else if (fromDate === \"END_DATE\") {\n      this.setState({ expireDate: new Date(date).getTime()  });\n    }\n  };\n\n  zoneChange = (e) =>{\n    this.setState({[e.target.name]: e.target.value})\n    \n    if(e.target.value.includes(\"Select All\")){\n      this.setState({selectedZone: this.state.listofzones})\n      this.setState({selectAllzone: \"Remove All\"})\n    }\n\n    if(e.target.value.includes(\"Remove All\")){\n      this.setState({selectedZone: []})\n      this.setState({selectAllzone: \"Select All\"})\n    }\n\n  }\n  \n  componentDidMount() {\n    localStorage.setItem(\"lastUrl\",\"add-banner\");\n\n    ActivationService.getStaticData('ADMIN').then(res => {\n      let data = resolveResponse(res);\n      this.setState({listofzones: data.result && data.result.zones}) \n    })\n\n  }\n\n  render() {\n    const dateParam = {\n      myCallback: this.myCallback,\n      startDate: '',\n      endDate:'', \n      firstLavel : \"Publish Date\", \n      secondLavel : \"End Date\"\n    }\n    console.log(this.state, \"STATE_MATTERS\");\n    return (\n      <React.Fragment>\n        <PostLoginNavBar />\n        \n\n                <Container maxWidth=\"sm\">\n                  <br />\n                    <Paper style={{padding:\"10px\"}}>\n                    <Typography variant=\"h5\" style={styles.textStyle}> Banner Details</Typography>\n                    <form style={styles.formContainer}>\n                    \t\t\t\n                        <TextField label=\"Banner Title\" required={true} value={this.state.title} fullWidth name=\"title\"  onChange={this.onChange}/>\n \n                        <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel htmlFor=\"Connection Type\" required={true}>Type of Banner</InputLabel>\n                                <Select name=\"bannerType\" value={this.state.bannerType} onChange={this.onChange}>\n                                    <MenuItem value=\"prepaid\">Prepaid</MenuItem>\n                                    <MenuItem value=\"postpaid\">Postpaid</MenuItem>\n                                </Select>\n                            </FormControl>                    \n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel  required={true}>Order</InputLabel>\n                                <Select name=\"order\" value={this.state.order} onChange={this.onChange}>\n                                      <MenuItem value=\"1\">1</MenuItem>\n                                      <MenuItem value=\"2\">2</MenuItem>\n                                      <MenuItem value=\"3\">3</MenuItem>\n                                      <MenuItem value=\"4\">4</MenuItem>\n\n                                      <MenuItem value=\"5\">5</MenuItem>\n                                      <MenuItem value=\"6\">6</MenuItem>\n                                      <MenuItem value=\"7\">7</MenuItem>\n                                      <MenuItem value=\"8\">8</MenuItem>\n                                      <MenuItem value=\"9\">9</MenuItem>\n                                      <MenuItem value=\"10\">10</MenuItem>\n                                      <MenuItem value=\"11\">11</MenuItem>\n                                      <MenuItem value=\"12\">12</MenuItem>\n                                      <MenuItem value=\"13\">13</MenuItem>\n                                      <MenuItem value=\"14\">14</MenuItem>\n                                      <MenuItem value=\"15\">15</MenuItem>\n                                </Select>\n                            </FormControl>                        \n                        </Grid>\n                      \n\n                         {/* <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel htmlFor=\"Active\" required={true}>Section</InputLabel>\n                                <Select name=\"section\" value={this.state.section} onChange={this.onChange}>\n                                    <MenuItem value=\"Section1\">Section1</MenuItem>\n                                    <MenuItem value=\"Section2\">Section2</MenuItem>\n                                    <MenuItem value=\"Section3\">Section3</MenuItem>\n                                    <MenuItem value=\"Section4\">Section4</MenuItem>\n\n                                </Select>\n                            </FormControl>                        \n                        </Grid> */}\n\n\n\n                        <Grid item xs={12} sm={6}>\n                          <FormControl style={styles.multiselect}>\n                              <InputLabel htmlFor=\"Connection Type\" required={true}>Category Type</InputLabel>\n                              <Select name=\"categoryType\" value={this.state.categoryType} onChange={this.onChange}>\n                                  <MenuItem value=\"Recharge\">Recharge</MenuItem>\n                                  <MenuItem value=\"Other\"> Other </MenuItem>\n                              </Select>\n                          </FormControl>                   \n                        </Grid>\n\n\n                        {/* <Grid item xs={12} sm={6}>\n                          <FormControl style={styles.multiselect}>\n                              <InputLabel htmlFor=\"\" required={true}>Category</InputLabel>\n                              <Select name=\"category\" value={this.state.category} onChange={this.onChange}>\n                                  <MenuItem value=\"bonus\">Bonus</MenuItem>\n                                  <MenuItem value=\"Bonus\">Other</MenuItem>\n                              </Select>\n                          </FormControl>\n                        </Grid> */}\n                        \n                        <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel htmlFor=\"Active\" required={true}>Status</InputLabel>\n                                <Select name=\"active\" value={this.state.active} onChange={this.onChange}>\n                                    <MenuItem value=\"active\">Active</MenuItem>\n                                    <MenuItem value=\"in_active\">In Active</MenuItem>\n                                </Select>\n                            </FormControl>                        \n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <TextField label=\"Banner Link\" name=\"link\" value={this.state.link} fullWidth  onChange={this.onChange}/>\n                        </Grid>\n\n                        <Grid item xs={10} sm={6}> \n                                <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                        <Select\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        multiple\n                                        name=\"selectedZone\"\n                                        value={this.state.selectedZone}\n                                        onChange={this.zoneChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                          <MenuItem key={this.state.selectAllzone} value={this.state.selectAllzone} >\n                                            <b> {this.state.selectAllzone}   </b>                                         \n                                          </MenuItem>\n\n                                        {this.state.listofzones ? this.state.listofzones.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                        </Select>\n                                    </FormControl>\n                            </Grid>\n\n                        {/* <Grid item xs={12} sm={12}>\n                            <InputLabel htmlFor=\"\" required={true}> Select the Devices</InputLabel> \n                            <FormControlLabel control=\n                                {<Checkbox checked={this.state.forAndroid} name=\"forAndroid\" onChange={this.handleChange('forAndroid')}\n                                            value={this.state.forAndroid} /> } label=\"Android\" color=\"primary\"/>\n                            <FormControlLabel control=\n                                {<Checkbox checked={this.state.forIos} name=\"forIos\" onChange={this.handleChange('forIos')}\n                                            value={this.state.forIos}/> }  label=\"IOS\" />\n                            <FormControlLabel control=\n                                {<Checkbox checked={this.state.forWindows} name=\"forWindows\" onChange={this.handleChange('forWindows')}\n                                            value={this.state.forWindows}/> }  label=\"Windows\" />\n\n                        </Grid> */}\n\n\n                        {/* <TextField label=\"Publish Day\" type=\"number\" multiline rows={1} fullWidth margin=\"none\" min=\"1\" max=\"999\" name=\"priority\" value={this.state.priority} onChange={this.onChangePriority}/> */}\n\n                        {/* <input accept=\"image/*\" style={styles.input} id=\"contained-button-file\" type=\"file\" onChange={this.onProductIconFileChange} /> */}\n                        {/* <label htmlFor=\"contained-button-file\" style={{margin: '15px 20px 0 0', }}>\n                            <Button variant=\"contained\" size=\"large\" component=\"span\">\n                                Upload Product Icon\n                                <CloudUploadIcon />\n                            </Button>\n                        </label> */}\n\n                        {/* <Grid item xs={12} sm={6}>\n                                 <TextField label=\"Validity Days\" required={true} type=\"number\" min=\"1\" max=\"999\" fullWidth name=\"validityDays\" value={this.state.validityDays} onChange={this.onChange}/>\n                        </Grid> */}\n\n                      \n\n{/*                         \n                        <Grid item xs={12} sm={6}>\n                                 <TextField label=\"Expire Days\" required={true} type=\"number\" min=\"1\" max=\"999\" fullWidth name=\"servingTimeInMins\" value={this.state.servingTimeInMins} onChange={this.onChangeServingTime}/>\n                        </Grid> */}\n\n                        \n                      <MaterialUIPickers callbackFromParent={dateParam} />\n                        <input type=\"hidden\" id=\"startDateMili\" /> \n                        <input type=\"hidden\" id=\"endDateMili\" /> \n\n\n                        <Grid  container spacing={1} container direction=\"row\" justify=\"flex-end\">\n\n                            <Grid item xs={12} sm={3}>\n                              <FormControl style={styles.multiselect}>\n                                  <InputLabel htmlFor=\"display-type\" required={true}>Upload Banner</InputLabel>\n                              </FormControl>\n\n                             \n                            </Grid>\n\n                            <Grid item xs={12} sm={9}>\n                                <FormControl style={styles.multiselect}>\n                                  <input\n                                    style={{\n                                      marginTop: \"31px\",\n                                      marginLeft: \"18px\"\n                                    }}\n                                    type=\"file\"\n                                    name=\"file\"\n                                    id=\"bannerImage\"\n                                    // onChange={this.onChangeHandler}\n                                    onChange={this.onChangeFileUpload}\n                                  />\n                                  \n                                </FormControl>\n                          \n                               \n                            </Grid>\n\n                          \n                    </Grid>\n                    \n\n                    <Grid  container spacing={24} container\n                        direction=\"row\"\n                        justify=\"center\">\n                          \n                          <Grid item xs={12} sm={6}>\n                                Selected File Size: {this.state.showFileSize}\n                                <br />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                              <img title=\"Preview Banner\"  style={{width:\"200px\", height:\"100px\"}} src={this.state.imageURL} />\n                          </Grid>\n                      </Grid>\n                    \n\n                    {/* <TextField label=\"Comment\" fullWidth margin=\"normal\" name=\"helpTextImage\" value={this.state.helpTextImage} onChange={this.onChange}/> */}\n                    <Grid  container spacing={24} container\n                        direction=\"row\"\n                        justify=\"center\">\n                          \n                      <Button variant=\"contained\" color=\"primary\"   onClick={this.savePack}>Save</Button>\n                      <Button variant=\"contained\" color=\"secondary\" style={{marginLeft: '150px'}} onClick={this.cancel}>Cancel</Button>\n                    </Grid>\n                    \n                  </form>\n                    </Paper>\n                </Container>\n\n\n\n      </React.Fragment>\n    );\n  }\n\n  savePack = e => {\n\n    \n    e.preventDefault();\n   // if(!this.state.title ||!this.state.bannerType || !this.state.order || !this.state.section || !this.state.categoryType || !this.state.category || !this.state.publishDate || !this.state.expireDate || !this.state.active ){\n    if(!this.state.title ||!this.state.bannerType || !this.state.order  || !this.state.active ){\n      Notify.showError(\"Missing required fields\");\n        return;\n    }\n\n    var startDateMili =  document.getElementById(\"startDateMili\").value; \n    var endDateMili = document.getElementById(\"endDateMili\").value; \n    if(startDateMili > endDateMili  ){\n      Notify.showError(\"Start date time can't be grater than end date.\");\n      return;\n    }\n\n   if(endDateMili  < startDateMili){\n      Notify.showError(\"End Date time can't be less than start date.\");\n      return;\n    }\n    \n   \n    if(!this.state.file){\n      Notify.showError(\"Missing required image upload\");\n      return;\n    }\n\n    \n    var userDetails = localStorage.getItem(\"userDetails\")\n    userDetails = userDetails && JSON.parse(userDetails);\n\n\n    const formData = new FormData();\n    formData.append('file',this.state.file);\n    formData.append('title', this.state.title);\n    formData.append('order', parseInt(this.state.order));\n    formData.append('active', this.state.active === 'active' ? true : false);\n    formData.append('bannerType', this.state.bannerType);\n\n    formData.append('link', this.state.link);\n    \n    if(this.state.selectedZone && this.state.selectedZone.length){\n      formData.append('zones', this.state.selectedZone);\n    }\n\n    if(!this.state.publishDate){\n      this.state.publishDate = new Date().getTime();\n    }\n\n    if(!this.state.expireDate){\n      this.state.expireDate = new Date().getTime();\n    }\n\n    formData.append('publishDate', this.state.publishDate);\n    formData.append('expireDate', this.state.expireDate);\n    formData.append('categoryType', this.state.categoryType);\n    \n    pack.addBanner(formData).then(res => {\n      var data = resolveResponse(res, \"Baneer saved successfully.\");\n     // Notify.showSuccess(\"Baneer saved successfully.\");\n      console.log(\"Banner Response:\", data); \n      this.props.history.push(\"/banners\");\n\n    });\n  };\n\n  cancel = e => {\n    this.props.history.push(\"/banners\");\n  };\n\n\n\n  handleChange = name => event => {\n    this.setState({ ...this.state, [name]: event.target.checked });\n  };\n\n\n  validateUploadFile = (file) => {\n    const filename = file.name.toString(); \n\n    if (/[^a-zA-Z0-9\\.\\-\\_ ]/.test(filename)) {\n        Notify.showError(\"File name can contain only alphanumeric characters including space and dots\")\n        return false;\n    }\n\n    if(file.type == \"image/png\" || file.type == \"image/jpeg\"){\n        var fileSize = file.size / 1000; //in kb\n        if(fileSize >= 100 && fileSize <= 2048){\n          const fileext =  filename.split('.').pop(); \n          Object.defineProperty(file, 'name', {\n            writable: true,\n            value:  md5(file.name) +\".\"+ fileext\n          });\n          return file;\n        }else{\n          Notify.showError(\"File size should be grater than 100KB and less than 2MB\")\n        }\n    }else {\n      Notify.showError(\"Only png and jpeg file allowd.\")\n    }\n    return false;\n  }\n\n\n  onChangeFileUpload = e => {\n\n   const filetoupload = this.validateUploadFile(e.target.files[0]); \n    if (filetoupload){\n      this.setState({\n          [e.target.name]: e.target.files[0], \n          showFileSize : e.target.files[0].size / 1000 + \"KB\",\n          imageURL: URL.createObjectURL(e.target.files[0])\n      })\n    }else{\n      this.setState({\n          [e.target.name]: null, \n          showFileSize : \"\",\n          imageURL: \"\"\n      })\n      e.target.value = null;\n\n    }\n  } \n\n\n\n  onChangeHandler = event => {\n    const formData = new FormData();\n    formData.append('file',event.target.files[0]);\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    };\n    axios.post(amsConstant.UPLOAD_IMG_BANNER,formData,config)\n        .then((response) => {\n    this.setState({\n        imageURL: response.data.result,\n    });\n        }).catch((error) => {\n            console.log(error,\"ERROR\")\n    });\n   \n  };\n\nonChange = e => this.setState({ [e.target.name]: e.target.value });\n}\n\nconst styles = {\n  formContainer: {\n    display: \"flex\",\n    flexFlow: \"row wrap\"\n  },\n\n  textStyle: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  input: {\n    display: \"none\"\n  },\n\n  textStyle: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  multiselect: {\n    minWidth: \"100%\",\n    marginBottom: \"10px\"\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  chip: {\n    margin: 3\n  },\n  selectStyle:{\n   //  minWidth: '100%',\n     marginBottom: '0px',\n      minWidth: 255,\n      maxWidth: 255,\n}\n  \n};\n\nexport default BannerAdd;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport pack from \"../service/AdminService\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container, Paper } from \"@material-ui/core\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Notify from \"../../utils/Notify\";\n//import MaterialUIPickers from \"./MaterialUIPickers\";\nimport MaterialUIPickers from \"../../utils/MaterialUIPickers\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport  * as amsConstant from \"../../utils/config\";\nimport Input from \"@material-ui/core/Input\";\nimport md5  from 'md5'; \n\nimport ActivationService from \"../service/ActivationService\";\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\nclass BannerEdit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        title: '',\n        order: '',\n        active: \"\",\n        bannerType:'',\n        section:'', \n        categoryType:'', \n        category:'',\n        forAndroid:'',\n        forIos:'', \n        forWindows:'', \n        validityDays:\"\",\n        updateTime:'',\n        updateBy:'', \n        imageURL:'', \n        file: null,\n        link:'',\n        listofzones:[],\n        selectedZone:[],\n        zone:'',\n        showFileSize: \"\", \n\n\n    };\n    this.savePack = this.savePack.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.myCallback = this.myCallback.bind(this);\n    this.zoneChange = this.zoneChange.bind(this);\n    this.validateUploadFile = this.validateUploadFile.bind(this);\n\n  }\n  zoneChange = (e) =>{\n\n    if(e.target.value){\n      this.setState({[e.target.name]: e.target.value})\n    }\n  }\n\n  myCallback = (date, fromDate) => {\n    if (fromDate === \"START_DATE\") {\n      this.setState({ publishDate: new Date(date).getTime() });\n    } else if (fromDate === \"END_DATE\") {\n      this.setState({ expireDate: new Date(date).getTime() });\n    }\n  };\n\n  \n\n        \n  getInitialData = async ()=>{\n    const id = localStorage.getItem('selectedBannerId');\n    this.setState({loading:true})\n    // const packRes = await  this.props.getPackById(id);\n    // console.log(packRes)\n    // if(packRes.type){\n    //     this.setState(packRes.payload.data.result);\n    // }\n    // this.setState({loading:false})\n    // this.setState({activationStatus:this.state.active})\n\n    pack.getOneBanner(id).then(res => {\n      resolveResponse(res, \"Baneer saved successfully.\");\n     // this.props.history.push(\"/banners\");\n\n     let data = resolveResponse(res);\n     if(data.status == 200 && data.message == \"ok\"){\n\n         var selectedData = data.result; \n         this.setState({   \n         title: selectedData.title,\n         order: selectedData.order,\n         active: selectedData.active ? 'active' :\"in_active\" ,\n         bannerType:selectedData.bannerType,\n         section:selectedData.section, \n         categoryType:selectedData.categoryType, \n         category:selectedData.category,\n         forAndroid:selectedData.forAndroid,\n         forIos:selectedData.forIos, \n         forWindows:selectedData.forWindows, \n         publishDate:selectedData.publishDate,\n         expireDate: selectedData.expireDate,\n         updateTime:selectedData.updateTime,\n         imageURL:selectedData.imageURL, \n         bannerId : selectedData.id, \n         link:selectedData.link, \n         selectedZone : selectedData.zones ? selectedData.zones.split(\",\") : [] \n         });\n\n     }\n\n\n    });\n\n\n    ActivationService.getStaticData('ADMIN').then(res => {\n      let data = resolveResponse(res);\n      this.setState({listofzones: data.result && data.result.zones}) \n  })\n\n  }\n    componentDidMount() {\n      this.getInitialData();\n      localStorage.setItem(\"lastUrl\",\"banner-edit\");\n\n    }\n      \n\n  render() {\n\n    const dateParam = {\n      myCallback: this.myCallback,\n      startDate: this.state.publishDate,\n      endDate:this.state.expireDate,\n      firstLavel : \"Publish Date\", \n      secondLavel : \"End Date\"\n    }\n    console.log(this.state, \"STATE_MATTERS\");\n    return (\n      <React.Fragment>\n        <PostLoginNavBar />\n        \n                <Container maxWidth=\"sm\" style={{padding:\"10px\"}}>\n                  \n                    <Paper style={{padding:\"10px\"}}>\n                    <Typography variant=\"h5\" style={styles.textStyle}> Update Banner Details</Typography>\n                    <form style={styles.formContainer}>\n                    \t\t\t\n                        <TextField label=\"Banner Title\" required={true} value={this.state.title} fullWidth name=\"title\"  onChange={this.onChange}/>\n \n                        <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel htmlFor=\"Connection Type\" required={true}>Type of Baneer</InputLabel>\n                                <Select name=\"bannerType\" value={this.state.bannerType} onChange={this.onChange}>\n                                    <MenuItem value=\"prepaid\">Prepaid</MenuItem>\n                                    <MenuItem value=\"postpaid\">Postpaid</MenuItem>\n                                </Select>\n                            </FormControl>                    \n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel  required={true}>Order</InputLabel>\n                                <Select name=\"order\" value={this.state.order} onChange={this.onChange}>\n                                      <MenuItem value=\"1\">1</MenuItem>\n                                      <MenuItem value=\"2\">2</MenuItem>\n                                      <MenuItem value=\"3\">3</MenuItem>\n                                      <MenuItem value=\"4\">4</MenuItem>\n                                      \n                                      <MenuItem value=\"5\">5</MenuItem>\n                                      <MenuItem value=\"6\">6</MenuItem>\n                                      <MenuItem value=\"7\">7</MenuItem>\n                                      <MenuItem value=\"8\">8</MenuItem>\n                                      <MenuItem value=\"9\">9</MenuItem>\n                                      <MenuItem value=\"10\">10</MenuItem>\n                                      <MenuItem value=\"11\">11</MenuItem>\n                                      <MenuItem value=\"12\">12</MenuItem>\n                                      <MenuItem value=\"13\">13</MenuItem>\n                                      <MenuItem value=\"14\">14</MenuItem>\n                                      <MenuItem value=\"15\">15</MenuItem>\n                                </Select>\n                            </FormControl>                        \n                        </Grid>\n                      \n\n                         {/* <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel htmlFor=\"Active\" required={true}>Section</InputLabel>\n                                <Select name=\"section\" value={this.state.section} onChange={this.onChange}>\n                                    <MenuItem value=\"Section1\">Section1</MenuItem>\n                                    <MenuItem value=\"Section2\">Section2</MenuItem>\n                                    <MenuItem value=\"Section3\">Section3</MenuItem>\n                                    <MenuItem value=\"Section4\">Section4</MenuItem>\n\n                                </Select>\n                            </FormControl>                        \n                        </Grid> */}\n\n\n                        <Grid item xs={12} sm={6}>\n                          <FormControl style={styles.multiselect}>\n                              <InputLabel htmlFor=\"Connection Type\" required={true}>Category Type</InputLabel>\n                              <Select name=\"categoryType\" value={this.state.categoryType} onChange={this.onChange}>\n                                  <MenuItem value=\"Recharge\">Recharge</MenuItem>\n                                  <MenuItem value=\"Other\"> Other </MenuItem>\n                              </Select>\n                          </FormControl>                   \n                        </Grid>\n\n\n                        {/* <Grid item xs={12} sm={6}>\n                          <FormControl style={styles.multiselect}>\n                              <InputLabel htmlFor=\"\" required={true}>Category</InputLabel>\n                              <Select name=\"category\" value={this.state.category} onChange={this.onChange}>\n                                  <MenuItem value=\"bonus\">Bonus</MenuItem>\n                                  <MenuItem value=\"Bonus\">Other</MenuItem>\n                              </Select>\n                          </FormControl>\n                        </Grid> */}\n                        <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel htmlFor=\"Active\" required={true}>Status</InputLabel>\n                                <Select name=\"active\" value={this.state.active} onChange={this.onChange}>\n                                    <MenuItem value=\"active\">Active</MenuItem>\n                                    <MenuItem value=\"in_active\">In Active</MenuItem>\n                                </Select>\n                            </FormControl>                        \n                        </Grid>\n                        \n                        <Grid item  xs={12} sm={6}>\n                            <TextField label=\"Banner Link\" name=\"link\"  value={this.state.link} fullWidth  onChange={this.onChange}/>\n                        </Grid>\n                              <Grid item xs={10} sm={6}> \n                                <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                        <Select\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        multiple\n                                        name=\"selectedZone\"\n                                        value={this.state.selectedZone}\n                                        onChange={this.zoneChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        {this.state.listofzones ? this.state.listofzones.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                        </Select>\n                                    </FormControl>\n                            </Grid>\n\n\n                        {/* <Grid item xs={12} sm={12}>\n                            <InputLabel htmlFor=\"\" required={true}> Select the Devices</InputLabel> \n                            <FormControlLabel control=\n                                {<Checkbox checked={this.state.forAndroid} name=\"forAndroid\" onChange={this.handleChange('forAndroid')}\n                                            value={this.state.forAndroid} /> } label=\"Android\" color=\"primary\"/>\n                            <FormControlLabel control=\n                                {<Checkbox checked={this.state.forIos} name=\"forIos\" onChange={this.handleChange('forIos')}\n                                            value={this.state.forIos}/> }  label=\"IOS\" />\n                            <FormControlLabel control=\n                                {<Checkbox checked={this.state.forWindows} name=\"forWindows\" onChange={this.handleChange('forWindows')}\n                                            value={this.state.forWindows}/> }  label=\"Windows\" />\n\n                        </Grid> */}\n\n\n                        {/* <TextField label=\"Publish Day\" type=\"number\" multiline rows={1} fullWidth margin=\"none\" min=\"1\" max=\"999\" name=\"priority\" value={this.state.priority} onChange={this.onChangePriority}/> */}\n\n                        {/* <input accept=\"image/*\" style={styles.input} id=\"contained-button-file\" type=\"file\" onChange={this.onProductIconFileChange} /> */}\n                        {/* <label htmlFor=\"contained-button-file\" style={{margin: '15px 20px 0 0', }}>\n                            <Button variant=\"contained\" size=\"large\" component=\"span\">\n                                Upload Product Icon\n                                <CloudUploadIcon />\n                            </Button>\n                        </label> */}\n\n                        {/* <Grid item xs={12} sm={6}>\n                                 <TextField label=\"Validity Days\" required={true} type=\"number\" min=\"1\" max=\"999\" fullWidth name=\"validityDays\" value={this.state.validityDays} onChange={this.onChange}/>\n                        </Grid> */}\n\n                        <MaterialUIPickers callbackFromParent={dateParam} />\n                        {/* <input type=\"\" id=\"startDateMili\" /> \n                        <input type=\"\" id=\"endDateMili\" />  */}\n                        <TextField id=\"startDateMili\" label=\"\" type=\"hidden\" value={dateParam.startDate} />\n                        <TextField id=\"endDateMili\" label=\"\" type=\"hidden\" value={dateParam.endDate} />\n\n                       \n\n                        {/*                         \n                        <Grid item xs={12} sm={6}>\n                                 <TextField label=\"Expire Days\" required={true} type=\"number\" min=\"1\" max=\"999\" fullWidth name=\"servingTimeInMins\" value={this.state.servingTimeInMins} onChange={this.onChangeServingTime}/>\n                        </Grid> */}\n\n              <Grid\n                container\n                spacing={24}\n                container\n                direction=\"row\"\n                justify=\"flex-end\"\n              >\n                <Grid item xs={12} sm={6}>\n                <FormControl style={styles.multiselect}>\n                        <InputLabel htmlFor=\"display-type\" required={true}>Upload Banner</InputLabel>\n                </FormControl>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <FormControl style={styles.multiselect}>\n                      <input\n                        style={{\n                          marginTop: \"31px\",\n                          marginLeft: \"18px\"\n                        }}\n                        type=\"file\"\n                        name=\"file\"\n                        // onChange={this.onChangeHandler}\n                        onChange={this.onChangeFileUpload}\n                      />\n                  </FormControl>\n                  \n                </Grid>\n                \n              </Grid>\n\n              <Grid  container spacing={24} container\n                        direction=\"row\"\n                        justify=\"center\">\n                          \n                          <Grid item xs={12} sm={6}>\n                                Selected File Size: {this.state.showFileSize}\n                                <br />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                              <img title=\"Preview Banner\" style={{width:\"200px\", height:\"100px\"}} src={this.state.imageURL} />\n                          </Grid>\n                      </Grid>\n\n              \n\n             \n                    {/* <TextField label=\"Comment\" fullWidth margin=\"normal\" name=\"helpTextImage\" value={this.state.helpTextImage} onChange={this.onChange}/> */}\n                    <Grid  container spacing={24} container\n                        direction=\"row\"\n                        justify=\"center\">\n                          \n                      <Button variant=\"contained\" color=\"primary\"   onClick={this.savePack}>Update</Button>\n                      <Button variant=\"contained\" color=\"secondary\" style={{marginLeft: '150px'}} onClick={this.cancel}>Cancel</Button>\n                    </Grid>\n                    \n                  </form>\n                    </Paper>\n                </Container>\n\n\n        \n\n      </React.Fragment>\n    );\n  }\n\n  savePack = e => {\n\n  \n    e.preventDefault();\n    // if(!this.state.title ||!this.state.bannerType || !this.state.order || !this.state.section || !this.state.categoryType || !this.state.category || !this.state.validityDays || !this.state.active ){\n    //     Notify.showError(\"Missing required fields\");\n    //     return;\n    // }\n    if(!this.state.title ||!this.state.bannerType || !this.state.order  || !this.state.active ){\n      Notify.showError(\"Missing required fields\");\n        return;\n    }\n   \n    // if(!this.state.file){\n    //   Notify.showError(\"Missing required image upload\");\n    //   return;\n    // }\n\n    var userDetails = localStorage.getItem(\"userDetails\")\n    userDetails = userDetails && JSON.parse(userDetails);\n    \n\n    const formData = new FormData();\n    if(this.state.file){\n      formData.append('file',this.state.file); \n    }\n    formData.append('title', this.state.title);\n    formData.append('order', parseInt(this.state.order));\n    formData.append('active', this.state.active === 'active' ? true : false );\n    formData.append('bannerType', this.state.bannerType);\n\n    formData.append('publishDate', this.state.publishDate);\n    formData.append('expireDate', this.state.expireDate); \n\n    formData.append('link', this.state.link);\n\n    if(this.state.selectedZone && this.state.selectedZone.length){\n      formData.append('zones',this.state.selectedZone);\n    }\n  \n    formData.append('categoryType', this.state.categoryType);\n    formData.append('category', this.state.category);\n\n    formData.append('bannerId', this.state.bannerId);\n    \n    pack.updateBanner(formData).then(res => {\n     var data = resolveResponse(res, \"Banner saved successfully.\");\n     if(data.status == 200 && data.message == \"Success\"){\n        Notify.showSuccess(\"Banner saved successfully.\")\n     }else{\n      Notify.showError(data);\n\n     }\n      this.props.history.push(\"/banners\");\n    });\n\n  };\n\n  cancel = e => {\n    this.props.history.push(\"/banners\");\n  };\n\n\n\n  handleChange = name => event => {\n    this.setState({ ...this.state, [name]: event.target.checked });\n  };\n\n\n\n\n  // onChangeFileUpload = e => this.setState({\n  //   //  file:e.target.files[0]\n  //     [e.target.name]: e.target.files[0],\n  //     showFileSize : e.target.files[0].size / 1000 + \"KB\", \n  //     imageURL: URL.createObjectURL(e.target.files[0])\n  // })\n\n\n  validateUploadFile = (file) => {\n    const filename = file.name.toString(); \n\n    if (/[^a-zA-Z0-9\\.\\-\\_ ]/.test(filename)) {\n        Notify.showError(\"File name can contain only alphanumeric characters including space and dots\")\n        return false;\n    }\n\n    if(file.type == \"image/png\" || file.type == \"image/jpeg\"){\n        var fileSize = file.size / 1000; //in kb\n        if(fileSize >= 100 && fileSize <= 2048){\n          const fileext =  filename.split('.').pop(); \n          Object.defineProperty(file, 'name', {\n            writable: true,\n            value:  md5(file.name) +\".\"+ fileext\n          });\n          return file;\n        }else{\n          Notify.showError(\"File size should be grater than 100KB and less than 2MB\")\n        }\n    }else {\n      Notify.showError(\"Only png and jpeg file allowd.\")\n    }\n    return false;\n  }\n\n\n  onChangeFileUpload = e => {\n\n   const filetoupload = this.validateUploadFile(e.target.files[0]); \n    if (filetoupload){\n      this.setState({\n          [e.target.name]: e.target.files[0], \n          showFileSize : e.target.files[0].size / 1000 + \"KB\",\n          imageURL: URL.createObjectURL(e.target.files[0])\n      })\n    }else{\n      this.setState({\n          [e.target.name]: null, \n          showFileSize : \"\",\n          imageURL: \"\"\n      })\n      e.target.value = null;\n\n    }\n  } \n\n\n\n  onChangeHandler = event => {\n    const formData = new FormData();\n    formData.append('file',event.target.files[0]);\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    };\n    axios.post(amsConstant.UPLOAD_IMG_BANNER,formData,config)\n        .then((response) => {\n    this.setState({\n        imageURL: response.data.result,\n    });\n        }).catch((error) => {\n            console.log(error,\"ERROR\")\n    });\n   \n  };\n\nonChange = e => this.setState({ [e.target.name]: e.target.value });\n}\n\nconst styles = {\n  formContainer: {\n    display: \"flex\",\n    flexFlow: \"row wrap\"\n  },\n\n  textStyle: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  input: {\n    display: \"none\"\n  },\n\n  textStyle: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  multiselect: {\n    minWidth: \"100%\",\n    marginBottom: \"10px\"\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  chip: {\n    margin: 3\n  },\n  selectStyle:{\n   //  minWidth: '100%',\n     marginBottom: '0px',\n      minWidth: 270,\n      maxWidth: 270,\n}\n  \n};\n\nexport default BannerEdit;\n","import React, { useState }  from \"react\";\nimport ActivationService from \"../service/ActivationService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from '@material-ui/core/TextField';\nimport Notify from \"../../utils/Notify\";\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\n\nimport Grid from '@material-ui/core/Grid';\n\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {Container} from \"@material-ui/core\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport \"./Verify.css\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass VerifyList extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state ={\n            products: [],\n            searchedproducts:'',\n            searchby:'',\n            listofzones:[],\n            selectedZone:[],\n            zone:''\n        };\n        this.loadProductList = this.loadProductList.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.zoneChange = this.zoneChange.bind(this);\n        this.onlockTransectionOnSkip = this.onlockTransectionOnSkip.bind(this);\n\n    }\n\n    componentDidMount() {\n        this.loadProductList(\"\");\n        localStorage.setItem(\"lastUrl\",\"verify\");\n        ActivationService.getTotalToBeProcessed().then(res => {\n            let data = resolveResponse(res);\n            console.log(data.result)\n            this.setState({['recordToBeProcessed']: data.result && data.result.count})\n\n            localStorage.setItem(\"acquisitionCount\",data.result && data.result.acquisitionCount ); \n            localStorage.setItem(\"resubmitCount\",data.result && data.result.resubmitCount ); \n        })\n    }\n\n    onlockTransectionOnSkip = (txn) =>{\n        var transactionsIds = {\n            transactionsIds : txn\n        }\n\n        ActivationService.unlockTransectionsSkip( transactionsIds ).then(res => {\n            let data = resolveResponse(res);\n            if(data.message != 'ok'){\n                Notify.showError(\"Server Error\"+data.message);\n            }  \n       });\n       \n    }\n\n    searchOnDB(mobileNumber) {\n\n        var verifyListingTxn = localStorage.getItem(\"verifyListingTxn\");\n        verifyListingTxn =  verifyListingTxn && verifyListingTxn.split(',');\n\n        if(verifyListingTxn.length >= 1){\n            this.onlockTransectionOnSkip(verifyListingTxn); \n        }\n       \n\n        this.loadProductList(mobileNumber) ;\n       \n     \n        // ActivationService.searchMobileNo(mobileNumber).then(res => {\n        //     let data = resolveResponse(res);\n        //     const selectedProduct = data.result;            \n\n        //     if(selectedProduct && selectedProduct.transactionId){\n        //         window.localStorage.setItem(\"selectedProductId\", selectedProduct.transactionId);\n        //         //window.localStorage.setItem(\"selectedSim\", '');\n        \n        //         this.props.history.push('/verify-edit');\n        //         // this.setState({\n        //         //     });\n        //     }\n        //     // else{\n        //     //     Notify.showError(\"Not Found or already processed\");\n        //     // }\n           \n        // })\n    }\n  \n    \n    loadProductList(mobileNumber) {\n        var d = new Date();\n        var endTime = d.getTime();\n\n        var startTime = endTime - 172800000; \n\n        var  data =  {\n\n            \"mobileNumber\": mobileNumber ? mobileNumber : null,\n            \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n          }\n\n        // var  data =  {\n        //     \"endDate\": endTime,\n          \n        //     \"mobileNumber\": mobileNumber ? mobileNumber : null,\n        //     \"noOfRecords\": 20,\n        //     \"role\": \"DE\",\n        //     \"startDate\": 0,\n        //     \"txnId\": 0,\n        //     \"type\": \"next\",\n            \n        //     \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n        // }\n        \n        document.getElementById('showMessage').innerHTML = \"Please Wait Loading...\";\n\n        ActivationService.listDocs(data)\n            .then((res) => {\n                let data = resolveResponse(res);\n                var activationList = data && data.result && data.result.activationList; \n                this.setState({products: activationList})\n                this.setState({searchedproducts: activationList})\n                var listingIds = activationList && activationList.map(function(val, index){\n                return val.txnId\n                });\n\n                if(document.getElementById('showMessage')){\n                    if(activationList == null){\n                        document.getElementById('showMessage').innerHTML = \"No new documents for verification\";\n                    }else{\n                        document.getElementById('showMessage').innerHTML = \"\";\n                    }    \n                }\n\n                if(listingIds){\n                    localStorage.setItem(\"verifyListingTxn\",listingIds); \n                }else{\n                    localStorage.setItem(\"verifyListingTxn\",\"\"); \n                }\n                \n                 \n            });\n\n        setTimeout(() => {\n            if(this.state.searchedproducts && this.state.searchedproducts.length ==0){\n                document.getElementById('showMessage').innerHTML = \"Server taking time to response please reload again and check\";\n            }\n        }, 7000);\n\n\n        ActivationService.getStaticData('BOA').then(res => {\n            let data = resolveResponse(res);\n            this.setState({listofzones: data && data.result && data.result.zones}) \n        })\n        \n    }\n\n    onChange = (e) => {\n\n        const re = /^[0-9\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n            this.setState({searchby: e.target.value})\n        }\n       \n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n\n    someAction() {\n      alert(\"action happed in other commpornt\"); \n    }\n\n   \n\n\n    editProduct(productId,sim) {\n        console.log(\"productid, row.sim\",productId, sim  )\n        \n        window.localStorage.setItem(\"selectedProductId\", productId);\n        window.localStorage.setItem(\"selectedSim\", sim);\n        window.localStorage.setItem(\"fromSubmit\", '');\n\n\n        this.props.history.push('/verify-edit');\n\n        // this.props.history.push({\n        //     pathname: '/edit-doc',\n        //     search: '?query=abc',\n        //     state: { rowdata: productId }\n        //   })\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n\n      \n\n    render(){\n   \n        return(\n\n            <React.Fragment>\n                {/* <PostLoginNavBar showCount={{acquisitionCount :this.state.acquisitionCount, resubmitCount :this.state.resubmitCount}} /> */}\n\n                <PostLoginNavBar/>\n\n                <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n               \n                    <Grid syt  container spacing={3}  direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={12} sm={6} >\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                Acquisition  –  Document Verification  \n                                </Typography> \n\n                                {/* <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                Document Verification  \n                                </Typography> \n                                <Typography>\n                                Record to be Processed: {this.state.recordToBeProcessed} \n                                </Typography> */}\n                            </Grid>\n                            <Grid item xs={10} sm={3}> \n                                <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                        <Select\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        multiple\n                                        name=\"selectedZone\"\n                                        value={this.state.selectedZone}\n                                        onChange={this.zoneChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        {this.state.listofzones ? this.state.listofzones.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                        </Select>\n                                    </FormControl>\n                            </Grid>\n\n                            <Grid item xs={2} sm={2}  > \n                                 {/* InputLabelProps={{ shrink: true }} */}\n                                <TextField  value={this.state.searchby}  label=\"Search by Mobile No.\"  style={{width:\"100%\"}} name=\"Search by Mobile No.\" name=\"searchby\" onChange={this.onChange} />\n                            </Grid>\n                            <Grid item xs={2} sm={1} alignItems=\"left\"> \n                                <Button type=\"submit\"  onClick={() => this.searchOnDB( this.state.searchby )} variant=\"contained\"  style={{marginLeft: '20px'}} >Search</Button>\n                            </Grid>\n                            \n                </Grid>\n\n                <div style={{padding:\"10px\", overflow:\"auto\", height:\"550px\"}} >\n\n                    {/* style={{whiteSpace: \"nowrap\"}}   stickyHeader aria-label=\"sticky table\"*/}\n                    <Table size=\"small\"   aria-label=\"sticky table\">\n                        <TableHead >\n                            <TableRow style={{width:\"170px\",whiteSpace: \"nowrap\"}}>\n                                <TableCell align=\"\">View</TableCell>\n                                <TableCell align=\"\">Mobile Number</TableCell>\n                                <TableCell align=\"\">NIC</TableCell>\n                                <TableCell align=\"\">SIM</TableCell>\n                                <TableCell align=\"\">PEF Count</TableCell>\n                                <TableCell align=\"\">NIC Count</TableCell>\n                                <TableCell align=\"\">Distributor</TableCell>\n                                <TableCell align=\"\">Zone</TableCell>\n\n                                <TableCell align=\"\">FTA Date</TableCell>\n                                {/* <TableCell align=\"\">Resubmit</TableCell>\n                                <TableCell align=\"\">Verified Date</TableCell>\n                                 */}\n                                <TableCell align=\"\">Submit Date</TableCell>\n                                {/* <TableCell align=\"\">Resubmit Date</TableCell> */}\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{ whiteSpace: \"nowrap\"}}>\n                            {this.state.searchedproducts ? this.state.searchedproducts.map(row => (\n                                <TableRow hover   key={row.txnId} >\n                                    <TableCell  align=\"center\" onClick={() => this.editProduct(row.txnId,row.sim)}><VisibilityIcon style={{cursor:\"hand\"}} /></TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className=\"hidden\">\n                                        {row.mobileNumber}\n                                    </TableCell>\n                                    <TableCell align=\"center\" >{row.nic}</TableCell>\n                                    <TableCell align=\"center\">{row.sim}</TableCell>\n                                    <TableCell align=\"center\">{row.pefCount}</TableCell>\n                                    <TableCell align=\"center\">{row.nicCount}</TableCell>\n                                    <TableCell align=\"center\">{row.distributer}</TableCell>\n                                    <TableCell align=\"center\">{row.zone}</TableCell>\n                                    <TableCell align=\"center\">{row.ftaDate.substring(0, 10)}</TableCell>\n                                     {/* <TableCell align=\"center\">{row.resubmit}</TableCell> \n                                    <TableCell align=\"center\">{row.verifiedDate ? row.verifiedDate.substring(0, 10) : \"none\"}</TableCell>\n                                      */}\n                                    <TableCell align=\"center\">{row.submitDate ? row.submitDate.substring(0, 10) : \"none\"}</TableCell>\n                                    {/* <TableCell align=\"center\">{row.resubmitDate ? row.resubmitDate.substring(0, 10) : \"none\"}</TableCell> */}\n\n\n                                    {/* <TableCell align=\"center\">{this.convertBool(row.showRecent)}</TableCell> */}\n                                  \n\n                                </TableRow>\n                            )):  \"\"}\n                        </TableBody>\n                    </Table>\n\n                    <div style={{color:\"gray\", fontSize:\"15px\", textAlign:\"center\"}}> <br/> <span id=\"showMessage\"> </span></div>\n     \n                \n                {/* </Container> */}\n\n                </div>\n                {/* <TablePagination\n                        rowsPerPageOptions={[10, 25, 100]}\n                        component=\"div\"\n                        count={10}\n                        rowsPerPage={10}\n                        page={1}\n                        backIconButtonProps={{\n                        'aria-label': 'previous page',\n                        }}\n                        nextIconButtonProps={{\n                        'aria-label': 'next page',\n                        }}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                    /> */}\n                </Paper>\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'left'\n    },\n    tableRow: {\n        hover: {\n            \"&:hover\": {\n                background: 'green !important',\n            },\n        },\n\n    },\n    \n    selectStyle:{\n        // minWidth: '100%',\n         marginBottom: '0px',\n          minWidth: 340,\n          maxWidth: 340,\n    }\n}\n\n\n\nexport default VerifyList;","import React, { useState }  from \"react\";\nimport ActivationService from \"../service/ActivationService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from '@material-ui/core/TextField';\nimport Notify from \"../../utils/Notify\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\n\nimport Grid from '@material-ui/core/Grid';\n\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {Container} from \"@material-ui/core\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\n import \"./Verify.css\";\n\n const handleChangePage = (event, newPage) => {\n   //  this.setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n   \n   // this.setRowsPerPage(parseInt(event.target.value, 10));\n  // this.setPage(0);\n  };\n\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass VerifyList extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state ={\n            products: [],\n            searchedproducts:'',\n            searchby:'',\n            listofzones:[],\n            selectedZone:[],\n            zone:''\n        };\n        this.loadProductList = this.loadProductList.bind(this);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.zoneChange = this.zoneChange.bind(this);\n        this.onlockTransectionOnSkip = this.onlockTransectionOnSkip.bind(this);\n\n    }\n\n    componentDidMount() {\n        this.loadProductList(\"\");\n        localStorage.setItem(\"lastUrl\",\"verify\");\n\n        ActivationService.getTotalToBeProcessed().then(res => {\n            let data = resolveResponse(res);\n            console.log(data.result)\n            localStorage.setItem(\"acquisitionCount\",data.result && data.result.acquisitionCount ); \n            localStorage.setItem(\"resubmitCount\",data.result && data.result.resubmitCount ); \n        })\n    }\n\n    onlockTransectionOnSkip = (txn) =>{\n        var transactionsIds = {\n            transactionsIds : txn\n        }\n\n        ActivationService.unlockTransectionsSkip( transactionsIds ).then(res => {\n            let data = resolveResponse(res);\n            if(data.message != 'ok'){\n                Notify.showError(\"Server Error\"+data.message);\n            }  \n       });\n       \n    }\n\n    searchOnDB(mobileNumber) {\n\n        var verifyListingTxn = localStorage.getItem(\"verifyListingTxn\");\n        verifyListingTxn =  verifyListingTxn && verifyListingTxn.split(',');\n\n        if(verifyListingTxn.length >= 1){\n            this.onlockTransectionOnSkip(verifyListingTxn); \n        }\n       \n\n        this.loadProductList(mobileNumber) ;\n       \n     \n        // ActivationService.searchMobileNo(mobileNumber).then(res => {\n        //     let data = resolveResponse(res);\n        //     const selectedProduct = data.result;            \n\n        //     if(selectedProduct && selectedProduct.transactionId){\n        //         window.localStorage.setItem(\"selectedProductId\", selectedProduct.transactionId);\n        //         //window.localStorage.setItem(\"selectedSim\", '');\n        \n        //         this.props.history.push('/verify-edit');\n        //         // this.setState({\n        //         //     });\n        //     }\n        //     // else{\n        //     //     Notify.showError(\"Not Found or already processed\");\n        //     // }\n           \n        // })\n    }\n  \n    \n    loadProductList(mobileNumber) {\n        var d = new Date();\n        var endTime = d.getTime();\n\n        var startTime = endTime - 172800000; \n\n        var  data =  {\n            \n            \"mobileNumber\": mobileNumber ? mobileNumber : null,\n            \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n          }\n        \n        document.getElementById('showMessage').innerHTML = \"Please Wait Loading...\";\n\n        ActivationService.listDocsResubmit(data)\n            .then((res) => {\n                let data = resolveResponse(res);\n                var activationList = data.result && data.result.activationList; \n                this.setState({products: activationList})\n                this.setState({searchedproducts: activationList})\n                var listingIds =  activationList && activationList.map(function(val, index){\n                return val.txnId\n                });\n\n                if(document.getElementById('showMessage')){\n                    if(activationList == null){\n                        document.getElementById('showMessage').innerHTML = \"No new documents for verification\";\n                    }else{\n                        document.getElementById('showMessage').innerHTML = \"\";\n                    }    \n                }\n\n                if(listingIds){\n                    localStorage.setItem(\"verifyListingTxn\",listingIds); \n                }else{\n                    localStorage.setItem(\"verifyListingTxn\",\"\"); \n                }\n                \n                 \n            });\n\n        setTimeout(() => {\n            if(this.state.searchedproducts && this.state.searchedproducts.length ==0){\n                document.getElementById('showMessage').innerHTML = \"Server taking time to response please reload again and check\";\n            }\n        }, 7000);\n\n\n        ActivationService.getStaticData('BOA').then(res => {\n            let data = resolveResponse(res);\n            this.setState({listofzones: data && data.result && data.result.zones}) \n        })\n        \n    }\n\n    onChange = (e) => {\n\n        const re = /^[0-9\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n            this.setState({searchby: e.target.value})\n        }\n       \n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    addProduct() {\n        this.props.history.push('/add-product');\n    }\n\n    someAction() {\n      alert(\"action happed in other commpornt\"); \n    }\n\n   \n\n\n    editProduct(productId,sim) {\n        console.log(\"productid, row.sim\",productId, sim  )\n        \n        window.localStorage.setItem(\"selectedProductId\", productId);\n        window.localStorage.setItem(\"selectedSim\", sim);\n        window.localStorage.setItem(\"fromSubmit\", 'yes');\n\n        this.props.history.push('/verify-edit');\n\n        // this.props.history.push({\n        //     pathname: '/edit-doc',\n        //     search: '?query=abc',\n        //     state: { rowdata: productId }\n        //   })\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n\n      \n\n    render(){\n   \n        return(\n\n            <React.Fragment>\n                <PostLoginNavBar/>\n\n                <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n               \n                    <Grid syt  container spacing={3}  direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={12} sm={6} >\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                Resubmit – Document Verfication\n                                </Typography> \n                                {/* <Typography>\n                                Record to be Processed: {this.state.recordToBeProcessed}\n                                </Typography>  */}\n                            </Grid>\n                            <Grid item xs={10} sm={3}> \n                                <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                        <Select\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        multiple\n                                        name=\"selectedZone\"\n                                        value={this.state.selectedZone}\n                                        onChange={this.zoneChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        {this.state.listofzones ? this.state.listofzones.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                        </Select>\n                                    </FormControl>\n                            </Grid>\n\n                            <Grid item xs={2} sm={2}  > \n                                 {/* InputLabelProps={{ shrink: true }} */}\n                                <TextField  value={this.state.searchby}  label=\"Search by Mobile No.\"  style={{width:\"100%\"}} name=\"Search by Mobile No.\" name=\"searchby\" onChange={this.onChange} />\n                            </Grid>\n                            <Grid item xs={2} sm={1} alignItems=\"left\"> \n                                <Button type=\"submit\"  onClick={() => this.searchOnDB( this.state.searchby )} variant=\"contained\"  style={{marginLeft: '20px'}} >Search</Button>\n                            </Grid>\n                            \n                </Grid>\n\n                <div style={{padding:\"10px\", overflow:\"auto\", height:\"550px\"}} >\n\n                    {/* style={{whiteSpace: \"nowrap\"}}   stickyHeader aria-label=\"sticky table\"*/}\n                    <Table size=\"small\"   aria-label=\"sticky table\">\n                        <TableHead >\n                            <TableRow style={{width:\"170px\",whiteSpace: \"nowrap\"}}>\n                                <TableCell align=\"\">View</TableCell>\n                                <TableCell align=\"\">Mobile Number</TableCell>\n                                <TableCell align=\"\">NIC</TableCell>\n                                <TableCell align=\"\">SIM</TableCell>\n                                <TableCell align=\"\">PEF Count</TableCell>\n                                <TableCell align=\"\">NIC Count</TableCell>\n                                <TableCell align=\"\">Distributor</TableCell>\n                                <TableCell align=\"\">Zone</TableCell>\n                                <TableCell align=\"\">FTA Date</TableCell>\n                                {/* <TableCell align=\"\">Status</TableCell> */}\n                                {/* <TableCell align=\"\">Resubmit</TableCell>\n                                <TableCell align=\"\">Verified Date</TableCell> */}\n                                <TableCell align=\"\">Submit Date</TableCell>\n                                <TableCell align=\"\">Resubmit Date</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{ whiteSpace: \"nowrap\"}}>\n                            {this.state.searchedproducts ? this.state.searchedproducts.map(row => (\n                                <TableRow hover   key={row.txnId} >\n                                    <TableCell  align=\"center\" onClick={() => this.editProduct(row.txnId,row.sim)}><VisibilityIcon style={{cursor:\"hand\"}} /></TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className=\"hidden\">\n                                        {row.mobileNumber}\n                                    </TableCell>\n                                    <TableCell align=\"center\" >{row.nic}</TableCell>\n                                    <TableCell align=\"center\">{row.sim}</TableCell>\n                                    <TableCell align=\"center\">{row.pefCount}</TableCell>\n                                    <TableCell align=\"center\">{row.nicCount}</TableCell>\n                                    <TableCell align=\"center\">{row.distributer}</TableCell>\n                                    <TableCell align=\"center\">{row.zone}</TableCell>\n                                    <TableCell align=\"center\">{row.ftaDate.substring(0, 10)}</TableCell>\n                                    {/* <TableCell align=\"center\">{row.status ? 'YES' : 'NO'}</TableCell> */}\n                                    {/* <TableCell align=\"center\">{row.resubmit}</TableCell>\n                                    <TableCell align=\"center\">{row.verifiedDate ? row.verifiedDate.substring(0, 10) : \"none\"}</TableCell>\n                                     */}\n                                    <TableCell align=\"center\">{row.submitDate ? row.submitDate.substring(0, 10) : \"none\"}</TableCell>\n                                    <TableCell align=\"center\">{row.resubmitDate ? row.resubmitDate.substring(0, 10) : \"none\"}</TableCell>\n\n\n                                    {/* <TableCell align=\"center\">{this.convertBool(row.showRecent)}</TableCell> */}\n                                  \n\n                                </TableRow>\n                            )):  \"\"}\n                        </TableBody>\n                    </Table>\n\n                    <div style={{color:\"gray\", fontSize:\"15px\", textAlign:\"center\"}}> <br/> <span id=\"showMessage\"> </span></div>\n     \n                \n                {/* </Container> */}\n\n                </div>\n                {/* <TablePagination\n                        rowsPerPageOptions={[10, 25, 100]}\n                        component=\"div\"\n                        count={10}\n                        rowsPerPage={10}\n                        page={1}\n                        backIconButtonProps={{\n                        'aria-label': 'previous page',\n                        }}\n                        nextIconButtonProps={{\n                        'aria-label': 'next page',\n                        }}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                    /> */}\n                </Paper>\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'left'\n    },\n    tableRow: {\n        hover: {\n            \"&:hover\": {\n                background: 'green !important',\n            },\n        },\n\n    },\n    \n    selectStyle:{\n        // minWidth: '100%',\n         marginBottom: '0px',\n          minWidth: 340,\n          maxWidth: 340,\n    }\n}\n\n\n\nexport default VerifyList;","import React, { Component } from \"react\";\nimport { Fade,Slide,Zoom } from 'react-slideshow-image';\nimport Grid from '@material-ui/core/Grid';\nimport $ from 'jquery';\nimport ReactPanZoom from \"react-image-pan-zoom-rotate\";\n\n\nconst fadeProperties = {\n  defaultIndex:0,\n  duration: 1000,\n  transitionDuration: 100,\n  infinite: false,\n  indicators: true,\n  arrows: true,\n  scale: 0.5,\n  autoplay:false,\n  onChange: (oldIndex, newIndex) => {\n    console.log(`fade transition from ${oldIndex} to ${newIndex}`);\n  }\n}\n\n\nvar degree = 90, scale=1;\nfunction rotate(){\n   \n   $(\"#imageCon\").css({'transform': 'rotate('+degree+'deg)'});\n degree += 90; \n console.log(\"rotete called \"); \n}\n\nfunction zoomIn(){\n   scale += 0.25;\n $(\"#imageCon\").css({'transform': 'scale('+scale+')'});\n console.log(\"zoom in\"); \n\n}\n\n\nfunction zoomOut(){\n   scale -= 0.25;\n $(\"#imageCon\").css({'transform': 'scale('+scale+')'});\n console.log(\"zoom out\"); \n\n}\n\n\n\nclass SlideSlowGalary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      photoIndex: 0,\n      isOpen: false,\n      scale:0\n    };\n\n    this.openImageGalary = this.openImageGalary.bind(this);\n\n  }\n\n\n  componentDidMount() {\n      // document.addEventListener(\"keypress\", function(t) {\n      //   console.log(\"t.keyCode\",t.keyCode)\n      //   if(43 === t.keyCode || 61 === t.keyCode){\n      //     zoomIn();\n      //   }else if(45 === t.keyCode){\n      //     zoomOut();\n      //   }else if(17 == t.keyCode ){\n      //     rotate();\n      //   }\n      // });\n      console.log(\"imageDetailsSlide\", this.props.imageDetails)\n\n  }\n\n\n  openImageGalary = (index) => {\n\n    console.log(\"index\", index); \n    this.setState({\n      isOpen: true,\n      photoIndex:index\n      // mainSrc:'https://pbs.twimg.com/media/Bpbm1DXCAAA5vk4?format=jpg&name=900x900'\n    });\n    \n    $('.MuiToolbar-root').hide();   \n  }\n\n\n  render() {\n\n  const styles = {\n    imgTextStyle : {\n      textAlign: 'center',\n      position: 'relative',\n      // marginBottom: '-24px',\n      fontSize: 'inherit',\n      color:\"white\",\n      fontWeight:\"bold\"\n    }, \n    topImgStyle:{\n    //  width:\"100%\", \n    //  height:\"525px\", \n      cursor:\"zoom-in\", \n      borderRadius:\"3px\"\n    },\n    buttomImgSyle: {\n      width:\"100%\", \n      height:\"240px\", \n      cursor:\"zoom-in\", \n      borderRadius:\"3px\"\n    },\n    displayBlock:{\n      display:'block', \n    },\n    displayNone:{\n      display:'none', \n    }\n\n  };\n\n    const { photoIndex, isOpen } = this.state;\n    var  topImg = this.props.imageDetails.imageDetails;\n    \n    console.log(\"imageDetailsslide\", this.props.imageDetails)\n        \n      var images = []; \n      const topImgItem = []\n          topImg && topImg.map((data,i)=>{\n            images.push(topImg[i].img); \n              topImgItem.push(\n\n              \n                <Grid item xs={12} sm={12} >  \n                  <div className=\"each-fade\" style={{verticalAlign:\"middle !important\"}}>\n                        <div className=\"image-container\"  style={{height:'70vh'}}> \n                        <div className=\"titleOverlay\" style={{textAlign:\"center\"}}>&nbsp;&nbsp; {data.title} &nbsp;&nbsp;</div> \n\n                          {/* <img  id=\"imageCon\" src={data.img} /> */}\n                          <ReactPanZoom image={data.img} alt={data.title}/>\n                        </div>\n                        \n                      </div>\n                </Grid>\n\n                ); \n\n          })\n      \n \n    \n    return (\n       \n      <div style={{justifyContent:\"center\"}}>\n\n\n          <div className=\"slide-container\">\n                {/* <Fade {...fadeProperties}>\n                 {topImgItem}\n              </Fade> */}\n\n               <Slide ref={this.props.imageDetails.slideRef} {...fadeProperties}>\n                  {topImgItem}\n               </Slide>\n\n              {/* <Zoom {...fadeProperties}>\n                 {topImgItem}\n              </Zoom> */}\n              \n         </div>\n\n        {/* {isOpen && (\n          <Lightbox\n            mainSrc={images[photoIndex]}\n            nextSrc={images[(photoIndex + 1) % images.length]}\n            prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n            onCloseRequest={() => {this.setState({ isOpen: false }); $('.MuiToolbar-root').show(); }}\n            onMovePrevRequest={() =>{\n                this.setState({\n                  photoIndex: (photoIndex + images.length - 1) % images.length\n                })\n              }\n              \n            }\n            onMoveNextRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + 1) % images.length\n              })\n            }\n          />\n        )} */}\n      </div>\n    );\n  }\n}\n\n\nexport default SlideSlowGalary;\n\n\n\n//functional style \n// class SimpleAction extends React.Component {\n\n//   render() {\n//     return (\n//       <div style={{height:\"400px\"}}>\n//           <Slideshow />\n//       </div>\n     \n//     )\n//   }\n// }\n\n// const style={\n//   setWH :{\n//   height:\"300px\", \n//   width:\"500px\"\n  \n\n//   }\n// }\n\n// const Slideshow = (props) => {\n\n//   console.log(\"props\", props); \n//   var  topImg = props.imageDetails;\n\n//   var images = []; \n//   const topImgItem = []\n//   const buttomImgItem = []\n//       topImg.map((data,i)=>{\n//         images.push(topImg[i].img); \n//           topImgItem.push(\n//             <Grid item xs={12} sm={12} >\n//               <div className=\"each-fade\">\n//                     <div className=\"image-container\">\n//                     <img onClick={() => this.openImageGalary(i)} src={data.img}  style={styles.topImgStyle} />\n//                     </div>\n//                     <div style={styles.imgTextStyle}> {data.title} </div> \n//                   </div>\n//             </Grid>\n//             ); \n\n//       })\n   \n\n//   console.log(\"props\", props); \n//   return (\n//     <div className=\"slide-container\">\n//       <Fade {...fadeProperties}>\n//         {topImgItem}\n//       </Fade>\n//     </div>\n//   )\n// }\n\n// const styles = {\n//   imgTextStyle : {\n//     textAlign: 'center',\n//     position: 'relative',\n//     marginBottom: '-24px',\n//     fontSize: 'inherit',\n//     color:\"white\",\n//     fontWeight:\"bold\"\n//   }, \n//   topImgStyle:{\n//     width:\"100%\", \n//     height:\"390px\", \n//     cursor:\"zoom-in\", \n//     borderRadius:\"3px\"\n//   },\n//   buttomImgSyle: {\n//     width:\"100%\", \n//     height:\"240px\", \n//     cursor:\"zoom-in\", \n//     borderRadius:\"3px\"\n//   },\n//   displayBlock:{\n//     display:'block', \n//   },\n//   displayNone:{\n//     display:'none', \n//   }\n\n// };\n\n// export default Slideshow;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport ActivationService from \"../service/ActivationService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport Notify from \"../../utils/Notify\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport SlideShowGalary from \"../../utils/SlideShowGalary\";\n\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport \"./Verify.css\";\nimport ReactPanZoom from \"react-image-pan-zoom-rotate\";\n\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport DoneSharpIcon from '@material-ui/icons/DoneSharp';\nimport { red } from '@material-ui/core/colors';\n\nclass VerifyEdit extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n                address1: \"\",\n                address2: null,\n                address3: null,\n                altContactNumber: \"\",\n                customerImageUrl: null,\n                customerSignatureUrl: null,\n                deDateTime: null,\n                deUser: null,\n                dob: \"\",\n                firstName: \"\",\n                gender: \"\",\n                lastName: null,\n                middleName: null,\n                mobileNumber: \"\",\n                pefImageUrl: null,\n                poiBackImageUrl: null,\n                poiFrontImageUrl: null,\n                poiNumber: \"\",\n                poiType: null,\n                status: \"\",\n                submittedBy:'',\n                showPersonalDetails:'',\n                title: \"\",\n                rejectedReasons:'',\n                transactionId: '',\n                selectedReasons: {},\n                sim : '',\n                loader:false,\n                approveLoader:false,\n                approveDone:false,\n                approveButton:true,\n                rejectLoader:false,\n                rejectDone: false,\n                rejectButton:true,\n                loginId:'',\n                emailid:'',\n                presentAddress:'',\n                comments:\"\",\n                bothReasons:'',\n                loading: true\n\n            }\n        this.onChange = this.onChange.bind(this);\n        this.approveEV = this.approveEV.bind(this);\n        this.rejectEV = this.rejectEV.bind(this);\n        this.loadOneTransection = this.loadOneTransection.bind(this);\n        this.onlockTransectionOnSkip = this.onlockTransectionOnSkip.bind(this);\n        this.slideRef = React.createRef(); \n\n    }\n\n    loadOneTransection(){\n\n\n\n        const selectedProductId = localStorage.getItem(\"selectedProductId\");\n       // console.log( \"selectedProductId\",  selectedProductId);\n\n        if(selectedProductId == null) {\n           // alert(\"Please select a product to edit.\");\n         //   this.props.history.push('/verify');\n            this.cancel();\n        }else {\n            ActivationService.getOneVerify(selectedProductId).then(res => {\n                let data = resolveResponse(res);\n                const selectedProduct = data.result;\n                console.log(\"selectedProduct\",selectedProduct);\n                var objectReason = '';\n                if(selectedProduct && selectedProduct.rejectedReasons){\n                    var listReasons = selectedProduct.rejectedReasons && selectedProduct.rejectedReasons.split(\"|\");\n                    objectReason = listReasons.reduce(function(result, item, index, array) {\n                        result[item] = true;\n                        return result;\n                      }, {}) ;\n                }\n\n\n                if(selectedProduct){\n                    this.setState({\n                        address1: selectedProduct.address1,\n                        address2: selectedProduct.address2,\n                        address3: selectedProduct.address3,\n                        presentAddress:selectedProduct.presentAddress,\n                        altContactNumber: selectedProduct.altContactNumber,\n                        comments: selectedProduct.comments,\n                        customerImageUrl: selectedProduct.customerImageUrl,\n                        customerSignatureUrl: selectedProduct.customerSignatureUrl,\n                        deDateTime: selectedProduct.deDateTime,\n                        deUser: selectedProduct.deUser,\n                        emailid: selectedProduct.emailid,\n                        alternateNumber:selectedProduct.alternateNumber,\n                        firstName: selectedProduct.firstName,\n                        gender: selectedProduct.gender,\n                        lastName: selectedProduct.lastName,\n                        middleName: selectedProduct.middleName,\n                        mobileNumber: selectedProduct.mobileNumber,\n                        pefImageUrl: selectedProduct.pefImageUrl,\n                        poiBackImageUrl: selectedProduct.poiBackImageUrl,\n                        poiFrontImageUrl: selectedProduct.poiFrontImageUrl,\n                        retailerSignatureUrl : selectedProduct.retailerSignatureUrl,\n                        poiNumber: selectedProduct.poiNumber,\n                        poiType: selectedProduct.poiType,\n                        status: selectedProduct.status,\n                        submittedBy:  selectedProduct.submittedBy,\n                        showPersonalDetails: selectedProduct.showPersonalDetails,\n                        title: selectedProduct.title,\n                        transactionId: selectedProduct.transactionId,\n                        selectedReasons: objectReason,   //{\"One\":true, Two: true}\n                        sim : selectedProduct.simNumber,\n                        submittedDate: selectedProduct.submittedDate,\n                        submittedDateStr: selectedProduct.submittedDateStr,\n                        resubmittedDate : selectedProduct.resubmittedDate,\n                        resubmittedDateStr : selectedProduct.resubmittedDateStr,\n                        ftaDate : selectedProduct.ftaDate,\n                        prevRejectedImgs : selectedProduct.prevData\n                        });\n\n                    \n                        if(this.state.showPersonalDetails){\n                            this.setState({ rejectedReasons: this.state.bothReasons.eactivatedRejectionReasons});\n                        }else {\n                            this.setState({ rejectedReasons: this.state.bothReasons.preActivatedRejectionReasons});\n                        }\n\n                }else{\n                    Notify.showError(JSON.stringify(data));\n                }\n\n                this.setState({loading:false})\n\n            })\n\n\n\n        }\n\n     \n    }\n\n    componentDidMount() {\n        this.loadOneTransection();\n        localStorage.setItem(\"lastUrl\",\"verify-edit\");\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetails\"));\n        var roleCode = userDetails && userDetails.roleCode; \n        this.setState({ loader: true,  loginId : userDetails.loginId });\n        if(roleCode){\n            ActivationService.getStaticData(roleCode).then(res => {\n                console.log(\"reason:\", res);\n                let data = resolveResponse(res);\n                var rejectedReasons = '';\n\n                if(data.result){\n                    this.setState({ bothReasons: data.result});\n                }\n             \n\n            })\n        }\n    }\n    render() {\n\n        // reasonList.push(<div style={{color:\"red\"}}> <FormControlLabel  color=\"primary\"  control={<Checkbox  onChange={this.handleChange(rejectedReasons[i].exemptReason)} checked={this.state.selectedReasons[rejectedReasons[i].exemptReason] ? true: false} /> } label={rejectedReasons[i].exemptReason} /> </div>)\n        // reasonList.push(<div> <FormControlLabel  control={<Checkbox   onChange={this.handleChange(rejectedReasons[i].exemptReason)} checked={this.state.selectedReasons[rejectedReasons[i].exemptReason] ? true: false} color=\"primary\"/> } label={rejectedReasons[i].exemptReason} /> </div>)\n        console.log('this.state',this.state)\n\n\n        var rejectedReasons =  this.state.rejectedReasons;\n        var reasonList = [];\n        if(rejectedReasons){\n            for(var i=0; i < rejectedReasons.length; i++){\n                if(rejectedReasons[i].isMandatory == 1)\n                    reasonList.push(<div> <label style={{color:\"red\"}}><input type=\"checkbox\"  onChange={this.handleChange(rejectedReasons[i].exemptReason)} checked={this.state.selectedReasons[rejectedReasons[i].exemptReason] ? true: false} /> {rejectedReasons[i].exemptReason} </label></div>)\n                else\n                     reasonList.push(<div> <label> <input type=\"checkbox\"  onChange={this.handleChange(rejectedReasons[i].exemptReason)} checked={this.state.selectedReasons[rejectedReasons[i].exemptReason] ? true: false} /> {rejectedReasons[i].exemptReason} </label></div>)\n\n            }\n        }\n\n          var imageDetails = []; var baseUrl= ''; //'https://retailer.airtel.lk';\n          if(this.state.poiFrontImageUrl){\n            imageDetails.push({\n                img: baseUrl+ this.state.poiFrontImageUrl,\n                title: 'POI Front Image',\n                author: 'Front Image',\n                featured: true,\n              });\n          }\n          if(this.state.customerImageUrl){\n            imageDetails.push({\n                img:  baseUrl+  this.state.customerImageUrl,\n                title: 'Customer Image',\n                author: 'Customer Image',\n                featured: true,\n              });\n          }\n          if(this.state.poiBackImageUrl){\n            imageDetails.push({\n                img:  baseUrl+  this.state.poiBackImageUrl,\n                title: 'POI Back Image',\n                author: 'Back Image',\n                featured: true,\n              });\n          }\n          \n\n          if(this.state.customerSignatureUrl){\n            imageDetails.push({\n                img:  baseUrl+  this.state.customerSignatureUrl,\n                title: 'Customer Signature',\n                author: 'Customer Signature',\n                featured: true,\n              });\n          }\n\n          if(this.state.retailerSignatureUrl){\n            imageDetails.push({\n                img:  baseUrl+  this.state.retailerSignatureUrl,\n                title: 'Retailer Signature',\n                author: 'Retailer Signature',\n                featured: true,\n              });\n          }\n         \n         \n          console.log(\"imageDetails\",imageDetails);\n\n\n          \n\n          var prevImageDetails = [];\n          if(this.state.prevRejectedImgs && this.state.prevRejectedImgs.poiFrontImageUrl){\n            prevImageDetails.push({\n                img: baseUrl+  this.state.prevRejectedImgs.poiFrontImageUrl,\n                title: 'POI Front Image',\n                author: 'Front Image',\n                featured: true,\n              });\n          }\n          if(this.state.prevRejectedImgs && this.state.prevRejectedImgs.customerImageUrl){\n            prevImageDetails.push({\n                img:  baseUrl+  this.state.prevRejectedImgs.customerImageUrl,\n                title: 'Customer Image',\n                author: 'Customer Image',\n                featured: true,\n              });\n          }\n          if(this.state.prevRejectedImgs && this.state.prevRejectedImgs.poiBackImageUrl){\n            prevImageDetails.push({\n                img: baseUrl+   this.state.prevRejectedImgs.poiBackImageUrl,\n                title: 'POI Back Image',\n                author: 'Back Image',\n                featured: true,\n              });\n          }\n          \n\n          if(this.state.prevRejectedImgs && this.state.prevRejectedImgs.customerSignatureUrl){\n            prevImageDetails.push({\n                img: baseUrl+  this.state.prevRejectedImgs.customerSignatureUrl,\n                title: 'Customer Signature',\n                author: 'Customer Signature',\n                featured: true,\n              });\n          }\n\n          if(this.state.prevRejectedImgs && this.state.prevRejectedImgs.retailerSignatureUrl){\n            prevImageDetails.push({\n                img: baseUrl+ this.state.prevRejectedImgs.retailerSignatureUrl,\n                title: 'Retailer Signature Image',\n                author: 'Retailer Signature Image',\n                featured: true,\n              });\n          }\n\n          if(this.state.showPersonalDetails && this.state.prevRejectedImgs && this.state.prevRejectedImgs.pefImageUrl){\n            prevImageDetails.push({\n                img:  baseUrl+  this.state.prevRejectedImgs.pefImageUrl,\n                title: 'CAF Image',\n                author: 'CAF Image',\n                featured: true,\n              });\n          }\n\n\n          console.log(\"prevRejectedImgs\",prevImageDetails)\n\n        var pefcontainer = 2, doccontaiter = 7, datacontainer=3;\n        if(!this.state.showPersonalDetails) {\n            pefcontainer = 5; \n            doccontaiter = 5;\n            datacontainer = 2\n        }\n        if(this.state.loading){\n            return (  \n                 <React.Fragment>\n                    <PostLoginNavBar/><br />\n                    <Typography variant=\"h6\" >Loading...please wait.</Typography>\n                </React.Fragment> \n                )   \n        }\n        \n        return(\n\n\n            <React.Fragment>\n            <PostLoginNavBar/>\n            {/* <h2  style={styles.textStyle}> View and Verify Document </h2> */}\n           \n            <Typography variant=\"h6\" style={styles.textStyleHeading} >View and Verify Document</Typography>\n\n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={1}  style={{paddingLeft:\"10px\",paddingRight:\"10px\"}}>\n\n                <Grid item xs={12} sm={pefcontainer}>\n                    <Paper style={{overflow:\"scroll\", height:\"78vh\"}}>\n                     {this.state.loader ?  this.state.showPersonalDetails ?    <SubmitedByRetailer cafdetails={this.state} /> : <SubmitedByDistributer pefImageUrl={{pefImage: this.state.pefImageUrl, prevPefImage: this.state.prevRejectedImgs && this.state.prevRejectedImgs.pefImageUrl }} /> : \"\"}\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12} sm={doccontaiter}>\n                     <Paper style={{overflow:\"scroll\", height:\"78vh\"}}>\n                           {this.state.status==\"image_uploading\"? <Typography variant=\"h6\" style={{color:\"gray\",textAlign:\"center\"}} ><br /><br /> <br /> <br /> <br /> <br /> <br />No documents are uploaded yet</Typography> : null}\n\n                           {/* {this.state.status==\"av_pending\"? <ImageGalary imageDetails={imageDetails} /> : null} */}\n                           {/* {imageDetails.length ? <Typography variant=\"h6\">Customer Documents</Typography> : null } */}\n                           {imageDetails.length? <SlideShowGalary imageDetails={{imageDetails: imageDetails, slideRef : this.slideRef}} /> : null}\n                            <br />\n                           {prevImageDetails.length ? <Typography variant=\"h6\">Previous Rejected Documents</Typography> : null }\n                           {/* {prevImageDetails.length ? <ImageGalary imageDetails={prevImageDetails} /> : null } */}\n                           {prevImageDetails.length ? <SlideShowGalary imageDetails={{imageDetails: prevImageDetails, slideRef : this.slideRef}} /> : null }\n\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12} sm={datacontainer}>\n                    <Paper style={{padding:\"10px\"}}>\n                    <Typography variant=\"h6\" style={styles.textStyle}>Verify or Reject</Typography>\n                    <form style={styles.formContainer}>\n                        {/* <Typography variant=\"h6\" component=\"h3\">Mobile : {this.state.mobileNumber}   </Typography> */}\n                        <TextField label=\"Mobile No\" required={true} fullWidth name=\"productName\" value={this.state.mobileNumber} />\n                        <TextField label={this.state.poiType} required={true} fullWidth name=\"displayName\" value={this.state.poiNumber} />\n                        <TextField label=\"SIM\" required={true} fullWidth name=\"displayName\" value={this.state.sim} />\n\n                         <Grid item xs={12} sm={12}  >\n                            <Typography variant=\"p\">Select Reasons</Typography>\n                         </Grid>\n                        <div>\n                            {reasonList}\n                        </div>\n                        <TextField multiline rows={2} label=\"Comments\" fullWidth margin=\"none\" name=\"comments\" value={this.state.comments} onChange={this.onChange}/>\n                    </form>\n                    </Paper>\n                </Grid>\n\n            </Grid>\n\n            <br />\n\n            {this.state.loader ?\n            <div style={styles.footerButton}><Grid container spacing={2} container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\">\n                        {this.state.approveLoader ? <CircularProgress />: \"\"}\n                        {this.state.approveDone ? <Button variant=\"outlined\" color=\"primary\" style={{marginLeft: \"20px\"}}> <DoneSharpIcon color=\"primary\"/> Approved and Loading Next</Button> : \"\"}\n                        {this.state.approveButton ? (this.state.status==\"image_uploading\" ?  <Button disabled variant=\"contained\" color=\"primary\" style={{marginLeft: '20px'}} onClick={this.approveEV}>Approve</Button>: <Button variant=\"contained\" color=\"primary\" style={{marginLeft: '20px'}} onClick={this.approveEV}>Approve</Button>): \"\"}\n\n                        {this.state.rejectLoader ? <CircularProgress />: \"\"}\n                        {this.state.rejectDone ?  <Button variant=\"outlined\" color=\"primary\" style={{marginLeft: \"20px\"}}> <DoneSharpIcon color=\"primary\"/> Rejected and Loading Next</Button> : \"\"}\n                        {this.state.rejectButton ? <Button variant=\"contained\" color=\"secondary\" style={{marginLeft: '20px'}} onClick={this.rejectEV}>Reject</Button>: \"\"}\n\n                        <Button variant=\"contained\" color=\"secondary\" style={{marginLeft: '20px', backgroundColor:\"#33691e\"}} onClick={this.skipThisVerify}> SKIP </Button>\n                        <Button variant=\"contained\" color=\"default\" style={{marginLeft: '20px'}} onClick={this.cancel}>Back to Listing</Button>\n            </Grid></div>: \"\"}\n\n\n\n\n            <div>\n        </div>\n\n            </React.Fragment>\n        )\n    }\n\n    handleChange = name => event => {\n\n    \n        this.setState({ ...this.state, selectedReasons: {...this.state.selectedReasons, [name]: event.target.checked } });\n       // console.log(\"name name\", onlycode); \n\n    };\n\n\n    updateLocalActList = (txn) =>{\n        var activationList = localStorage.getItem(\"activationList\") && JSON.parse(localStorage.getItem(\"activationList\"));\n            var index = -1;\n            for(var i=0; i < activationList.length; i++ ){\n                if(activationList[i].txnId == txn){\n                    index =i;\n                    break;\n                }\n            }\n            if (index > -1) {\n                activationList.splice(index, 1);\n            }\n        localStorage.setItem(\"activationList\",JSON.stringify(activationList));\n    }\n\n    onlockTransectionOnSkip = (txn) =>{\n        var transactionsIds = {\n            transactionsIds : [txn]\n        }\n        ActivationService.unlockTransectionsSkip( transactionsIds ).then(res => {\n            let data = resolveResponse(res);\n            if(data.message != 'ok'){\n                Notify.showError(\"Server Error\"+data.message);\n            }\n       });\n    }\n\n\n    skipThisVerify = (e) => {\n        this.setState({ comments : \"\"});\n\n\n        console.log(\"here\")\n      //  e.preventDefault();\n        var selectedProductId = localStorage.getItem(\"selectedProductId\");\n        var verifyListingTxn = localStorage.getItem(\"verifyListingTxn\");\n        verifyListingTxn =  verifyListingTxn && verifyListingTxn.split(',');\n        var nextid = '';\n        for(var i=0; i < verifyListingTxn.length; i++ ){\n            if(selectedProductId == parseInt(verifyListingTxn[i])){\n                nextid =  parseInt(verifyListingTxn[i+1]);\n                break;\n            }\n        }\n\n       // this.updateLocalActList(selectedProductId);\n        this.onlockTransectionOnSkip(selectedProductId);\n        console.log(\"next id\",nextid );\n        \n\n        if(nextid){\n            localStorage.setItem(\"selectedProductId\", nextid);\n           // Notify.showSuccess(\"Acquisition skipped successfully and Lodding next...\");\n\n            this.loadOneTransection();\n            this.setState({ approveLoader: false});\n            this.setState({ approveDone: false});\n            this.setState({ approveButton: true});\n\n            this.setState({ rejectDone: false});\n            this.setState({ rejectButton: true, comments : \"\"});\n  \n           // To call the method you can use the slide's ref attribute and then call the method. \n           this.slideRef && this.slideRef.current && this.slideRef.current.goTo(0);\n\n\n\n\n        }else{\n        //    Notify.showError(\"No item available\");\n           // this.props.history.push('/verify');\n           this.cancel();\n        }\n    };\n\n    approveEV = (e) => {\n        e.preventDefault();\n\n       \n\n        console.log(\"approve data\",this.state);\n        var selectVal =  Object.values(this.state.selectedReasons)\n        var isselelctedAny = selectVal.find(function(val){\n                                return val == true;\n                            });\n\n        if(isselelctedAny){\n            Notify.showError(\"Remove reason selections to approve\");\n            return;\n        }\n\n        this.setState({ approveLoader: true});\n        this.setState({ approveButton: false});\n        \n        const product =  {\n            \"rejectedReasons\":null,\n            \"comments\": this.state.comments,\n            \"isPOIRejected\": this.state.isPOIRejected,\n            \"isCumtomerPhotoRejected\":0,\n            \"verificationDateTime\": new Date(),\n            \"verificationUser\": this.state.loginId,\n            \"isRejected\": 0,\n            \"transactionId\":this.state.transactionId\n        }\n\n\n        ActivationService.approveDocs(product)\n        .then(res => {\n          var data =  resolveResponse(res, \"Acquisition Verified successfully and Lodding next acquisition to verify...\");\n        //this.props.history.push('/verify');\n        this.setState({ approveLoader: false});\n        this.setState({ approveDone: true});\n\n\n        console.log(data);\n\n        //    var second = 5 ;\n        //    var showSeconds = setInterval(function(){\n        //         Notify.showSuccess(\"Wait for \"+second+\" Second\");\n        //         second--;\n        //         if(second == 0)\n        //         clearInterval(showSeconds);\n        //     }, 1000)\n\n        //   Notify.showSuccess(\"Lodding next acquisition to verify...\");\n\n         //   this.updateLocalActList(this.state.transactionId);\n\n          // this.skipThisVerify();\n            setTimeout(() => {\n                this.skipThisVerify();\n            }, 2000);\n        });\n    };\n\n    rejectEV = (e) => {\n\n\n       //alert(\"this.state.selectedReasons[i].includes\");\n\n        console.log(\"Reject Data\",this.state);\n\n        var selectVal =  Object.values(this.state.selectedReasons)\n        var isselelctedAny = selectVal.find(  function(val){\n                                return val == true;\n                            });\n\n        if(!isselelctedAny){\n            Notify.showError(\"Select reason(s) to reject!\");\n            return;\n        }\n\n        this.setState({ rejectLoader: true});\n        this.setState({ rejectButton: false});\n\n\n        var keys = Object.keys(this.state.selectedReasons); \n\n        var onlyCode = []; \n        for(var i=0; i < keys.length; i++){\n            var key = keys[i] && keys[i].split('-')[0].trim();\n            onlyCode.push(key);\n        }\n        console.log(\"selectd onlyCode\", onlyCode); \n\n\n\n        //const selectedReasons =  Object.keys(this.state.selectedReasons).join(\"|\");\n\n        var keyList = Object.keys(this.state.selectedReasons);\n\n        var isPOIRejected = 0;\n        for(var i=0; i < keyList.length; i++){\n            if(keyList[i].includes(\"POI\")){\n                isPOIRejected =1;\n                break;\n            }\n\n        }\n\n\n        const rejectData =  {\n            \"rejectedReasons\":onlyCode.join(\",\"),\n            \"comments\": this.state.comments,\n            \"isPOIRejected\": isPOIRejected,\n            \"isCumtomerPhotoRejected\":0,\n            \"verificationDateTime\": new Date(),\n            \"verificationUser\":this.state.loginId,\n            \"isRejected\": 1,\n            \"transactionId\":this.state.transactionId\n        }\n\n        ActivationService.approveDocs(rejectData)\n        .then(res => {\n           var resdata =  resolveResponse(res, \"Acquisition Rejected successfully and Lodding next acquisition to verify...\");\n            //this.props.history.push('/verify');\n          //  this.updateLocalActList(this.state.transactionId);\n          this.setState({ rejectLoader: false});\n          this.setState({ rejectDone: true});\n         \n\n            setTimeout(() => {\n                this.skipThisVerify();\n            }, 2000);\n        });\n\n    };\n\n    cancel = (e) => {\n\n        if(localStorage.getItem('fromSubmit') == 'yes'){\n            this.props.history.push('/resubmit-verify');\n        }else{\n            this.props.history.push('/verify');\n        }\n        \n    };\n\n    onChange = (e) => {\n        var data =  e.target.value.trim();\n        var test = !data.includes(\"@\") && !data.includes(\"$\") && !data.includes(\"&\") ; \n        if(test){\n            this.setState({[e.target.name]: e.target.value});\n        }\n      //  this.setState({[e.target.name]: e.target.value});\n\n    }\n\n}\n\nconst styles ={\n    formContainer : {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle :{\n        display: 'flex',\n        justifyContent: 'center', \n    },\n    textStyleHeading:{\n        display: 'flex',\n        justifyContent: 'center', \n        // marginTop:\"5px\",\n\n    },\n    mainDivAdjustment:{\n        padding:0,\n        backgroundColor:\"red\", \n     \n    },\n\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'center'\n    }\n\n    \n\n};\n\n\n\n\n\n\n\nclass SubmitedByRetailer extends React.Component {\n\n\n    render() {\n        return(\n            <div className=\"mainDivAdjustment\">\n\n\n             <List component=\"nav\" aria-label=\"main mailbox folders\">\n                  \n                    <Typography variant=\"h6\" style={styles.textStyle}> Acquisition Details</Typography>\n                    <div style={{padding:\"10px\"}}> \n                        <b> Title : </b> {this.props.cafdetails.title} {this.props.cafdetails.firstName} {this.props.cafdetails.middleName} {this.props.cafdetails.lastName} \n                        <br /> \n                       <b> Gender : </b>  {this.props.cafdetails.gender} \n                        <br /> \n                       <b> Address : </b>   {this.props.cafdetails.presentAddress}   \n                        <br /> \n                      <b> Alternate  No. :</b>   {this.props.cafdetails.alternateNumber}   \n                        <br /> \n                      <b>  Email : </b> {this.props.cafdetails.emailid} \n                        <br /> \n                       <b> FTA Date :</b>  {this.props.cafdetails.ftaDate ? this.props.cafdetails.ftaDate.substring(0, 10) : \"none\"} \n                        <br /> \n                       <b>Submit Date :  </b> {this.props.cafdetails.submittedDateStr ? this.props.cafdetails.submittedDateStr.substring(0, 10) : \"none\"}\n                        <br /> \n                       <b>Resubmit Date :  </b> {this.props.cafdetails.resubmittedDateStr ? this.props.cafdetails.resubmittedDateStr.substring(0, 10) : \"Not yet resubmitted\"} \n\n\n                    </div>\n\n                    {/* <ListItem divider button>\n                        <Typography variant=\"body1\" style={styles.textStyle}>Name :  {this.props.cafdetails.title} {this.props.cafdetails.firstName} {this.props.cafdetails.middleName} {this.props.cafdetails.lastName}  </Typography>\n\n                    </ListItem>\n                    <ListItem divider button>\n                        <Typography variant=\"body1\" component=\"h3\">Gender : {this.props.cafdetails.gender}   </Typography>\n                    </ListItem>\n                    <ListItem divider button>\n\n                        <Typography  variant=\"body1\" component=\"h3\">Address :  {this.props.cafdetails.address1} {this.props.cafdetails.address2} {this.props.cafdetails.address3}     </Typography>\n                   </ListItem>\n                    <ListItem divider button>\n                        <Typography  variant=\"body1\" component=\"h3\">Alternet  No. : {this.props.cafdetails.altContactNumber}   </Typography>\n                    </ListItem>\n                    <ListItem  divider button>\n                        <Typography variant=\"body1\" component=\"h3\">DOB : {this.props.cafdetails.dob} </Typography>\n                    </ListItem>\n\n                    <ListItem divider button>\n                     <Typography variant=\"body1\" component=\"h3\">FTA Date : {this.props.cafdetails.ftaDate ? this.props.cafdetails.ftaDate.substring(0, 10) : \"none\"}  </Typography>\n                    </ListItem>\n\n\n                     <ListItem divider button>\n                     <Typography variant=\"body1\" component=\"h3\">Submit Date : {this.props.cafdetails.submittedDate ? this.props.cafdetails.submittedDate.substring(0, 10) : \"none\"}  </Typography>\n                    </ListItem>\n\n                    <ListItem  divider button>\n                    <Typography variant=\"body1\" component=\"h3\">Resubmit Date : {this.props.cafdetails.resubmittedDate ? this.props.cafdetails.resubmittedDate.substring(0, 10) : \"Not yet resubmitted\"}  </Typography>\n                    </ListItem> */}\n\n\n            </List>\n            </div>\n        )\n    }\n}\n\nclass SubmitedByDistributer extends React.Component {\n    render() {\n        \n        //this.state.customerImageUrl\n        var pefdetails = {\n            img: this.props.pefImageUrl.pefImage,\n            title: 'CAF Image',\n            author: 'CAF Image',\n            featured: true,\n          };\n        var prevPefdetails = {\n            img: this.props.pefImageUrl.prevPefImage,\n            title: 'Previous CAF Image',\n            author: 'Previous CAF Image',\n            featured: true,\n          };\n\n          var data = []; \n\n          if(this.props.pefImageUrl.pefImage){\n            data.push({\n                img:  this.props.pefImageUrl.pefImage,\n                title: 'Customer Application Form',\n                author: 'Customer Application Form',\n                featured: true,\n              });\n          }\n         \n        return(\n            <>\n         \n                <div className=\"image-container\"  style={{height:'70vh'}}> \n\n                <div className=\"titleOverlay\" style={{textAlign:\"center\"}}>&nbsp;&nbsp; CAF Image &nbsp;&nbsp;</div> \n                <ReactPanZoom  image={pefdetails.img} alt={pefdetails.title}/>\n        \n                {prevPefdetails.img ? <> \n                <div  style={{textAlign:\"center\", position: \"relative\"}}><br />\n                <span className=\"titleOverlayPEF\"> &nbsp;&nbsp; Previous CAF Image &nbsp;&nbsp; </span>   </div> \n             \n              \n                <ReactPanZoom  image={prevPefdetails.img} alt={prevPefdetails.title}/>  \n               \n                </> :''}\n              \n               \n                </div>\n        \n            </>\n        )\n    }\n}\n\n\n\n\n\n\nexport default VerifyEdit;\n","import React, { useState }  from \"react\";\nimport ActivationService from \"../service/ActivationService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Notify from \"../../utils/Notify\";\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\n\n\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {Container} from \"@material-ui/core\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport \"./DataEntry.css\";\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass DataEntryList extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state ={\n            products: [],\n            searchedproducts: '',\n            searchby:'',\n            listingTakingTime : null,\n            listofzones:[],\n            selectedZone:[],\n            zone:''\n\n        };\n        this.loadProductList = this.loadProductList.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        this.onlockTransectionOnSkip = this.onlockTransectionOnSkip.bind(this);\n\n\n        this.onChange = this.onChange.bind(this);\n\n    \n     \n    }\n\n    // myhooks(){\n    //     [this.page, this.setPage] = React.useState(0);\n    //     [this.rowsPerPage, this.setRowsPerPage] = React.useState(5);\n    // }\n\n    componentDidMount() {\n        this.loadProductList();\n        localStorage.setItem(\"lastUrl\",\"dataentry\");\n        ActivationService.getTotalToBeProcessed().then(res => {\n            let data = resolveResponse(res);\n            console.log(data.result)\n         \n            this.setState({['recordToBeProcessed']: data.result && data.result.count})\n\n            localStorage.setItem(\"acquisitionCount\",data.result && data.result.acquisitionCount ); \n            localStorage.setItem(\"resubmitCount\",data.result && data.result.resubmitCount ); \n            \n\n        })\n\n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    \n\n     \n    loadProductList(mobileNumber) {\n        var d = new Date();\n        var endTime = d.getTime();\n\n        var startTime = endTime - 259200000; \n       \n        var  data =  {\n            \"mobileNumber\": mobileNumber ? mobileNumber : null,\n            \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n        }\n        // var  data =  {\n        //     \"endDate\": endTime,\n          \n        //     \"mobileNumber\": mobileNumber ? mobileNumber : null,\n        //     \"noOfRecords\": 20,\n        //     \"role\": \"DE\",\n        //     \"startDate\": 0,\n        //     \"txnId\": 0,\n        //     \"type\": \"next\",\n            \n        //     \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n        // }\n        \n\n        document.getElementById('showMessage').innerHTML = \"Please Wait Loading...\";\n\n        ActivationService.listDocs(data)\n            .then((res) => {\n              \n                    let data = resolveResponse(res);\n                    var activationList = data.result && data.result.activationList; \n                    this.setState({products: activationList})\n                    this.setState({searchedproducts:activationList})\n                    var listingIds = activationList && activationList.map(function(val, index){\n                        return val.txnId\n                    })\n\n                    if(listingIds){\n                        localStorage.setItem(\"dataentryListingTxn\",listingIds); \n                    }else{\n                        localStorage.setItem(\"dataentryListingTxn\",\"\"); \n                    }\n                  \n                    document.getElementById('showMessage').innerHTML = \"\";\n                    if(document.getElementById('showMessage')){\n                        if(activationList == null){\n                            document.getElementById('showMessage').innerHTML = \"No new documents for verification\";\n                        }  \n                    }\n\n            });\n\n            setTimeout(() => {\n                if(this.state.searchedproducts && this.state.searchedproducts.length ==0){\n                    document.getElementById('showMessage').innerHTML = \"Server taking time to response please reload again and check\";\n                }\n            }, 7000);\n\n            ActivationService.getStaticData('DE').then(res => {\n                let data = resolveResponse(res);\n                this.setState({listofzones: data && data.result && data.result.zones}) \n            })\n\n    }\n\n    onlockTransectionOnSkip = (txn) =>{\n        var transactionsIds = {\n            transactionsIds : txn\n        }\n\n        ActivationService.unlockTransectionsSkip( transactionsIds ).then(res => {\n            let data = resolveResponse(res);\n            if(data.message != 'ok'){\n                Notify.showError(\"Server Error\"+data.message);\n            }  \n       });\n       \n    }\n\n    searchOnDB(mobileNumber) {\n        \n\n        var dataentryListingTxn = localStorage.getItem(\"dataentryListingTxn\");\n        dataentryListingTxn =  dataentryListingTxn && dataentryListingTxn.split(',');\n       \n        if(dataentryListingTxn.length >= 1){\n            this.onlockTransectionOnSkip(dataentryListingTxn); \n        }\n\n        this.loadProductList(mobileNumber) ;\n\n\n        // console.log(mobileNumber);\n\n        // ActivationService.searchMobileNo(mobileNumber).then(res => {\n        //     let data = resolveResponse(res);\n        //     const selectedProduct = data.result;            \n        //     if(selectedProduct && selectedProduct.transactionId){\n        //         window.localStorage.setItem(\"dataEntryId\", selectedProduct.transactionId);\n        //         this.props.history.push('/data-edit');\n        //         // this.setState({\n        //         //     });\n        //     }\n           \n        // })\n    }\n\n    onChange = (e) => {\n        // this.setState({[e.target.name]: e.target.value});\n        // if(this.state.searchby){\n        //     this.setState({searchedproducts: this.state.products.filter(l => {\n        //         return l.mobileNumber.toLowerCase().match( e.target.value );\n        //     })});\n        // }else{\n        //     this.setState({searchedproducts: this.state.products})\n        // }\n        // if(e.target.value.length > 10){\n        //     this.setState({searchby: e.target.value.substring(0, 10)});\n            \n        // }\n        const re = /^[0-9\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n            this.setState({searchby: e.target.value})\n        }\n    }\n\n\n    editProduct(productId) {\n        console.log(\"productid\",productId )\n        \n        window.localStorage.setItem(\"dataEntryId\", productId);\n        window.localStorage.setItem(\"fromSubmit\", '');\n\n        this.props.history.push('/data-edit');\n\n        // this.props.history.push({\n        //     pathname: '/edit-doc',\n        //     search: '?query=abc',\n        //     state: { rowdata: productId }\n        //   })\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n\n      \n\n    render(){\n\n      \n      //  console.log(\"this.state.products\",this.state.products); \n        return(\n            <React.Fragment>\n                <PostLoginNavBar/>\n                <Paper style={{padding:\"10px\"}}>\n                {/* <Container  > */}\n                    {/* <EnhancedTable products={this.state.products}/> */}\n\n                    {/* <StickyHeadTable products={this.state.products} />\n                     */}\n\n                    <Grid syt  container spacing={3} container\n                        direction=\"row\"\n                        justify=\"right\"\n                        alignItems=\"center\">\n                            <Grid item  xs={12} xs={6}>\n                            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            Acquisition  – Data Entry\n                            </Typography> \n                            {/* <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            Data Entry\n                            </Typography> \n                            <Typography>\n                              Record to be Processed: {this.state.recordToBeProcessed}\n                            </Typography>  */}\n                            </Grid>\n\n                            <Grid item xs={10} sm={3}> \n                                <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                        <Select\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        multiple\n                                        name=\"selectedZone\"\n                                        value={this.state.selectedZone}\n                                        onChange={this.zoneChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        {this.state.listofzones ? this.state.listofzones.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                        </Select>\n                                    </FormControl>\n                            </Grid>\n                            \n\n                            <Grid item xs={10} sm={2} alignItems=\"flex-end\" alignContent=\"flex-end\"  justify=\"flex-end\" > \n                                <TextField value={this.state.searchby}  label=\"Search by Mobile No.\"  style={{width:\"100%\"}} name=\"Search by Mobile No.\" name=\"searchby\" onChange={this.onChange} />\n                            </Grid>\n                            <Grid item xs={2} sm={1} alignItems=\"flex-end\" alignContent=\"flex-end\"  justify=\"flex-end\" > \n                               <Button type=\"submit\"  onClick={() => this.searchOnDB( this.state.searchby )} variant=\"contained\"  style={{marginLeft: '20px'}} >Search</Button>\n                            </Grid>\n                            \n                          \n                        </Grid>\n\n                \n                \n\n                    <div style={{padding:\"10px\", overflow:\"auto\", height:\"550px\"}} >\n\n\n                    {/* style={{whiteSpace: \"nowrap\"}}   style={{background:\"#eeee\"}} */}\n                    <Table  size=\"small\"   aria-label=\"sticky table\">\n                        <TableHead style={{width:\"170px\",whiteSpace: \"nowrap\"}}>\n                            <TableRow >\n                            <TableCell align=\"\">View</TableCell>\n\n                            <TableCell align=\"\">Mobile Number</TableCell>\n\n                                <TableCell align=\"\">NIC</TableCell>\n                                <TableCell align=\"\">SIM</TableCell>\n                                <TableCell align=\"\">PEF Count</TableCell>\n                                <TableCell align=\"\">NIC Count</TableCell>\n                                <TableCell align=\"\">Distributor</TableCell>\n                                <TableCell align=\"\">Zone</TableCell>\n                                <TableCell align=\"\">FTA Date</TableCell>\n                                {/* <TableCell align=\"\">Status</TableCell> */}\n                                {/* <TableCell align=\"\">Resubmit</TableCell>\n                                <TableCell align=\"\">Verified Date</TableCell> */}\n                                <TableCell align=\"\">Submit Date</TableCell>\n                                {/* <TableCell align=\"\">Resubmit Date</TableCell> */}\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{width:\"170px\",whiteSpace: \"nowrap\"}}>\n                            {this.state.searchedproducts ? this.state.searchedproducts.map(row => (\n                                <TableRow  >\n                                    <TableCell align=\"center\" onClick={() => this.editProduct(row.txnId)}  hover key={row.txnId}><VisibilityIcon style={{cursor:\"hand\"}} /></TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className=\"hidden\">\n                                        {row.mobileNumber}\n                                    </TableCell>\n                                    <TableCell align=\"center\">{row.nic}</TableCell>\n                                    <TableCell align=\"center\">{row.sim}</TableCell>\n                                    <TableCell align=\"center\">{row.pefCount}</TableCell>\n                                    <TableCell align=\"center\">{row.nicCount}</TableCell>\n                                    <TableCell align=\"center\">{row.distributer}</TableCell>\n                                    <TableCell align=\"center\">{row.zone}</TableCell>\n                                    <TableCell align=\"center\">{row.ftaDate.substring(0, 10)}</TableCell>\n                                    {/* <TableCell align=\"center\">{row.status ? 'YES' : 'NO'}</TableCell> */}\n                                    {/* <TableCell align=\"center\">{row.resubmit}</TableCell>\n                                    <TableCell align=\"center\">{row.verifiedDate ? row.verifiedDate.substring(0, 10) : \"none\"}</TableCell>\n                                     */}\n                                    <TableCell align=\"center\">{row.submitDate ? row.submitDate.substring(0, 10) : \"none\"}</TableCell>\n                                    {/* <TableCell align=\"center\">{row.resubmitDate ? row.resubmitDate.substring(0, 10) : \"none\"}</TableCell>\n                                   */}\n                                </TableRow>\n                            )): \"\"}\n                        </TableBody>\n                    </Table>\n                    <div style={{color:\"gray\", fontSize:\"15px\", textAlign:\"center\"}}> <br/> <span id=\"showMessage\"> </span></div>\n\n                    </div>\n                    {/* <TablePagination\n                        rowsPerPageOptions={[5, 10, 25, 100]}\n                        component=\"div\"\n                        count={this.state.searchedproducts.length}\n                        rowsPerPage={5}\n                        page={1}\n                        backIconButtonProps={{\n                        'aria-label': 'previous page',\n                        }}\n                        nextIconButtonProps={{\n                        'aria-label': 'next page',\n                        }}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                    /> */}\n                \n                {/* </Container> */}\n\n                </Paper>\n            </React.Fragment>\n        )\n    }\n\n}\n//this.myhooks();\n\nconst handleChangePage = (event, newPage) => {\n    this.setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n   \n    this.setRowsPerPage(parseInt(event.target.value, 10));\n   this.setPage(0);\n  };\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'left'\n    }\n    ,\n    selectStyle:{\n        // minWidth: '100%',\n         marginBottom: '0px',\n          minWidth: 340,\n          maxWidth: 340,\n    }\n}\n\n\nexport default DataEntryList;","import React, { useState }  from \"react\";\nimport ActivationService from \"../service/ActivationService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Notify from \"../../utils/Notify\";\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\n\n\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {Container} from \"@material-ui/core\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport \"./DataEntry.css\";\n\n\n\n\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass DataEntryList extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state ={\n            products: [],\n            searchedproducts: null,\n            searchby:'',\n            listingTakingTime : null,\n            listofzones:[],\n            selectedZone:[],\n            zone:''\n\n        };\n        this.loadProductList = this.loadProductList.bind(this);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        this.onlockTransectionOnSkip = this.onlockTransectionOnSkip.bind(this);\n\n\n        this.onChange = this.onChange.bind(this);\n\n    \n     \n    }\n\n    // myhooks(){\n    //     [this.page, this.setPage] = React.useState(0);\n    //     [this.rowsPerPage, this.setRowsPerPage] = React.useState(5);\n    // }\n\n    componentDidMount() {\n        this.loadProductList();\n        localStorage.setItem(\"lastUrl\",\"dataentry\");\n        ActivationService.getTotalToBeProcessed().then(res => {\n            let data = resolveResponse(res);\n            console.log(data.result)\n            localStorage.setItem(\"acquisitionCount\",data.result && data.result.acquisitionCount ); \n            localStorage.setItem(\"resubmitCount\",data.result && data.result.resubmitCount ); \n        })\n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    \n\n     \n    loadProductList(mobileNumber) {\n        var d = new Date();\n        var endTime = d.getTime();\n\n        var startTime = endTime - 259200000; \n       \n        var  data =  {\n            \"endDate\": endTime,\n            \"mobileNumber\": mobileNumber ? mobileNumber : null,\n            \"noOfRecords\": 20,\n            \"role\": \"DE\",\n            \"startDate\": 0,\n            \"txnId\": 0,\n            \"type\": \"next\",\n            \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n        }\n\n        document.getElementById('showMessage').innerHTML = \"Please Wait Loading...\";\n\n        ActivationService.listDocsResubmit(data)\n            .then((res) => {\n              \n               \n                let data = resolveResponse(res);\n                    var activationList = data.result && data.result.activationList; \n                    this.setState({products: activationList})\n                    this.setState({searchedproducts:activationList})\n                    \n                    var listingIds = activationList && activationList.map(function(val, index){\n                        return val.txnId\n                    })\n\n                    if(listingIds){\n                        localStorage.setItem(\"dataentryListingTxn\",listingIds); \n                    }else{\n                        localStorage.setItem(\"dataentryListingTxn\",\"\"); \n                    }\n                  \n                    document.getElementById('showMessage').innerHTML = \"\";\n                    if(document.getElementById('showMessage')){\n                        if(activationList == null){\n                            document.getElementById('showMessage').innerHTML = \"No new documents for verification\";\n                        }  \n                    }\n\n            });\n\n            setTimeout(() => {\n                if(this.state.searchedproducts && this.state.searchedproducts.length ==0){\n                    document.getElementById('showMessage').innerHTML = \"Server taking time to response please reload again and check\";\n                }\n            }, 7000);\n\n            ActivationService.getStaticData('DE').then(res => {\n                let data = resolveResponse(res);\n                this.setState({listofzones: data && data.result && data.result.zones}) \n            })\n\n    }\n\n    addProduct() {\n        this.props.history.push('/add-product');\n    }\n\n    onlockTransectionOnSkip = (txn) =>{\n        var transactionsIds = {\n            transactionsIds : txn\n        }\n\n        ActivationService.unlockTransectionsSkip( transactionsIds ).then(res => {\n            let data = resolveResponse(res);\n            if(data.message != 'ok'){\n                Notify.showError(\"Server Error\"+data.message);\n            }  \n       });\n       \n    }\n\n    searchOnDB(mobileNumber) {\n        \n\n        var dataentryListingTxn = localStorage.getItem(\"dataentryListingTxn\");\n        dataentryListingTxn =  dataentryListingTxn && dataentryListingTxn.split(',');\n       \n        if(dataentryListingTxn.length >= 1){\n            this.onlockTransectionOnSkip(dataentryListingTxn); \n        }\n\n        this.loadProductList(mobileNumber) ;\n\n\n        // console.log(mobileNumber);\n\n        // ActivationService.searchMobileNo(mobileNumber).then(res => {\n        //     let data = resolveResponse(res);\n        //     const selectedProduct = data.result;            \n        //     if(selectedProduct && selectedProduct.transactionId){\n        //         window.localStorage.setItem(\"dataEntryId\", selectedProduct.transactionId);\n        //         this.props.history.push('/data-edit');\n        //         // this.setState({\n        //         //     });\n        //     }\n           \n        // })\n    }\n\n    onChange = (e) => {\n        // this.setState({[e.target.name]: e.target.value});\n        // if(this.state.searchby){\n        //     this.setState({searchedproducts: this.state.products.filter(l => {\n        //         return l.mobileNumber.toLowerCase().match( e.target.value );\n        //     })});\n        // }else{\n        //     this.setState({searchedproducts: this.state.products})\n        // }\n        // if(e.target.value.length > 10){\n        //     this.setState({searchby: e.target.value.substring(0, 10)});\n            \n        // }\n        const re = /^[0-9\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n            this.setState({searchby: e.target.value})\n        }\n    }\n\n\n    editProduct(productId) {\n        console.log(\"productid\",productId )\n        \n        window.localStorage.setItem(\"dataEntryId\", productId);\n        window.localStorage.setItem(\"fromSubmit\", 'yes');\n\n        this.props.history.push('/data-edit');\n\n        // this.props.history.push({\n        //     pathname: '/edit-doc',\n        //     search: '?query=abc',\n        //     state: { rowdata: productId }\n        //   })\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    render(){\n      \n      //  console.log(\"this.state.products\",this.state.products); \n        return(\n            <React.Fragment>\n                <PostLoginNavBar/>\n                <Paper style={{padding:\"10px\"}}>\n                {/* <Container  > */}\n                    {/* <EnhancedTable products={this.state.products}/> */}\n\n                    {/* <StickyHeadTable products={this.state.products} />\n                     */}\n\n                    <Grid syt  container spacing={3} container\n                        direction=\"row\"\n                        justify=\"right\"\n                        alignItems=\"center\">\n                            <Grid item  xs={12} xs={6}>\n                            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            Resubmit – Data Entry\n                            </Typography> \n                            {/* <Typography>\n                              Record to be Processed: {this.state.recordToBeProcessed}\n                            </Typography>  */}\n                            </Grid>\n\n                            <Grid item xs={10} sm={3}> \n                                <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                        <Select\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        multiple\n                                        name=\"selectedZone\"\n                                        value={this.state.selectedZone}\n                                        onChange={this.zoneChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        {this.state.listofzones ? this.state.listofzones.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                        </Select>\n                                    </FormControl>\n                            </Grid>\n                            \n\n                            <Grid item xs={10} sm={2} alignItems=\"flex-end\" alignContent=\"flex-end\"  justify=\"flex-end\" > \n                                <TextField value={this.state.searchby}  label=\"Search by Mobile No.\"  style={{width:\"100%\"}} name=\"Search by Mobile No.\" name=\"searchby\" onChange={this.onChange} />\n                            </Grid>\n                            <Grid item xs={2} sm={1} alignItems=\"flex-end\" alignContent=\"flex-end\"  justify=\"flex-end\" > \n                               <Button type=\"submit\"  onClick={() => this.searchOnDB( this.state.searchby )} variant=\"contained\"  style={{marginLeft: '20px'}} >Search</Button>\n                            </Grid>\n                            \n                          \n                        </Grid>\n\n                \n                \n\n                    <div style={{padding:\"10px\", overflow:\"auto\", height:\"550px\"}} >\n\n\n                    {/* style={{whiteSpace: \"nowrap\"}}   style={{background:\"#eeee\"}} */}\n                    <Table  size=\"small\"   aria-label=\"sticky table\">\n                        <TableHead style={{width:\"170px\",whiteSpace: \"nowrap\"}}>\n                            <TableRow >\n                            <TableCell align=\"\">View</TableCell>\n\n                            <TableCell align=\"\">Mobile Number</TableCell>\n\n                                <TableCell align=\"\">NIC</TableCell>\n                                <TableCell align=\"\">SIM</TableCell>\n                                <TableCell align=\"\">PEF Count</TableCell>\n                                <TableCell align=\"\">NIC Count</TableCell>\n                                <TableCell align=\"\">Distributor</TableCell>\n                                <TableCell align=\"\">Zone</TableCell>\n                                <TableCell align=\"\">FTA Date</TableCell>\n                                {/* <TableCell align=\"\">Status</TableCell> */}\n                                {/* <TableCell align=\"\">Resubmit</TableCell>\n                                <TableCell align=\"\">Verified Date</TableCell> */}\n                                <TableCell align=\"\">Submit Date</TableCell>\n                                <TableCell align=\"\">Resubmit Date</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{width:\"170px\",whiteSpace: \"nowrap\"}}>\n                            {this.state.searchedproducts ? this.state.searchedproducts.map(row => (\n                                <TableRow  >\n                                    <TableCell align=\"center\" onClick={() => this.editProduct(row.txnId)}  hover key={row.txnId}><VisibilityIcon style={{cursor:\"hand\"}} /></TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className=\"hidden\">\n                                        {row.mobileNumber}\n                                    </TableCell>\n                                    <TableCell align=\"center\">{row.nic}</TableCell>\n                                    <TableCell align=\"center\">{row.sim}</TableCell>\n                                    <TableCell align=\"center\">{row.pefCount}</TableCell>\n                                    <TableCell align=\"center\">{row.nicCount}</TableCell>\n                                    <TableCell align=\"center\">{row.distributer}</TableCell>\n                                    <TableCell align=\"center\">{row.zone}</TableCell>\n                                    <TableCell align=\"center\">{row.ftaDate.substring(0, 10)}</TableCell>\n                                    {/* <TableCell align=\"center\">{row.status ? 'YES' : 'NO'}</TableCell> */}\n                                    {/* <TableCell align=\"center\">{row.resubmit}</TableCell>\n                                    <TableCell align=\"center\">{row.verifiedDate ? row.verifiedDate.substring(0, 10) : \"none\"}</TableCell>\n                                     */}\n                                    <TableCell align=\"center\">{row.submitDate ? row.submitDate.substring(0, 10) : \"none\"}</TableCell>\n                                    <TableCell align=\"center\">{row.resubmitDate ? row.resubmitDate.substring(0, 10) : \"none\"}</TableCell>\n                                  \n                                </TableRow>\n                            )): \"\"}\n                        </TableBody>\n                    </Table>\n                    <div style={{color:\"gray\", fontSize:\"15px\", textAlign:\"center\"}}> <br/> <span id=\"showMessage\"> </span></div>\n\n                    </div>\n                    {/* <TablePagination\n                        rowsPerPageOptions={[5, 10, 25, 100]}\n                        component=\"div\"\n                        count={this.state.searchedproducts.length}\n                        rowsPerPage={5}\n                        page={1}\n                        backIconButtonProps={{\n                        'aria-label': 'previous page',\n                        }}\n                        nextIconButtonProps={{\n                        'aria-label': 'next page',\n                        }}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                    /> */}\n                \n                {/* </Container> */}\n\n                </Paper>\n            </React.Fragment>\n        )\n    }\n\n}\n//this.myhooks();\n\nconst handleChangePage = (event, newPage) => {\n    this.setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n   \n    this.setRowsPerPage(parseInt(event.target.value, 10));\n   this.setPage(0);\n  };\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'left'\n    }\n    ,\n    selectStyle:{\n        // minWidth: '100%',\n         marginBottom: '0px',\n          minWidth: 340,\n          maxWidth: 340,\n    }\n}\n\n\nexport default DataEntryList;","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\n//import $ from 'jquery';\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nfunction addMonths(date, months) {\n  var d = date.getDate();\n  date.setMonth(date.getMonth() + +months);\n  if (date.getDate() != d) {\n    date.setDate(0);\n  }\n  return date;\n}\n\n\n\nexport default function MaterialUIPickers(props) {\n  //console.log(\"startDatestartDate,\",props ); \n  var requiredDate ='';\n  // The first commit of Material-UI\n  var [selectedStartDate, setSelectedStartDate] = React.useState(new Date());\n  var [selectedEndDate, setSelectedEndDate] = React.useState(new Date());\n  const handleStartDateChange = date => {\n     \n     setSelectedStartDate(date);\n    props.callbackFromParent.myCallback(date,\"START_DATE\");\n\n  };\n  const handleEndDateChange = date => {\n   // console.log(date,\"SELECTED_DATE\")\n    setSelectedEndDate(date);\n    props.callbackFromParent.myCallback(date,\"END_DATE\");\n  };\n\n  \n  var date15Years = new Date(); \n      date15Years.setFullYear( date15Years.getFullYear() - 15 );\n\n\nvar today = new Date();\nif(selectedStartDate && selectedStartDate.getDate() == today.getDate() && selectedStartDate.getFullYear() == today.getFullYear() && selectedStartDate.getMonth() == today.getMonth()){\n  setSelectedStartDate(null);\n}\n\nif(!props.callbackFromParent.startDate){\n  selectedStartDate = null;\n}\n//$('.MuiInputBase-inputAdornedEnd').prop('readonly', true);\n\nconsole.log(\"keydate\", selectedStartDate); \n\n\n return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container justify=\"space-around\">\n     \n        <KeyboardDatePicker\n        // required={true}\n        //  emptyLabel=\"\"\n          margin=\"normal\"\n          //readOnly=\"true\"\n          // disabled=\"true\"\n          disableFuture=\"true\"\n         // autoOk={false}\n          allowKeyboardControl=\"true\"\n          maxDate={date15Years}\n         // minDate={back18Month}\n         // minDateMessage=\"Only 18 months back report can be fatch.\"\n          id=\"date-picker-dialog\"\n          label=\"Date of Birth\"\n          format=\"dd/MM/yyyy\"\n          value={ selectedStartDate }\n         // value={selectedStartDate}\n          onChange={handleStartDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n        {/* <KeyboardDatePicker\n      \n          disableFuture=\"true\"\n          maxDateMessage=\"Max allowed date range is 6 months.\"\n          minDateMessage=\"End date can't be less than start date.\"\n          minDate={selectedStartDate}\n          maxDate={requiredDate}\n          margin=\"normal\"\n          id=\"date-picker-dialog\"\n          label=\"End Date\"\n          format=\"dd/MM/yyyy\"\n          value={selectedEndDate}\n          onChange={handleEndDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        /> */}\n       \n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport ActivationService from \"../service/ActivationService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {Container} from \"@material-ui/core\";\nimport Notify from \"../../utils/Notify\";\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\n\nimport MaterialUIPickers from \"./MaterialUIPickers\";\n\n//import SlideShowGalary from \"./SlideShowGalary\";\n\nimport SlideShowGalary from \"../../utils/SlideShowGalary\";\nimport \"./DataEntry.css\";\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport DoneSharpIcon from '@material-ui/icons/DoneSharp';\n\n//import TEST from '../expriment/Test';\n\n\n\n\n\n\n\n// const useStyles = makeStyles(theme => ({\n//     root: {\n//       padding: theme.spacing(3, 2),\n//     },\n//   }));\n// const SampleFab = () => {\n//     const classes = useStyles();\n//     return <Paper className={classes.root}></Paper>;\n//  }\n\n\n \n  \n\n\nclass DataEntryEdit extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n                txnId: '',\n                mobileNumber: '', \n                poiNumber:'',\n                poiType:'',\n                title:'',\n                gender:'',\n                dob:'',\n                rejectedReasons:'',\n                approveLoader:false,\n                approveDone:false,\n                approveButton:true,\n                loginId:'',\n                firstName:\"\",\n                middleName:\"\",\n                lastName:\"\",\n                altContactNumber:'', \n                propMobile:'',\n                emailid:'',\n                address1:'',\n                address2:'',\n                address3:'',\n                customerImageUrl:\"\",\n                presentAddress:\"\",\n                pefImageUrl:'',\n                comment:\"\",\n                loading: true\n                \n        }\n        this.updateLocalActList = this.updateLocalActList.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.skipThisVerify = this.skipThisVerify.bind(this);\n        this.loadOneTransection = this.loadOneTransection.bind(this);\n        this.myCallback = this.myCallback.bind(this);\n        this.slideRef = React.createRef(); \n\n    }\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n            var formattedDate = date.toLocaleDateString('en-GB', {\n            day: 'numeric', month: 'numeric', year: 'numeric'\n            }).replace(/ /g, '/');\n            console.log(\n                \"formattedDate\",formattedDate\n            )\n           // var dateStr =  date.getDate() + \"/\" + date.getMonth() + '/' +  date.getFullYear();\n            this.setState({ dob: formattedDate });\n        } \n    };\n\n    loadOneTransection(){\n        const dataEntryId = localStorage.getItem(\"dataEntryId\");\n        // console.log( \"selectedProductId\",  selectedProductId);\n         \n         if(dataEntryId == null) {\n            // alert(\"Please select a product to edit.\");\n            // this.props.history.push('/dataentry');\n             this.cancel();\n         }else {\n \n             ActivationService.getOneDataEntry(dataEntryId).then(res => {\n                 let data = resolveResponse(res);\n                 const selectedProduct = data.result;\n \n                 var genderSelect=''; \n                 if(selectedProduct && (selectedProduct.title == \"Ms\" || selectedProduct.title == 'Mrs')){\n                     genderSelect = \"F\"; \n                 }\n                 if(selectedProduct && selectedProduct.title == \"Mr\"){\n                    genderSelect = \"M\"; \n                }\n\n                 var rejectmsg = ''; \n                 if(selectedProduct && selectedProduct.rejectedReasons){\n                    rejectmsg = selectedProduct.rejectedReasons\n                 }\n                 if(selectedProduct){\n                    this.setState({\n                        mobileNumber: selectedProduct.mobileNumber,\n                        poiNumber: selectedProduct.poiNumber,\n                        poiType: selectedProduct.poiType,\n                         customerImageUrl: selectedProduct.customerImageUrl, \n                         customerSignatureUrl:selectedProduct.customerSignatureUrl, \n                         poiBackImageUrl :selectedProduct.poiBackImageUrl, \n                         poiFrontImageUrl:selectedProduct.poiFrontImageUrl, \n                         retailerSignatureUrl : selectedProduct.retailerSignatureUrl,\n                         pefImageUrl:selectedProduct.pefImageUrl,\n                         rejectedReasons : rejectmsg,\n                         title : selectedProduct.title,\n                         gender: genderSelect, \n                         firstName: selectedProduct.firstName,\n                         altContactNumber:selectedProduct.altContactNumber,\n                         emailid:selectedProduct.emailid,\n                         presentAddress: selectedProduct.presentAddress,\n                         //address1 : selectedProduct.address1,\n                         //address2:  selectedProduct.address2,\n                         //address3 : selectedProduct.address3,\n\n                        // deDateTime : selectedProduct.deDateTime, \n                        // deUser: selectedProduct.deUser, \n                        // dob:selectedProduct.dob, \n                        // firstName:selectedProduct.firstName, \n                        });\n\n                    //    console.log(\"getonedata\",this.state); \n                 }\n\n                this.setState({loading:false}) \n             })\n \n             const userDetails = JSON.parse(localStorage.getItem(\"userDetails\")); \n           //  console.log(\"this.state afer load\", this.state);\n\n             this.setState({  loginId : userDetails.loginId });\n\n             ActivationService.getStaticData(\"DE\").then(res => {\n                 let data = resolveResponse(res);\n \n                 this.setState({\n                     propertiesName: data.result && data.result.screenFields && data.result.screenFields[0].fields\n                     });\n              //  console.log(\"propertiesName screenFields\", this.state.propertiesName);\n\n             })\n         }\n    }\n\n    componentDidMount() {\n        this.loadOneTransection(); \n        localStorage.setItem(\"lastUrl\",\"data-edit\");\n        if(document.getElementById(\"addressone\")){\n            document.getElementById(\"addressone\").style.fontSize = \"12px\";\n        }\n        if(document.getElementById(\"addresstwo\")){\n            document.getElementById(\"addresstwo\").style.fontSize = \"12px\";\n        }\n        if(document.getElementById(\"addressthree\")){\n            document.getElementById(\"addressthree\").style.fontSize = \"12px\";\n        }\n        if(document.getElementById(\"presentAddress\")){\n            document.getElementById(\"presentAddress\").style.fontSize = \"12px\";\n        }\n        if(document.getElementById(\"rejectedReasons\")){\n            document.getElementById(\"rejectedReasons\").style.fontSize = \"12px\";\n        }\n    }\n\n\n    render() {\n\n        var imageDetails = []; var baseUrl=\"\"; //\"https://retailer.airtel.lk\";\n        if(this.state.poiFrontImageUrl){\n          imageDetails.push({\n              img: baseUrl+ this.state.poiFrontImageUrl, \n              title: 'POI Front Image',\n              author: 'Front Image',\n              featured: true,\n            }); \n        }\n        if(this.state.customerImageUrl){\n            imageDetails.push({\n                img: baseUrl+ this.state.customerImageUrl,\n                title: 'Customer Image',\n                author: 'Customer Image',\n                featured: true,\n              }); \n          }\n        if(this.state.poiBackImageUrl){\n          imageDetails.push({\n              img: baseUrl+ this.state.poiBackImageUrl,\n              title: 'POI Back Image',\n              author: 'Back Image',\n              featured: true,\n            }); \n        }\n        if(this.state.customerSignatureUrl){\n          imageDetails.push({\n              img:  baseUrl+this.state.customerSignatureUrl,\n              title: 'Customer Signature',\n              author: 'Customer Signature',\n              featured: true,\n            }); \n        }\n\n        if(this.state.retailerSignatureUrl){\n          imageDetails.push({\n              img: baseUrl+ this.state.retailerSignatureUrl,\n              title: 'Retailer Signature',\n              author: 'Retailer Signature',\n              featured: true,\n            }); \n        }\n        if(this.state.pefImageUrl){\n            imageDetails.push({\n                img:  this.state.pefImageUrl,\n                title: 'PEF Image',\n                author: 'PEF Image',\n                featured: true,\n              }); \n          }\n\n          const dateParam = {\n            myCallback: this.myCallback,\n            startDate: this.state.dob,\n            endDate: ''\n\n        }\n\n        if(this.state.loading){\n            return (  \n                 <React.Fragment>\n                    <PostLoginNavBar/><br />\n                    <Typography variant=\"h6\" >Loading...please wait.</Typography>\n                </React.Fragment> \n                )   \n        }\n\n\n        return(\n            <React.Fragment>\n            <PostLoginNavBar/>\n            {/* <h2  style={styles.textStyle}> View and Verify Document </h2> */}\n            <Typography variant=\"h6\" style={styles.textStyle} >Data Entry Details</Typography>\n\n            <Grid container className=\"flexGrow\" spacing={1}>\n               <Grid item  xs={12} sm={8} style={{overflow:\"scroll\"}}>\n                   \n                    <Paper style={{paddingLeft:\"5px\", paddingRight:\"5px\", height:\"80vh\", width: \"135vh\" }}>\n                    {/* <ReactPanZoom image=\"https://drscdn.500px.org/photo/105738331/q%3D80_m%3D2000/v2?webp=true&sig=538a4f76f4966c84acb01426bb4a4a5e4a85b72a2c3bd64973d3a369f9653007\" alt=\"document image\"/>\n\n                    <ReactPanZoom image=\"https://qph.fs.quoracdn.net/main-qimg-212927c733fa6407344ee9b257445d17.webp\" alt=\"document image\"/> */}\n\n                        {/* <br /> */}\n                        {/* <Typography variant=\"body1\" style={styles.textStyle}>Document Uploaded</Typography> */}\n\n                         {/* <ImageGalary imageDetails={imageDetails} />  */}\n                         <SlideShowGalary  imageDetails={{imageDetails: imageDetails, slideRef : this.slideRef}} />\n\n                    </Paper>\n\n                </Grid>\n\n      \n                <Grid item  xs={12} sm={4}>\n\n                {/* <Container maxWidth=\"sm\"> */}\n                    <Paper style={{paddingLeft:\"20px\",paddingRight:\"20px\", paddingBottom:\"5px\", }}>\n                    <Typography variant=\"body1\" style={styles.textStyle}><b>Update User Details</b></Typography>\n                    <form id=\"dataentryform\" style={styles.formContainer}>\n                        {/* <Typography variant=\"h6\" component=\"h3\">Mobile : {this.state.mobileNumber}   </Typography> */}\n\n                        <Grid spacing={1} container direction=\"row\">\n                            <Grid item xs={12} sm={6}>\n                                <TextField label=\"Mobile No\" fullWidth disabled name=\"mobileNumber\" value={this.state.mobileNumber} onChange={this.onChange}/>\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                                <TextField type=\"number\" label=\"Alternate Contact No\" value={this.state.altContactNumber} fullWidth name=\"altContactNumber\"  onChange={this.onChange}/>\n                            </Grid>\n                        </Grid>\n\n                        <Grid spacing={1} container direction=\"row\">\n                            <Grid item xs={12} sm={12}>\n                            {/* placeholder=\"Email id\"  */}\n                                <TextField label=\"Email id\"  fullWidth  name=\"emailid\" value={this.state.emailid} onChange={this.onChange}/>\n                            </Grid>\n\n                          \n                        </Grid>\n\n                        <Grid spacing={1} container direction=\"row\">\n                            <Grid item xs={12} sm={6}>\n                                 <FormControl style={styles.selectStyle}>\n                                    <InputLabel  htmlFor=\"gender\">POI Type</InputLabel>\n                                    <Select value={this.state.poiType}  name=\"poiType\" onChange={this.onChange}>\n                                        <MenuItem value={\"NIC\"}>NIC</MenuItem>\n                                        <MenuItem value={\"DL\"}>DL</MenuItem>\n                                        <MenuItem value={\"PASSPORT\"}>PASSPORT</MenuItem>\n                                    </Select>\n                                </FormControl>\n                                {/* <TextField label=\"POI Type\" required={true} fullWidth name=\"poiType\"  onChange={this.onChange}/> */}\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                                <TextField label=\"POI Number\" fullWidth name=\"poiNumber\" value={this.state.poiNumber} onChange={this.onChange}/>\n\n                                {/* <TextField label=\"POI Number\" value={this.state.poiNumber} required={true} fullWidth name=\"poiNumber\" onChange={this.onChange}/> */}\n                            </Grid>\n                        </Grid>\n\n                        {/* \n                        <Grid item xs={12} sm={1}>\n                        <InputLabel htmlFor=\"age-simple\">Title</InputLabel>\n                            <Select value={this.state.title}>\n                            <MenuItem value={10}>Mr.</MenuItem>\n                            <MenuItem value={20}>Mrs.</MenuItem>\n                            </Select>\n                        </Grid> */}\n\n                        {/* <Grid container direction=\"row\" justify=\"flex-end\"> */}\n\n\n                        <Grid spacing={1} container direction=\"row\">\n                            <Grid item xs={12} sm={6}>\n\n                             <FormControl style={styles.selectStyle}>\n                                    <InputLabel htmlFor=\"title\">Title</InputLabel>\n                                    <Select  value={this.state.title}  name=\"title\" onChange={this.onChange}>\n                                        <MenuItem value={\"Mr\"}>Mr</MenuItem>\n                                        <MenuItem value={\"Ms\"}>Ms</MenuItem>\n                                        <MenuItem value={\"Mrs\"}>Mrs</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                            <TextField label=\"First Name\" value={this.state.firstName} required={true} fullWidth name=\"firstName\"  onChange={this.onChange}/>\n\n                            </Grid>\n                        </Grid>\n                       \n                         <Grid spacing={1} container direction=\"row\">\n                            {/* <Grid item xs={12} sm={4}>\n                                <TextField label=\"First Name\" required={true} fullWidth name=\"firstName\"  onChange={this.onChange}/>\n                            </Grid> */}\n                            <Grid item xs={12} sm={6}>\n                                <TextField label=\"Middle Name\"  value={this.state.middleName} fullWidth name=\"middleName\" onChange={this.onChange}/>\n                            </Grid>\n                            <Grid item xs={12} sm={6} >\n                                <TextField label=\"Last Name\" value={this.state.lastName}  fullWidth name=\"lastName\"  onChange={this.onChange}/>\n                            </Grid> \n                         </Grid>\n\n                        {/* </Grid> */}\n\n                        <Grid spacing={1} container direction=\"row\">\n                            <Grid item xs={12} sm={6}>\n                                {/* <TextField data-date-format=\"dd-mm-yyyy\" InputLabelProps={{ shrink: true}} value={this.state.dob} style={styles.selectStyle} type=\"date\" label=\"Date of Birth\"  name=\"dob\"  onChange={this.onChangeDob}/> */}\n                                <MaterialUIPickers callbackFromParent={dateParam} />\n\n\n                            </Grid>\n \n                            <Grid item xs={12} sm={6}>\n                                <FormControl style={styles.selectStyle}>\n                                    <InputLabel  htmlFor=\"gender\">Gender</InputLabel>\n                                    <Select value={this.state.gender}  name=\"gender\" onChange={this.onChange}>\n                                        <MenuItem value={\"M\"}>Male</MenuItem>\n                                        <MenuItem value={\"F\"}>Female</MenuItem>\n                                        {/* <MenuItem value={\"O\"}>Others</MenuItem> */}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n\n                        <Grid spacing={1} container direction=\"row\">\n                            <Grid item xs={12} sm={6}>\n                            <InputLabel style={{fontSize:\"12px\"}}>Present Address</InputLabel>\n                            <div id=\"presentAddress\"   style={styles.MuiTextField} >{this.state.presentAddress} </div>\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                            <TextField id=\"addressone\"  label=\"Address 1\"  value={this.state.address1}  fullWidth name=\"address1\" onChange={this.onChange}/>\n\n                            </Grid>\n\n                        </Grid>\n\n\n                        <Grid spacing={1} container direction=\"row\">\n                        \n                            <Grid item xs={12} sm={6}>\n                            <TextField id=\"addresstwo\"  label=\"Address 2\"  value={this.state.address2}  fullWidth name=\"address2\" onChange={this.onChange}/>\n\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                            <TextField id=\"addressthree\"  label=\"Address 3\" value={this.state.address3}   fullWidth name=\"address3\" onChange={this.onChange}/>\n\n                            </Grid>\n\n\n                        </Grid>\n                           \n\n                        <Grid spacing={1} container direction=\"row\">\n                            <Grid item xs={12} sm={6}>\n                                 <InputLabel style={{fontSize:\"12px\"}}>Rejected Reasons</InputLabel>\n\n                                 <div id=\"rejectedReasons\"  style={styles.MuiTextField}>{this.state.rejectedReasons} </div>\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                            <TextField multiline variyant rows={2} value={this.state.comment} label=\"Comments\" fullWidth margin=\"none\" name=\"comment\" onChange={this.onChange}/>\n                            </Grid>\n\n                        </Grid>\n\n\n                       \n                        \n                        <br />\n                        {/* <InputLabel htmlFor=\"title\">Rejected Reasons</InputLabel> */}\n                        \n                        {/* <Input fullWidth\n                            placeholder=\"Rejected Reasons\" \n                            disabled\n                            value={this.state.rejectedReasons}\n                            inputProps={{\n                            'aria-label': 'description',\n                            }}\n                        /> */}\n                        {/* <TextField  value={this.state.rejectedReasons} multiline rows={2} label=\"Rejected Reasons\" fullWidth margin=\"none\" name=\"helpText\" onChange={this.onChange}/> */}\n                        {/* <TextField\n                            label=\"Comments\"\n                            id=\"outlined-start-adornment\"\n                           \n                           \n                            variant=\"outlined\"\n                            />\n                        */}\n                         \n                        <div><Grid  container spacing={24} style={{paddingTop:\"4px\"}} container\n                            direction=\"row\"\n                            justify=\"center\"\n                            alignItems=\"center\">\n\n                                    {this.state.approveLoader ? <CircularProgress />: \"\"} \n                                    {/* <CheckCircleIcon color=\"primary\" fontSize=\"large\"/> */}\n                                    {this.state.approveDone ?  <Button  style={{marginLeft: \"20px\"}} variant=\"outlined\" color=\"primary\" > <DoneSharpIcon color=\"primary\" /> Saved & Loading Next</Button> : \"\"} \n                                    {this.state.approveButton ? <Button variant=\"contained\" color=\"primary\" style={{marginLeft: '20px'}} onClick={this.submitDataEntry}>Submit</Button>: \"\"} \n\n\n                                <Button variant=\"contained\" color=\"secondary\" style={{marginLeft: '20px', backgroundColor:\"#33691e\"}} onClick={this.skipThisVerify}> SKIP </Button>\n                                <Button variant=\"contained\" color=\"default\" style={{marginLeft: '20px'}} onClick={this.cancel}>Back to Listing</Button>\n                            \n                        </Grid></div>\n                    \n                    </form>\n                    </Paper>\n\n\n                    \n                {/* </Container> */}\n                </Grid>\n            \n                </Grid>\n\n             \n\n\n            <div>\n \n  \n        </div>\n\n            </React.Fragment>\n        )\n    }\n\n    \n    updateLocalActList = (txn) =>{\n        var activationList = localStorage.getItem(\"dataEntryActivationList\") && JSON.parse(localStorage.getItem(\"dataEntryActivationList\")); \n\n        var index = -1;\n        for(var i=0; i < activationList.length; i++ ){\n            if(activationList[i].txnId == txn){\n                index =i;\n                break; \n            }\n        }        \n        if (index > -1) {\n            activationList.splice(index, 1);\n        }\n        localStorage.setItem(\"dataEntryActivationList\",JSON.stringify(activationList));    \n    }\n\n\n    onlockTransectionOnSkip = (txn) =>{\n\n        var transactionsIds = {\n            transactionsIds : [txn]\n        }\n        ActivationService.unlockTransectionsSkip( transactionsIds ).then(res => {\n            let data = resolveResponse(res);\n            if(data.message != 'ok'){\n                Notify.showError(\"Didn't unlocked\");\n            }\n       })\n    }\n\n\n    skipThisVerify = (e) => {\n\n         //reset \n         this.setState({\n            txnId: '',\n            mobileNumber: '', \n            poiNumber:'',\n            poiType:'',\n            title:'',\n            gender:'',\n            dob:'',\n            rejectedReasons:'',\n            approveLoader:false,\n            approveDone:false,\n            approveButton:true,\n            loginId:'',\n            firstName:\"\",\n            middleName:\"\",\n            lastName:\"\",\n            altContactNumber:'', \n            propMobile:'',\n            emailid:'',\n            address1:'',\n            address2:'',\n            address3:'',\n            customerImageUrl:\"\",\n            presentAddress:\"\",\n            pefImageUrl:'',\n            comment:\"\" \n        });\n\n        //  e.preventDefault();\n          var dataEntryId = localStorage.getItem(\"dataEntryId\"); \n          var dataentryListingTxn = localStorage.getItem(\"dataentryListingTxn\"); \n          dataentryListingTxn =  dataentryListingTxn && dataentryListingTxn.split(','); \n          var nextid = ''; \n          for(var i=0; i < dataentryListingTxn.length; i++ ){\n              if(dataEntryId == parseInt(dataentryListingTxn[i])){\n                  nextid =  parseInt(dataentryListingTxn[i+1]);  \n                  break; \n              }\n          }\n  \n         // this.updateLocalActList(dataEntryId); \n          this.onlockTransectionOnSkip(dataEntryId); \n        //  console.log(\"nextid\",nextid); \n          if(nextid){\n//            Notify.showSuccess(\"Acquisition skipped successfully and Lodding next...\");\n\n              localStorage.setItem(\"dataEntryId\", nextid); \n              this.loadOneTransection();\n            \n           // To call the method you can use the slide's ref attribute and then call the method. \n              this.slideRef.current.goTo(0);\n\n              this.setState({ approveLoader: false});\n              this.setState({ approveDone: false});\n              this.setState({ approveButton: true});\n\n\n          }else{\n             // Notify.showError(\"No item available\");\n             // this.props.history.push('/dataentry');\n              this.cancel();\n          }\n      };\n\n    handleChange = name => event => {\n        this.setState({ ...this.state, [name]: event.target.checked });\n    };\n\n\n\n    submitDataEntry = (e) => {\n        e.preventDefault();\n      \n\n      //  Notify.showSuccess(\"Approved\");\n    //    console.log(\"data entry post data\",this.state)\n\n        //!this.state.gender || !this.state.title || !this.state.poiNumber || !this.state.dob || !this.state.firstName || !this.state.lastName || !this.state.address1 \n        if(!this.state.firstName){\n            Notify.showError(\"Missing First Name\");\n            return;\n        }\n\n        if(this.state.dob.toLocaleLowerCase() == \"invalid/date\"){\n            Notify.showError(\"Invalid Date of Birth Format\");\n            return;  \n        }  \n       \n\n        if(this.state.comment && this.state.comment.length > 200){\n            Notify.showError(\"Comments allow upto 200 characters only\");\n            return;\n        }\n\n            this.setState({ approveLoader: true});\n            this.setState({ approveButton: false});\n            \n            const dataEntryId = localStorage.getItem(\"dataEntryId\");\n\n            const product = {\n                \"transactionId\": dataEntryId,\n                \"poiNumber\": this.state.poiNumber,\n                \"poiType\": this.state.poiType,\n                \"title\": this.state.title,\n                \"gender\":this.state.gender ,\n                \"dob\": this.state.dob,\n                \"firstName\": this.state.firstName,\n                \"middleName\": this.state.middleName,\n                \"lastName\": this.state.lastName,\n                \"address1\": this.state.address1,\n                \"address2\": this.state.address2,\n                \"address3\": this.state.address3,\n                \"altContactNumber\": this.state.altContactNumber,\n                \"comments\": this.state.comment,\n                \"deDateTime\": new Date(),\n                \"deUser\": this.state.loginId,\n                \"emailid\":this.state.emailid\n            }\n        \n            ActivationService.saveDataEntry(product)\n            .then(res => {\n                resolveResponse(res, \"Details updated successfully and Lodding next acquisition to verify...\");\n               // this.props.history.push('/dataentry');\n            //   this.updateLocalActList(dataEntryId); \n\n            this.setState({ approveLoader: false});\n            this.setState({ approveDone: true});\n         //   this.setState({ altContactNumber: '',dob:''});\n\n           \n\n            setTimeout(() => {\n                this.skipThisVerify(); \n            }, 2000);\n\n            });\n    };\n\n    reject = (e) => {\n        e.preventDefault();\n       // alert(\"Reject\"); \n       Notify.showSuccess(\"Rejected\");\n\n        if(!this.state.productName || !this.state.displayName || !this.state.servingTimeInMins || !this.state.priority\n            || !this.state.iconUrl ){\n            Notify.showError(\"Missing required fields\");\n            return;\n        }\n        const product = {id:this.state.id, active: this.state.active, onlineBooking: this.state.onlineBooking, showRecent: this.state.showRecent, productName: this.state.productName,\n            displayName: this.state.displayName,servingTimeInMins: this.state.servingTimeInMins, priority: this.state.priority,iconUrl: this.state.iconUrl, tagUrl: this.state.tagUrl, helpTextImage: this.state.helpTextImage, helpText: this.state.helpText};\n        ActivationService.updateProduct(product)\n            .then(res => {\n                resolveResponse(res, \"Updated successfully.\");\n                //this.props.history.push('/dataentry');\n                this.cancel();\n            });\n    };\n\n    cancel = (e) => {\n        if(localStorage.getItem('fromSubmit') == 'yes'){\n            this.props.history.push('/resubmit-dataentry');\n        }else{\n            this.props.history.push('/dataentry');\n        }\n    };\n\n    onChange = (e) => {\n\n        var data =  e.target.value.trim();\n        var test = !data.includes(\"@\") && !data.includes(\"$\") && !data.includes(\"&\") ; \n        if(test){\n           \n            if(e.target.name == \"firstName\" || e.target.name == \"middleName\" || e.target.name == \"lastName\" ){\n                if(/^[a-zA-Z ]+$/.test(e.target.value)){\n                    this.setState({[e.target.name]: e.target.value});\n                }\n            }else{\n                this.setState({[e.target.name]: e.target.value});\n            }\n\n        //this.setState({[e.target.name]: e.target.value});\n\n        }\n\n        if(e.target.name == \"altContactNumber\" && e.target.value.length > 10){\n            this.setState({altContactNumber: e.target.value.substring(0, 10)});   \n        }\n\n        if(e.target.name == \"title\" &&  e.target.value == \"Ms\" || e.target.value == 'Mrs'){\n            this.setState({gender: \"F\"});   \n        }\n        if(e.target.name == \"title\" &&  e.target.value == \"Mr\"){\n            this.setState({gender: \"M\"});   \n        }\n\n        if(e.target.value.length == 0){\n            this.setState({firstName: \"\", middleName: \"\", lastName: \"\"});\n        }\n\n\n    }\n\n    onChangeDob = (e) => {\n        var  year = e.target.value && e.target.value.split('-')[0]; \n        if(year.length>4){\n            return;\n        }else {\n            this.setState({[e.target.name]: e.target.value});\n\n        }\n    }\n\n}\n\nconst styles ={\n    formContainer : {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle :{\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle:{\n        display:'flex'\n    }, \n\n    selectStyle:{\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField:{\n        overflowY: 'scroll',\n        fontSize:\"12px\", \n        maxHeight:\"50px\",\n        \n    },\n\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\n\n\n\n\nexport default DataEntryEdit;","import React, { useState }  from \"react\";\nimport ActivationService from \"../service/ActivationService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TextField from '@material-ui/core/TextField';\nimport axios from \"axios\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Notify from \"../../utils/Notify\";\n\n\nimport Paper from \"@material-ui/core/Paper\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {Container} from \"@material-ui/core\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport md5  from 'md5'; \n\nclass DataEntryList extends React.Component{\n \n    constructor(props) {\n        super(props);\n        this.state ={\n                             \n            products: [],\n            mobile:'',\n            sim:'',\n            txnId:'',\n            user_image:false,\n            user_image_upload:false,\n            user_signature_loader:false,\n            user_signature_upload:false,\n\n            retailer_signature_loader:false,\n            uploadFlag:false,\n\n            poi_front_image_loader:false,\n            poi_front_image_upload:false,\n\n            poi_back_image_loader:false,\n            poi_back_image_upload:false,\n\n            pef_image_loader:false,\n            pef_image_upload:false,\n            pef_image_response:false,\n            poi_front_image_response:false,\n            poi_back_image_response:false,\n\n            numberFound:false,\n            uploadResponse: \"\", \n            uploadLoader:false\n            \n        };\n\n        this.loadProductList = this.loadProductList.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.searchOnDB = this.searchOnDB.bind(this); \n        this.onUploadFiles = this.onUploadFiles.bind(this);   \n     \n    }\n\n\n    componentDidMount() {\n        // this.loadProductList();\n    }\n \n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n\n       // console.log(e.target.value , e.target.value.length,  e.target.value.substring(0, 10));\n        if(e.target.name ==\"mobile\" && e.target.value.length > 10){\n            this.setState({mobile: e.target.value.substring(0, 10)});   \n        }\n\n        if(e.target.name ==\"sim\" && e.target.value.length > 20){\n            this.setState({sim: e.target.value.substring(0, 20)});   \n        }\n       \n    }\n     \n    loadProductList() {\n        var d = new Date();\n        var endTime = d.getTime();\n\n        var startTime = endTime - 259200000; \n        const data = {\n            \"zone\" : \"West 1\",\n            \"startDate\" : startTime,\n            \"endDate\" : endTime,\n            \"type\" : \"NEXT\",\n            \"noOfRecords\" : 20\n        }; \n           ActivationService.listDocs(data)\n            .then((res) => {\n              \n                let data = resolveResponse(res);\n                if(data.result && data.result.activationList)\n                this.setState({products: data.result.activationList})\n            });   \n        \n    }\n\n    searchOnDB() {       \n           window.localStorage.setItem(\"deviceId\",new Date().getTime().toString())\n\n           document.getElementById(\"uploadform\").reset();\n           this.setState({uploadResponse: \"\",pef_image : null, poi_front_image:null , poi_back_image : null })\n\n            // document.getElementById('pef_image_file').innerHTML = ''; \n            // document.getElementById('poi_front_image_file').innerHTML = ''; \n            // document.getElementById('poi_back_image_file').innerHTML = ''; \n\n            const data = {\n                \"mobileNumber\" : this.state.mobile,\n                \"simNumber\" : this.state.sim,\n            }; \n\n           ActivationService.searchDistributer(data)\n            .then((res) => {\n              \n                let data = resolveResponse(res);\n                if(data.message == \"ok\" && data.status == 200){\n                    this.setState({nic:data.result.nic, numberFound : true, ftaDate : data.result.ftaDate, uploadFlag: true})\n\n                    this.setState({sim: data.result.simNumber})\n\n                    // this.setState({ user_image_upload: true, user_signature_upload :true});\n                    // this.setState({ poi_front_image_upload:data.result.poiFrontPending, poi_back_image_upload : data.result.poiBackPending,pef_image_upload : data.result.pefFPending});\n\n                    // if(!data.result.pefFPending){\n                    //     this.setState({pef_image_response: true })\n                    // }\n\n                    // if(!data.result.poiFrontPending){\n                    //     this.setState({poi_front_image_response: true})\n                    // }\n                    // if(!data.result.poiBackPending){\n                    //     this.setState({poi_back_image_response: true})\n                    // }\n\n\n                }else {\n                    \n                  //  this.setState({pef_image_response: false, poi_front_image_response: false,poi_back_image_response: false })\n                   // this.setState({txnId:''})\n                    this.setState({numberFound:false})\n\n                 //   this.props.history.push('/');\n                }\n            });\n\n            document.getElementById(\"uploadform\").reset();\n\n            // document.getElementById('user_image_response').innerHTML = ''; \n            // document.getElementById('user_signature_response').innerHTML = ''; \n            // document.getElementById('retailer_signature_response').innerHTML = ''; \n\n            // document.getElementById('poi_front_image_response').innerHTML = ''; \n            // document.getElementById('poi_back_image_response').innerHTML = ''; \n            // document.getElementById('pef_image_response').innerHTML = ''; \n\n            \n            this.setState({ user_image_upload: false, user_signature_upload :false,  uploadFlag: false});\n            this.setState({ poi_front_image_upload:false, poi_back_image_upload : false,pef_image_upload:false});\n\n    }\n\n    \n\n\n    validateUploadFile = (file) => {\n        const filename = file.name.toString(); \n    \n        if (/[^a-zA-Z0-9\\.\\-\\_ ]/.test(filename)) {\n            Notify.showError(\"File name can contain only alphanumeric characters including space and dots\")\n            return false;\n        }\n    \n        if(file.type == \"image/png\" || file.type == \"image/jpeg\"){\n            var fileSize = file.size / 1000; //in kb\n            if(fileSize >= 100 && fileSize <= 2048){\n              const fileext =  filename.split('.').pop(); \n              Object.defineProperty(file, 'name', {\n                writable: true,\n                value:  md5(file.name) +\".\"+ fileext\n              });\n              return file;\n            }else{\n              Notify.showError(\"File size should be grater than 100KB and less than 2MB\")\n            }\n        }else {\n          Notify.showError(\"Only png and jpeg file allowd.\")\n        }\n        return false;\n      }\n\n    onChangeFileUpload = e => {\n        console.log(e.target.files[0]);\n        const filetoupload = this.validateUploadFile(e.target.files[0]); \n        if (filetoupload) {\n            this.setState({ [e.target.name]: e.target.files[0]});\n        }\n        else{\n            e.target.value = null;\n        }\n        // if(e.target.name == \"poi_front_image\" && e.target.files[0].name != \"poi_front_image.png\" ){\n        //     document.getElementById(e.target.name+'_file').value = \"\";\n        //     Notify.showError(\"Image name to be 'poi_front_image.png'\");\n        //     return;\n        // }\n        // if(e.target.name == \"poi_back_image\" && e.target.files[0].name != \"poi_back_image.png\" ){\n        //     document.getElementById(e.target.name+'_file').value = \"\";\n        //     Notify.showError(\"Image name to be 'poi_back_image.png'\");\n        //     return;\n        // }\n    }; \n\n\n    handleSubmit(e){\n        e.preventDefault();\n        e.target.reset();\n    }\n    \n\n    onUploadFiles = () => {\n\n //  console.log(\"imageType\",  this.state[imageType]); \n\n    if(!this.state.pef_image){\n        Notify.showError(\"Please select a PEF image\");\n        return;\n    }\n\n    if(!this.state.poi_front_image){\n        Notify.showError(\"Please select a poi front image\");\n        return;\n    }\n\n    // if(!this.state.pef_image && !this.state.poi_front_image){\n    //     return ;\n    // }\n\n\n    this.setState({uploadFlag: false, uploadLoader:true}); \n\n    const formData = new FormData();\n    formData.append('pefImage',this.state.pef_image );\n    formData.append('poiFrontImage', this.state.poi_front_image);\n    if(this.state.poi_back_image){\n        formData.append('poiBackImage', this.state.poi_back_image);\n    }\n    // else{\n    //     formData.append('poiBackImage', null);\n    // }\n    formData.append('mobileNumber', this.state.mobile);\n    formData.append('simNumber', this.state.sim);\n    formData.append('deviceId', localStorage.getItem(\"deviceId\".toString()) );   \n    \n\n    ActivationService.uploadDistrubuter(formData)\n        .then((res) => {\n            \n            let data = resolveResponse(res);\n            this.setState({uploadResponse: data.message, uploadLoader:false }); \n\n            // if(data.status == 200){\n            //     this.setState({uploadResponse: data.message, uploadLoader:false }); \n\n            // }else {\n            //     Notify.showError(data.message);\n            //     return;\n            // }\n        });\n   \n  };\n\n\n    render(){\n     \n      //  console.log(\"this.state.products\",this.state.products); \n        return(\n            <React.Fragment>\n                <PostLoginNavBar/>\n                <Paper style={{padding:\"40px\"}}>\n                <Container  >\n                    {/* <EnhancedTable products={this.state.products}/> */}\n\n                    {/* <StickyHeadTable products={this.state.products} someAction={this.someAction}/>\n                     */}\n\n                      \n                    {/* <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Search Mobile No.\n                      \n\n                    </Typography>  */}\n\n                        <form onSubmit={() => this.searchOnDB( this.state.searchby )} >\n\n                        <Grid spacing={1}  container  container\n                            direction=\"row\"\n                            justify=\"right\"\n                            alignItems=\"center\">\n\n                            <Grid item xs={12} sm={7} >\n                            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                             Distributor document upload\n                            </Typography> \n                            </Grid>\n                            {/* InputLabelProps={{ shrink: true }} */}\n                            <Grid item xs={12} sm={3    } alignItems=\"flex-end\" alignContent=\"flex-end\"  justify=\"flex-end\" > \n                                <TextField type=\"number\" value={this.state.mobile}  label=\"Mobile No.\"  style={{width:\"100%\"}} name=\"Search by Mobile No.\" name=\"mobile\" onChange={this.onChange} />\n                            </Grid>     \n                            {/* <Grid item xs={12} sm={2} alignItems=\"flex-end\" alignContent=\"flex-end\"  justify=\"flex-end\" > \n                                <TextField type=\"text\" value={this.state.sim}  label=\"Sim No.\"  style={{width:\"100%\"}} name=\"Search by Mobile No.\" name=\"sim\" onChange={this.onChange} />\n                            </Grid> */}\n                            <Grid item xs={12} sm={1} alignItems=\"flex-end\" alignContent=\"flex-end\"  justify=\"flex-end\" > \n                               <Button type=\"button\"  onClick={() => this.searchOnDB(  )} variant=\"contained\"  style={{marginLeft: '20px'}} >Search</Button>\n                            </Grid>\n                        </Grid>\n                        </form>\n\n                    <br /> \n\n                    {this.state.numberFound ? \n                       \n                       <Paper style={{padding:\"20px\"}}>\n                        <Grid spacing={5} alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n                            \n                            <Grid item xs={12} sm={3}>\n                             Mobile No.: <b> {this.state.mobile} </b> \n                            </Grid>\n                            <Grid item xs={12} sm={3}>\n                             Sim No.:  <b>{this.state.sim}  </b> \n                            </Grid>\n                        \n                            <Grid item xs={12} sm={3}>\n                               NIC: <b> {this.state.nic}</b> \n                            </Grid>\n                            <Grid item xs={12} sm={3}>\n                                 FTA Date: <b> {this.state.ftaDate}</b> \n                            </Grid>\n\n                            \n                        </Grid>\n                        </Paper>\n\n                    :\"\"}\n                        <br /> \n                        <form id=\"uploadform\"  onSubmit={this.handleSubmit.bind(this)} >\n                        {/* <Paper style={{padding:\"20px\"}}> \n                            <Grid spacing={5} alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n                                <Grid item xs={12} sm={4}>\n                                    <InputLabel htmlFor=\"gender\">User Images</InputLabel>\n                                    <input id=\"user_image_file\" type=\"file\" name=\"user_image\" onChange={this.onChangeFileUpload} />\n                                </Grid>\n\n                                <Grid item xs={12} sm={2}>\n                                    {this.state.user_image_loader ? <CircularProgress />: \"\"} \n                                    {this.state.user_image_upload?<Button type=\"submit\"  onClick={() => this.onUploadFiles('user_image')} variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button>:<Button type=\"submit\"  disabled variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button> } \n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                        <span style={{fontSize:\"16px\",color:\"green\"}}><b id=\"user_image_response\"> </b> </span>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                        <br /> \n                        <Paper style={{padding:\"20px\"}}> \n                            <Grid spacing={5} alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n                                <Grid item xs={12} sm={4}>\n                                    <InputLabel htmlFor=\"gender\">User Signature</InputLabel>\n                                    <input id=\"user_signature_file\" type=\"file\" name=\"user_signature\" onChange={this.onChangeFileUpload} />\n                                </Grid>\n\n                                <Grid item xs={12} sm={2}>\n                                    {this.state.user_signature_loader ? <CircularProgress />: \"\"} \n                                    {this.state.user_signature_upload?<Button type=\"submit\"  onClick={() => this.onUploadFiles('user_signature')} variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button>:<Button type=\"submit\"  disabled variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button> } \n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                        <span style={{fontSize:\"16px\",color:\"green\"}}><b id=\"user_signature_response\"> </b> </span>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n\n                        <br /> \n                        <Paper style={{padding:\"20px\"}}> \n                            <Grid spacing={5} alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n                                <Grid item xs={12} sm={4}>\n                                    <InputLabel htmlFor=\"gender\">Retailer Signature</InputLabel>\n                                    <input id=\"retailer_signature_file\" type=\"file\" name=\"retailer_signature\" onChange={this.onChangeFileUpload} />\n                                </Grid>\n\n                                <Grid item xs={12} sm={2}>\n                                    {this.state.retailer_signature_loader ? <CircularProgress />: \"\"} \n                                    {this.state.uploadFlag?<Button type=\"submit\"  onClick={() => this.onUploadFiles('retailer_signature')} variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button>:<Button type=\"submit\"  disabled variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button> } \n                                </Grid>\n                                <Grid item xs={12} sm={6}> \n                                        <span style={{fontSize:\"16px\",color:\"green\"}}><b id=\"retailer_signature_response\"> </b> </span>\n                                </Grid>\n                            </Grid>\n                        </Paper> */}\n                         <Paper style={{padding:\"20px\"}}> \n                            <Grid spacing={1}  style={styles.textStyle} justify=\"flex-end\"  container direction=\"row\">\n                                 <Grid item xs={12} sm={3}>\n                                    <InputLabel htmlFor=\"gender\" required={true}>PEF Image</InputLabel>\n                                    <input id=\"pef_image_file\" disabled={!this.state.uploadFlag} type=\"file\" name=\"pef_image\" onChange={this.onChangeFileUpload} />\n                                </Grid>\n                                <Grid item xs={12} sm={3}>\n                                    <InputLabel htmlFor=\"gender\" required={true}>POI Front Image</InputLabel>\n                                    <input id=\"poi_front_image_file\" disabled={!this.state.uploadFlag} type=\"file\" name=\"poi_front_image\" onChange={this.onChangeFileUpload} />\n\n                                </Grid>\n\n                                <Grid item xs={12} sm={3}>\n                                    <InputLabel htmlFor=\"gender\">POI Back Image</InputLabel>\n                                    <input id=\"poi_back_image_file\" disabled={!this.state.uploadFlag} type=\"file\" name=\"poi_back_image\" onChange={this.onChangeFileUpload} />\n                                </Grid>\n\n\n                                <Grid item xs={12} item sm={1}>\n                                    {this.state.uploadFlag?<Button  onClick={() => this.onUploadFiles()} variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Submit</Button>:<Button disabled variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Submit</Button> } \n\n                                </Grid>\n                              \n                                <Grid item xs={12} sm={2} style={{textAlign:\"center\"}} >\n                                 {this.state.uploadLoader ? <CircularProgress />: \"\"} \n                                </Grid>\n                            </Grid>\n                            \n                            <br />\n                            <Grid  alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n\n                            <Grid style={{textAlign:\"center\"}}  item xs={12} sm={12}>\n                               <span style={{fontSize:\"18px\"}}> <b> {this.state.uploadResponse} </b> </span>\n                            </Grid>\n                          \n                        \n                        </Grid>\n                            \n\n                        </Paper>\n\n                      \n\n                        {/*\n\n\n\n                        <br /> \n                        <Paper style={{padding:\"20px\"}}> \n                            <Grid spacing={5} alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n                                <Grid item xs={12} sm={4}>\n                                    <InputLabel htmlFor=\"gender\" required={true}>POI Front Image</InputLabel>\n                                    <input id=\"poi_front_image_file\" type=\"file\" name=\"poi_front_image\" onChange={this.onChangeFileUpload} />\n\n                                </Grid>\n\n                                <Grid item xs={12} sm={2}>\n                                    {this.state.poi_front_image_loader ? <CircularProgress />: \"\"} \n                                    {this.state.poi_front_image_upload?<Button type=\"submit\"  onClick={() => this.onUploadFiles('poi_front_image')} variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button>:<Button type=\"submit\"  disabled variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button> } \n                                </Grid>\n                                <Grid item xs={12} sm={6}> \n                                        <span style={{fontSize:\"16px\",color:\"green\"}}><b id=\"poi_front_image_response\"> {this.state.poi_front_image_response} </b> </span>\n                                        {this.state.poi_front_image_response?<span><b> POI front image already uploaded </b> </span> :\"\"}\n\n                                </Grid>\n                            </Grid>\n                        </Paper>\n\n                        <br /> \n                        <Paper style={{padding:\"20px\"}}> \n                            <Grid spacing={5} alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n                                <Grid item xs={12} sm={4}>\n                                    <InputLabel htmlFor=\"gender\">POI Back Image</InputLabel>\n                                    <input id=\"poi_back_image_file\" type=\"file\" name=\"poi_back_image\" onChange={this.onChangeFileUpload} />\n\n                                </Grid>\n                                <Grid item xs={12} sm={2}>\n                                    {this.state.poi_back_image_loader ? <CircularProgress />: \"\"} \n                                    {this.state.poi_back_image_upload?<Button type=\"submit\"  onClick={() => this.onUploadFiles('poi_back_image')} variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button>:<Button type=\"submit\"  disabled variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button> } \n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                        <span style={{fontSize:\"16px\",color:\"green\"}}><b id=\"poi_back_image_response\"> {this.state.poi_back_image_response} </b> </span>\n                                        {this.state.poi_back_image_response?<span><b> POI back image already uploaded </b> </span> :\"\"}\n\n                                </Grid>\n                            </Grid>\n                        </Paper>\n\n                        <br /> \n                        <Paper style={{padding:\"20px\"}}> \n                            <Grid spacing={5} alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n                                <Grid item xs={12} sm={4}>\n                                    <InputLabel htmlFor=\"gender\" required={true}>PEF Image</InputLabel>\n                                    <input id=\"pef_image_file\" type=\"file\" name=\"pef_image\" onChange={this.onChangeFileUpload} />\n                                    <InputLabel style={{fontSize:\"14px\"}}>Note: It's sigle image</InputLabel>\n\n                                </Grid>\n                                <Grid item xs={12} sm={2}>\n                                    {this.state.pef_image_loader ? <CircularProgress />: \"\"} \n                                    {this.state.pef_image_upload?<Button type=\"submit\"  onClick={() => this.onUploadFiles('pef_image')} variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button>:<Button type=\"submit\"  disabled variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button> } \n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                        <span style={{fontSize:\"16px\",color:\"green\"}}><b id=\"pef_image_response\">  </b> </span>\n                                        {this.state.pef_image_response?<span><b> PFE image already uploaded </b> </span> :\"\"}\n                                </Grid>\n                            </Grid>\n                        </Paper> */}\n                        </form>\n\n                        \n                        \n                 </Container> \n                 <br />  <br />  <br /> \n                </Paper>\n            </React.Fragment>\n        )\n    }\n\n\n\n}\n\nconst styles ={\n    formContainer : {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle :{\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle:{\n        display:'flex'\n    }, \n\n    selectStyle:{\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n\n    show:{\n        display:\"block\"\n    },\n    hide:{\n        display:\"node\"\n    }\n};\n\n\n\nexport default DataEntryList;\n\n","import React, { useState }  from \"react\";\nimport ActivationService from \"../service/ActivationService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TextField from '@material-ui/core/TextField';\nimport axios from \"axios\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Notify from \"../../utils/Notify\";\n\n\nimport Paper from \"@material-ui/core/Paper\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {Container} from \"@material-ui/core\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\nimport md5  from 'md5'; \n\nclass DataEntryList extends React.Component{\n \n    constructor(props) {\n        super(props);\n        this.state ={\n                             \n            products: [],\n            mobile:'',\n            sim:'',\n            txnId:'',\n            poiType:'',\n            poiNumber:'',\n\n            user_image:false,\n            user_image_upload:false,\n            user_signature_loader:false,\n            user_signature_upload:false,\n\n            retailer_signature_loader:false,\n            uploadFlag:false,\n\n            poi_front_image_loader:false,\n            poi_front_image_upload:false,\n\n            poi_back_image_loader:false,\n            poi_back_image_upload:false,\n\n            pef_image_loader:false,\n            pef_image_upload:false,\n            pef_image_response:false,\n            poi_front_image_response:false,\n            poi_back_image_response:false,\n\n            numberFound:false,\n            uploadResponse: \"\", \n            uploadLoader:false\n            \n        };\n\n        this.loadProductList = this.loadProductList.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.searchOnDB = this.searchOnDB.bind(this); \n        this.onUploadFiles = this.onUploadFiles.bind(this);   \n     \n    }\n\n\n    componentDidMount() {\n        // this.loadProductList();\n    }\n \n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n\n       // console.log(e.target.value , e.target.value.length,  e.target.value.substring(0, 10));\n        if(e.target.name ==\"mobile\" && e.target.value.length > 10){\n            this.setState({mobile: e.target.value.substring(0, 10)});   \n        }\n\n        if(e.target.name ==\"sim\" && e.target.value.length > 20){\n            this.setState({sim: e.target.value.substring(0, 20)});   \n        }\n       \n    }\n     \n    loadProductList() {\n        var d = new Date();\n        var endTime = d.getTime();\n\n        var startTime = endTime - 259200000; \n        const data = {\n            \"zone\" : \"West 1\",\n            \"startDate\" : startTime,\n            \"endDate\" : endTime,\n            \"type\" : \"NEXT\",\n            \"noOfRecords\" : 20\n        }; \n           ActivationService.listDocs(data)\n            .then((res) => {\n              \n                let data = resolveResponse(res);\n                if(data.result && data.result.activationList)\n                this.setState({products: data.result.activationList})\n            });   \n        \n    }\n\n    searchOnDB() {       \n           window.localStorage.setItem(\"deviceId\",new Date().getTime().toString())\n\n           document.getElementById(\"uploadform\").reset();\n           this.setState({uploadResponse: \"\",pef_image : null, poi_front_image:null , poi_back_image : null })\n\n            // document.getElementById('pef_image_file').innerHTML = ''; \n            // document.getElementById('poi_front_image_file').innerHTML = ''; \n            // document.getElementById('poi_back_image_file').innerHTML = ''; \n\n            const data = {\n                \"mobileNumber\" : this.state.mobile\n            }; \n\n           ActivationService.searchDistributerResubmit(data)\n            .then((res) => {\n              \n                let data = resolveResponse(res);\n                if(data.message == \"ok\" && data.status == 200){\n                    this.setState({nic:data.result.nic, numberFound : true, ftaDate : data.result.ftaDate, uploadFlag: true})\n                    this.setState({txnId:data.result.transactionId })\n                    this.setState({sim: data.result.simNumber})\n                    this.setState({poiType: data.result.poiType, poiNumber: data.result.poiNumber })\n\n                    \n                    // this.setState({ user_image_upload: true, user_signature_upload :true});\n                    // this.setState({ poi_front_image_upload:data.result.poiFrontPending, poi_back_image_upload : data.result.poiBackPending,pef_image_upload : data.result.pefFPending});\n\n                    // if(!data.result.pefFPending){\n                    //     this.setState({pef_image_response: true })\n                    // }\n\n                    // if(!data.result.poiFrontPending){\n                    //     this.setState({poi_front_image_response: true})\n                    // }\n                    // if(!data.result.poiBackPending){\n                    //     this.setState({poi_back_image_response: true})\n                    // }\n\n\n                }else {\n                    \n                  //  this.setState({pef_image_response: false, poi_front_image_response: false,poi_back_image_response: false })\n                   \n                    this.setState({numberFound:false})\n\n                 //   this.props.history.push('/');\n                }\n            });\n\n            document.getElementById(\"uploadform\").reset();\n\n            // document.getElementById('user_image_response').innerHTML = ''; \n            // document.getElementById('user_signature_response').innerHTML = ''; \n            // document.getElementById('retailer_signature_response').innerHTML = ''; \n\n            // document.getElementById('poi_front_image_response').innerHTML = ''; \n            // document.getElementById('poi_back_image_response').innerHTML = ''; \n            // document.getElementById('pef_image_response').innerHTML = ''; \n\n            \n            this.setState({ user_image_upload: false, user_signature_upload :false,  uploadFlag: false});\n            this.setState({ poi_front_image_upload:false, poi_back_image_upload : false,pef_image_upload:false});\n\n    }\n\n    \n\n\n    validateUploadFile = (file) => {\n        const filename = file.name.toString(); \n    \n        if (/[^a-zA-Z0-9\\.\\-\\_ ]/.test(filename)) {\n            Notify.showError(\"File name can contain only alphanumeric characters including space and dots\")\n            return false;\n        }\n    \n        if(file.type == \"image/png\" || file.type == \"image/jpeg\"){\n            var fileSize = file.size / 1000; //in kb\n            if(fileSize >= 100 && fileSize <= 2048){\n              const fileext =  filename.split('.').pop(); \n              Object.defineProperty(file, 'name', {\n                writable: true,\n                value:  md5(file.name) +\".\"+ fileext\n              });\n              return file;\n            }else{\n              Notify.showError(\"File size should be grater than 100KB and less than 2MB\")\n            }\n        }else {\n          Notify.showError(\"Only png and jpeg file allowd.\")\n        }\n        return false;\n      }\n\n    onChangeFileUpload = e => {\n        console.log(e.target.files[0]);\n        const filetoupload = this.validateUploadFile(e.target.files[0]); \n        if (filetoupload) {\n            this.setState({ [e.target.name]: e.target.files[0]});\n        }\n        else{\n            e.target.value = null;\n        }\n        // if(e.target.name == \"poi_front_image\" && e.target.files[0].name != \"poi_front_image.png\" ){\n        //     document.getElementById(e.target.name+'_file').value = \"\";\n        //     Notify.showError(\"Image name to be 'poi_front_image.png'\");\n        //     return;\n        // }\n        // if(e.target.name == \"poi_back_image\" && e.target.files[0].name != \"poi_back_image.png\" ){\n        //     document.getElementById(e.target.name+'_file').value = \"\";\n        //     Notify.showError(\"Image name to be 'poi_back_image.png'\");\n        //     return;\n        // }\n    }; \n\n\n    handleSubmit(e){\n        e.preventDefault();\n        e.target.reset();\n    }\n    \n\n    onUploadFiles = () => {\n\n //  console.log(\"imageType\",  this.state[imageType]); \n\n    if(!this.state.pef_image){\n        Notify.showError(\"Please select a PEF image\");\n        return;\n    }\n\n    if(!this.state.poi_front_image){\n        Notify.showError(\"Please select a poi front image\");\n        return;\n    }\n\n    // if(!this.state.pef_image && !this.state.poi_front_image){\n    //     return ;\n    // }\n\n\n    this.setState({uploadFlag: false, uploadLoader:true}); \n\n    const formData = new FormData();\n    formData.append('pefImage',this.state.pef_image );\n    formData.append('poiFrontImage', this.state.poi_front_image);\n    if(this.state.poi_back_image){\n        formData.append('poiBackImage', this.state.poi_back_image);\n    }\n    // else{\n    //     formData.append('poiBackImage', null);\n    // }\n  //  formData.append('mobileNumber', this.state.mobile);\n    formData.append('txnId', this.state.txnId);\n    formData.append('deviceId', localStorage.getItem(\"deviceId\".toString()) );   \n    \n\n    ActivationService.uploadDistrubuterResubmit(formData)\n        .then((res) => {\n            \n            let data = resolveResponse(res);\n            this.setState({uploadResponse: data.message, uploadLoader:false }); \n\n            // if(data.status == 200){\n            //     this.setState({uploadResponse: data.message, uploadLoader:false }); \n\n            // }else {\n            //     Notify.showError(data.message);\n            //     return;\n            // }\n        });\n   \n  };\n\n\n    render(){\n     \n      //  console.log(\"this.state.products\",this.state.products); \n        return(\n            <React.Fragment>\n                <PostLoginNavBar/>\n                <Paper style={{padding:\"40px\"}}>\n                <Container  >\n                    {/* <EnhancedTable products={this.state.products}/> */}\n\n                    {/* <StickyHeadTable products={this.state.products} someAction={this.someAction}/>\n                     */}\n\n                      \n                    {/* <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Search Mobile No.\n                      \n\n                    </Typography>  */}\n\n                        <form onSubmit={() => this.searchOnDB( this.state.searchby )} >\n\n                        <Grid spacing={1}  container  container\n                            direction=\"row\"\n                            justify=\"right\"\n                            alignItems=\"center\">\n\n                            <Grid item xs={12} sm={7} >\n                            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            Distributor Resubmit\t\n                            </Typography> \n                            </Grid>\n                            {/* InputLabelProps={{ shrink: true }} */}\n                            <Grid item xs={12} sm={3    } alignItems=\"flex-end\" alignContent=\"flex-end\"  justify=\"flex-end\" > \n                                <TextField type=\"number\" value={this.state.mobile}  label=\"Mobile No.\"  style={{width:\"100%\"}} name=\"Search by Mobile No.\" name=\"mobile\" onChange={this.onChange} />\n                            </Grid>     \n                            {/* <Grid item xs={12} sm={2} alignItems=\"flex-end\" alignContent=\"flex-end\"  justify=\"flex-end\" > \n                                <TextField type=\"text\" value={this.state.sim}  label=\"Sim No.\"  style={{width:\"100%\"}} name=\"Search by Mobile No.\" name=\"sim\" onChange={this.onChange} />\n                            </Grid> */}\n                            <Grid item xs={12} sm={1} alignItems=\"flex-end\" alignContent=\"flex-end\"  justify=\"flex-end\" > \n                               <Button type=\"button\"  onClick={() => this.searchOnDB(  )} variant=\"contained\"  style={{marginLeft: '20px'}} >Search</Button>\n                            </Grid>\n                        </Grid>\n                        </form>\n\n                    <br /> \n\n                    {this.state.numberFound ? \n                       \n                       <Paper style={{padding:\"20px\"}}>\n                        <Grid spacing={5} alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n                            \n                            <Grid item xs={12} sm={3}>\n                             Mobile No.: <b> {this.state.mobile} </b> \n                            </Grid>\n                            <Grid item xs={12} sm={3}>\n                             Sim No.:  <b>{this.state.sim}  </b> \n                            </Grid>\n                        \n                            <Grid item xs={12} sm={3}> \n                             {this.state.poiType} : <b> {this.state.poiNumber}</b> \n                            </Grid>\n                            <Grid item xs={12} sm={3}>\n                                 FTA Date: <b> {this.state.ftaDate}</b> \n                            </Grid>\n\n                            \n                        </Grid>\n                        </Paper>\n\n                    :\"\"}\n                        <br /> \n                        <form id=\"uploadform\"  onSubmit={this.handleSubmit.bind(this)} >\n                        {/* <Paper style={{padding:\"20px\"}}> \n                            <Grid spacing={5} alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n                                <Grid item xs={12} sm={4}>\n                                    <InputLabel htmlFor=\"gender\">User Images</InputLabel>\n                                    <input id=\"user_image_file\" type=\"file\" name=\"user_image\" onChange={this.onChangeFileUpload} />\n                                </Grid>\n\n                                <Grid item xs={12} sm={2}>\n                                    {this.state.user_image_loader ? <CircularProgress />: \"\"} \n                                    {this.state.user_image_upload?<Button type=\"submit\"  onClick={() => this.onUploadFiles('user_image')} variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button>:<Button type=\"submit\"  disabled variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button> } \n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                        <span style={{fontSize:\"16px\",color:\"green\"}}><b id=\"user_image_response\"> </b> </span>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                        <br /> \n                        <Paper style={{padding:\"20px\"}}> \n                            <Grid spacing={5} alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n                                <Grid item xs={12} sm={4}>\n                                    <InputLabel htmlFor=\"gender\">User Signature</InputLabel>\n                                    <input id=\"user_signature_file\" type=\"file\" name=\"user_signature\" onChange={this.onChangeFileUpload} />\n                                </Grid>\n\n                                <Grid item xs={12} sm={2}>\n                                    {this.state.user_signature_loader ? <CircularProgress />: \"\"} \n                                    {this.state.user_signature_upload?<Button type=\"submit\"  onClick={() => this.onUploadFiles('user_signature')} variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button>:<Button type=\"submit\"  disabled variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button> } \n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                        <span style={{fontSize:\"16px\",color:\"green\"}}><b id=\"user_signature_response\"> </b> </span>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n\n                        <br /> \n                        <Paper style={{padding:\"20px\"}}> \n                            <Grid spacing={5} alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n                                <Grid item xs={12} sm={4}>\n                                    <InputLabel htmlFor=\"gender\">Retailer Signature</InputLabel>\n                                    <input id=\"retailer_signature_file\" type=\"file\" name=\"retailer_signature\" onChange={this.onChangeFileUpload} />\n                                </Grid>\n\n                                <Grid item xs={12} sm={2}>\n                                    {this.state.retailer_signature_loader ? <CircularProgress />: \"\"} \n                                    {this.state.uploadFlag?<Button type=\"submit\"  onClick={() => this.onUploadFiles('retailer_signature')} variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button>:<Button type=\"submit\"  disabled variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button> } \n                                </Grid>\n                                <Grid item xs={12} sm={6}> \n                                        <span style={{fontSize:\"16px\",color:\"green\"}}><b id=\"retailer_signature_response\"> </b> </span>\n                                </Grid>\n                            </Grid>\n                        </Paper> */}\n                         <Paper style={{padding:\"20px\"}}> \n                            <Grid spacing={1}  style={styles.textStyle} justify=\"flex-end\"  container direction=\"row\">\n                                 <Grid item xs={12} sm={3}>\n                                    <InputLabel htmlFor=\"gender\" required={true}>PEF Image</InputLabel>\n                                    <input id=\"pef_image_file\" disabled={!this.state.uploadFlag} type=\"file\" name=\"pef_image\" onChange={this.onChangeFileUpload} />\n                                </Grid>\n                                <Grid item xs={12} sm={3}>\n                                    <InputLabel htmlFor=\"gender\" required={true}>POI Front Image</InputLabel>\n                                    <input id=\"poi_front_image_file\" disabled={!this.state.uploadFlag} type=\"file\" name=\"poi_front_image\" onChange={this.onChangeFileUpload} />\n\n                                </Grid>\n\n                                <Grid item xs={12} sm={3}>\n                                    <InputLabel htmlFor=\"gender\">POI Back Image</InputLabel>\n                                    <input id=\"poi_back_image_file\" disabled={!this.state.uploadFlag} type=\"file\" name=\"poi_back_image\" onChange={this.onChangeFileUpload} />\n                                </Grid>\n\n\n                                <Grid item xs={12} item sm={1}>\n                                    {this.state.uploadFlag?<Button  onClick={() => this.onUploadFiles()} variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Submit</Button>:<Button disabled variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Submit</Button> } \n\n                                </Grid>\n                              \n                                <Grid item xs={12} sm={2} style={{textAlign:\"center\"}} >\n                                 {this.state.uploadLoader ? <CircularProgress />: \"\"} \n                                </Grid>\n                            </Grid>\n                            \n                            <br />\n                            <Grid  alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n\n                            <Grid style={{textAlign:\"center\"}}  item xs={12} sm={12}>\n                               <span style={{fontSize:\"18px\"}}> <b> {this.state.uploadResponse} </b> </span>\n                            </Grid>\n                          \n                        \n                        </Grid>\n                            \n\n                        </Paper>\n\n                      \n\n                        {/*\n\n\n\n                        <br /> \n                        <Paper style={{padding:\"20px\"}}> \n                            <Grid spacing={5} alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n                                <Grid item xs={12} sm={4}>\n                                    <InputLabel htmlFor=\"gender\" required={true}>POI Front Image</InputLabel>\n                                    <input id=\"poi_front_image_file\" type=\"file\" name=\"poi_front_image\" onChange={this.onChangeFileUpload} />\n\n                                </Grid>\n\n                                <Grid item xs={12} sm={2}>\n                                    {this.state.poi_front_image_loader ? <CircularProgress />: \"\"} \n                                    {this.state.poi_front_image_upload?<Button type=\"submit\"  onClick={() => this.onUploadFiles('poi_front_image')} variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button>:<Button type=\"submit\"  disabled variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button> } \n                                </Grid>\n                                <Grid item xs={12} sm={6}> \n                                        <span style={{fontSize:\"16px\",color:\"green\"}}><b id=\"poi_front_image_response\"> {this.state.poi_front_image_response} </b> </span>\n                                        {this.state.poi_front_image_response?<span><b> POI front image already uploaded </b> </span> :\"\"}\n\n                                </Grid>\n                            </Grid>\n                        </Paper>\n\n                        <br /> \n                        <Paper style={{padding:\"20px\"}}> \n                            <Grid spacing={5} alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n                                <Grid item xs={12} sm={4}>\n                                    <InputLabel htmlFor=\"gender\">POI Back Image</InputLabel>\n                                    <input id=\"poi_back_image_file\" type=\"file\" name=\"poi_back_image\" onChange={this.onChangeFileUpload} />\n\n                                </Grid>\n                                <Grid item xs={12} sm={2}>\n                                    {this.state.poi_back_image_loader ? <CircularProgress />: \"\"} \n                                    {this.state.poi_back_image_upload?<Button type=\"submit\"  onClick={() => this.onUploadFiles('poi_back_image')} variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button>:<Button type=\"submit\"  disabled variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button> } \n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                        <span style={{fontSize:\"16px\",color:\"green\"}}><b id=\"poi_back_image_response\"> {this.state.poi_back_image_response} </b> </span>\n                                        {this.state.poi_back_image_response?<span><b> POI back image already uploaded </b> </span> :\"\"}\n\n                                </Grid>\n                            </Grid>\n                        </Paper>\n\n                        <br /> \n                        <Paper style={{padding:\"20px\"}}> \n                            <Grid spacing={5} alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n                                <Grid item xs={12} sm={4}>\n                                    <InputLabel htmlFor=\"gender\" required={true}>PEF Image</InputLabel>\n                                    <input id=\"pef_image_file\" type=\"file\" name=\"pef_image\" onChange={this.onChangeFileUpload} />\n                                    <InputLabel style={{fontSize:\"14px\"}}>Note: It's sigle image</InputLabel>\n\n                                </Grid>\n                                <Grid item xs={12} sm={2}>\n                                    {this.state.pef_image_loader ? <CircularProgress />: \"\"} \n                                    {this.state.pef_image_upload?<Button type=\"submit\"  onClick={() => this.onUploadFiles('pef_image')} variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button>:<Button type=\"submit\"  disabled variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button> } \n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                        <span style={{fontSize:\"16px\",color:\"green\"}}><b id=\"pef_image_response\">  </b> </span>\n                                        {this.state.pef_image_response?<span><b> PFE image already uploaded </b> </span> :\"\"}\n                                </Grid>\n                            </Grid>\n                        </Paper> */}\n                        </form>\n\n                        \n                        \n                 </Container> \n                 <br />  <br />  <br /> \n                </Paper>\n            </React.Fragment>\n        )\n    }\n\n\n\n}\n\nconst styles ={\n    formContainer : {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle :{\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle:{\n        display:'flex'\n    }, \n\n    selectStyle:{\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n\n    show:{\n        display:\"block\"\n    },\n    hide:{\n        display:\"node\"\n    }\n};\n\n\n\nexport default DataEntryList;\n\n","import axios from \"axios\";\nimport * as api  from \"../src/utils/config\"\nconst performServerAction = axios.create({\n    baseURL: api.RECHARGE_PACK_GET_BY_ID\n  });\nexport default performServerAction;","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CreateIcon from '@material-ui/icons/Create';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\n\nimport ActivationService from \"../service/ActivationService\";\n\nclass RechargePack extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        this.state = {\n            products: [],\n        }\n    }\n\n\n    componentDidMount() {\n        this.loadPackList();\n     //  this.props.setPackLoaded(); \n        localStorage.setItem(\"lastUrl\",\"packs\");\n\n    }\n\n    loadPackList() {\n        var data = { allPacks:true, portal: true};\n        AdminService.listPack(data)\n            .then((res) => {\n                let data = resolveResponse(res);\n              console.log(data);\n                if(data && data.result){\n                    this.setState({products: data.result.data})\n                }\n            });\n    }\n\n    addProduct=(e)=> {\n        console.log(this.props)\n        this.props.history.push('/pack-add');\n    }\n\n    editProduct(productId) {\n        window.localStorage.removeItem(\"selectedProductId\");\n        window.localStorage.setItem(\"selectedProductId\", productId);\n        this.props.history.push('/pack-edit');\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    dateFormat(date){ \n        return moment.utc(date).format('DD-MM-YYYY HH:mm:ss A');\n    }\n  \n\n    render(){\n        console.log(this.props,\"PROPS\")\n      return(\n        <React.Fragment>\n            <PostLoginNavBar/>\n\n\n\n            <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n            <Typography variant=\"h5\" style={{ flex: 0 }} >Recharge Pack</Typography>\n                <Grid  container spacing={24} container\n                direction=\"row\"\n                justify=\"flex-end\"\n                >\n                <Button variant=\"contained\" color=\"secondry\" onClick={() => this.addProduct()}>\n                    Add Pack\n                </Button>      \n                </Grid>\n\n            <Table  size=\"small\"   aria-label=\"sticky table\" >\n                <TableHead style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                    <TableRow variant=\"head\">\n                          {/* <TableCell align=\"center\">Edit</TableCell> */}\n\n                          <TableCell align=\"center\">Icon</TableCell>\n\n                        {/* <TableCell align=\"center\">ProductId</TableCell> */}\n                        <TableCell align=\"center\">Connection Type</TableCell>\n                        <TableCell align=\"center\">Pack</TableCell>\n                        <TableCell align=\"center\">Amount</TableCell>\n\n                        <TableCell align=\"center\">Status</TableCell>\n                        <TableCell align=\"center\">Validity Days</TableCell>\n                        <TableCell align=\"center\">Validity Type</TableCell>\n                        <TableCell align=\"center\">Description</TableCell>\n                        <TableCell align=\"center\">Comment</TableCell>\n\n                        <TableCell align=\"center\">Start Date/Time</TableCell>\n                        <TableCell align=\"center\">End Date/Time</TableCell>\n\n                        <TableCell align=\"center\">Display Type</TableCell>\n                      \n\n                    </TableRow>\n                </TableHead>\n                <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                \n                    { this.state.products ? this.state.products.map(row => (\n                        <TableRow key={row.productId} onClick={() => this.editProduct(row.productId)}>\n                           {/* <TableCell align=\"center\" onClick={() => this.editProduct(row.productId)}><CreateIcon /></TableCell> */}\n\n                           <TableCell align=\"center\"> <img style={{width:\"80px\", height:\"40px\"}} src={row.imageURL} /> </TableCell>\n\n                           {/* <TableCell align=\"center\">{row.productId}</TableCell> */}\n                            <TableCell component=\"th\" scope=\"row\" className=\"hidden\">\n                                {row.connectionType}\n                            </TableCell>\n                            \n                            <TableCell align=\"center\">{row.pack}</TableCell>\n                            <TableCell align=\"center\">{row.amount}</TableCell>\n\n                            <TableCell align=\"center\">{row.active ? 'Active' : 'Inactive'}</TableCell>\n                            <TableCell align=\"center\">{row.validityDays}</TableCell>\n                            <TableCell align=\"center\">{row.validityType}</TableCell>\n                            <TableCell align=\"center\">{row.description}</TableCell>\n                            <TableCell align=\"center\">{row.comment}</TableCell>\n\n                            {/* {row.startDate.substring(0, 10)} */}\n                            <TableCell align=\"center\">{this.dateFormat(row.startDate)}</TableCell>\n                            {/* <TableCell align=\"center\">{row.endDate.substring(0, 10)}</TableCell> */}\n\n                            <TableCell align=\"center\">{this.dateFormat(row.endDate)}</TableCell>\n\n                            <TableCell align=\"center\">{row.displayType}</TableCell>\n                            \n                        </TableRow>\n                    )):<Spinner/>}\n                </TableBody>\n            </Table>\n\n            </Paper>\n            </React.Fragment> \n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'center'\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(RechargePack);\n","import * as actionTypes from \"./types\";\nimport performServerAction from \"../api\"\nimport AuthService from \"../components/service/AuthService\";\n\nexport const setPackLoaded = ()=> async dispatch=> {\n    var data = { allPacks:true, portal: true}; \n    const response = await performServerAction.post('getPrepaidPacks', data)\n    \n    dispatch( { type: actionTypes.SET_PACK_LOADED,payload:response });\n  };\n  export const getPackById = (id)=> async dispatch=> {\n    try{\n     \n\n      //add getPrepaidPacksById after / in sprint 7 and 8\n     // const response = await performServerAction.post('/', { productId : id}, AuthService.getHeader());\n    \n     //sprint 8 & 9\n      const response = await performServerAction.get('?productId='+id, AuthService.getHeader());\n\n      return  dispatch( { type: actionTypes.GET_PACK_INFO_BY_ID,payload:response });\n    }catch(err){\n      console.log(err,\"ERRRR\")\n    }\n   \n  };\n  export const editPackInfo = (updatedInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",updatedInfo);\n      updatedInfo.activationStatus =  String( updatedInfo.activationStatus );\n      updatedInfo.displayOrder =  String( updatedInfo.displayOrder );\n      updatedInfo.productId =  String( updatedInfo.productId );\n      updatedInfo.validityDays =  String( updatedInfo.validityDays );\n      updatedInfo.active =  String( updatedInfo.active );\n     // updatedInfo.ftr =  String( updatedInfo.ftr );\n      updatedInfo.isFtr =  String( updatedInfo.ftr );\n\n      \n\n\n      const response = await performServerAction.post('updatePrepaidPack',updatedInfo, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };\n  export const AddPackInfo = (packInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",packInfo)\n      const response = await performServerAction.post('getPrepaidPacks',{packInfo}, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };","import React from \"react\";\nimport axios from \"axios\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport pack from \"../service/AdminService\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container, Paper } from \"@material-ui/core\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Notify from \"../../utils/Notify\";\n//import MaterialUIPickers from \"./MaterialUIPickers\";\nimport MaterialUIPickers from \"../../utils/MaterialUIPickers\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport md5  from 'md5'; \nimport ActivationService from \"../service/ActivationService\";\nimport Input from \"@material-ui/core/Input\";\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\nclass RechargePackAdd extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        activationStatus: \"\",\n        amount: \"\",\n        comment: \"\",\n        connectionType: \"\",\n        dataDay: \"\",\n        dataDayType: \"\",\n        description: \"\",\n        displayOrder: \"\",\n        displayType: \"\",\n        endDate: new Date(),\n        imageURL: \"\",\n        isFtr: \"\",\n        nightDay: \"\",\n        nightDayType: \"\",\n        packType: \"\",\n        startDate: new Date(),\n        userCategory: \"\",\n        validityDays: \"\",\n        validityType: \"\",\n        file: null,\n        packtypevalue: [], \n        packTypeitem:'',\n        showDescription:false,\n        listofzones:[],\n        selectedZone:[],\n        zone:'',\n        showFileSize: \"\", \n        selectAllzone:'Select All',\n        showFileBrowser:false\n    };\n    this.savePack = this.savePack.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onChangePack = this.onChangePack.bind(this);\n    this.myCallback = this.myCallback.bind(this);\n    this.zoneChange = this.zoneChange.bind(this);\n\n  }\n  myCallback = (date, fromDate) => {\n    if (fromDate === \"START_DATE\") {\n      this.setState({ startDate: new Date(date).getTime() });\n    } else if (fromDate === \"END_DATE\") {\n      this.setState({ endDate: new Date(date).getTime() });\n    }\n  };\n\n  zoneChange = (e) =>{\n    this.setState({[e.target.name]: e.target.value})\n    \n    if(e.target.value.includes(\"Select All\")){\n      this.setState({selectedZone: this.state.listofzones})\n      this.setState({selectAllzone: \"Remove All\"})\n    }\n\n    if(e.target.value.includes(\"Remove All\")){\n      this.setState({selectedZone: []})\n      this.setState({selectAllzone: \"Select All\"})\n    }\n\n  }\n\n  validateUploadFile = (file) => {\n    const filename = file.name.toString(); \n\n    if (/[^a-zA-Z0-9\\.\\-\\_ ]/.test(filename)) {\n        Notify.showError(\"File name can contain only alphanumeric characters including space and dots\")\n        return false;\n    }\n\n    if(file.type == \"image/png\" || file.type == \"image/jpeg\"){\n        var fileSize = file.size / 1000; //in kb\n        if(fileSize >= 100 && fileSize <= 2048){\n          const fileext =  filename.split('.').pop(); \n          Object.defineProperty(file, 'name', {\n            writable: true,\n            value:  md5(file.name) +\".\"+ fileext\n          });\n          return file;\n        }else{\n          Notify.showError(\"File size should be grater than 100KB and less than 2MB\")\n        }\n    }else {\n      Notify.showError(\"Only png and jpeg file allowd.\")\n    }\n    return false;\n  }\n\n  onChangeFileUpload = e => {\n\n    const filetoupload = this.validateUploadFile(e.target.files[0]); \n     if (filetoupload){\n       this.setState({\n           [e.target.name]: e.target.files[0], \n           showFileSize : e.target.files[0].size / 1000 + \"KB\",\n           imageURL: URL.createObjectURL(e.target.files[0])\n       })\n     }else{\n       this.setState({\n           [e.target.name]: null, \n           showFileSize : \"\",\n           imageURL: \"\"\n       })\n       e.target.value = null;\n \n     }\n   } \n\n\n  componentDidMount() {\n    localStorage.setItem(\"lastUrl\",\"packadd\");\n    ActivationService.getStaticData('ADMIN').then(res => {\n      let data = resolveResponse(res);\n      this.setState({listofzones: data.result && data.result.zones}) \n    })\n\n  }\n\n  render() {\n\n    const dateParam = {\n      myCallback: this.myCallback,\n      startDate: '',\n      endDate:'', \n      firstLavel : \"Start Date\", \n      secondLavel : \"End Date\"\n\n    }\n\n    \n    console.log(this.state, \"STATE_MATTERS\");\n    return (\n      <React.Fragment>\n        <PostLoginNavBar />\n        <Container maxWidth=\"sm\">\n          <Paper style={{ padding: \"20px\" }}>\n            <Typography variant=\"h5\" style={styles.textStyle}>\n              Add Recharge Pack\n            </Typography>\n            <form style={styles.formContainer}>\n             \n            <Grid container spacing={2} direction=\"row\" justify=\"flex-end\" >\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Amount\"\n                  required={true}\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"99999\"\n                  fullWidth\n                  name=\"amount\"\n                  value={this.state.amount}\n                  onChange={this.onChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Pack Name\"\n                  type=\"\"\n                  rows={2}\n                  fullWidth\n                  margin=\"none\"\n                  min=\"1\"\n                  max=\"15\"\n                  name=\"comment\"\n                  value={this.state.comment}\n                  onChange={this.onChange} />\n                </Grid>\n\n            </Grid>\n\n              <Grid container spacing={2} direction=\"row\" justify=\"flex-end\" >\n\n              <Grid item xs={12} sm={6}>\n\n              <TextField\n                label=\"Description\"\n                fullWidth\n                multiline \n                variyant \n                rows={2} \n                margin=\"normal\"\n                name=\"description\"\n                value={this.state.description}\n                onChange={this.onChange}\n              />\n            \n             </Grid>\n\n\n             <Grid item xs={12} sm={6} style={{marginTop: '34px'}}>\n\n                <FormControl style={styles.selectStyle}>\n                    <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                    <Select\n                    labelId=\"demo-mutiple-name-label\"\n                    id=\"demo-mutiple-name\"\n                    multiple\n                    name=\"selectedZone\"\n                    value={this.state.selectedZone}\n                    onChange={this.zoneChange}\n                    input={<Input />}\n                    MenuProps={MenuProps}\n                    >\n                      <MenuItem key={this.state.selectAllzone} value={this.state.selectAllzone} >\n                        <b> {this.state.selectAllzone}   </b>                                         \n                      </MenuItem>\n\n                    {this.state.listofzones ? this.state.listofzones.map(name => (\n                        <MenuItem key={name} value={name} >\n                            {name}\n                        </MenuItem>\n                    )): \"\"}\n                    </Select>\n                </FormControl>\n\n              </Grid>\n\n              </Grid>\n\n             <Grid container spacing={2} direction=\"row\" justify=\"flex-end\" >\n\n\n             <Grid item xs={12} sm={6}>\n\n\n            <FormControl style={styles.multiselect}>\n              <InputLabel htmlFor=\"Connection Type\" required={true}>\n                Connection Type\n              </InputLabel>\n              <Select\n                name=\"connectionType\"\n                value={this.state.connectionType}\n                onChange={this.onChange}\n              >\n                <MenuItem value=\"prepaid\">Prepaid</MenuItem>\n                <MenuItem value=\"postpaid\">Postpaid</MenuItem>\n              </Select>\n            </FormControl>\n            </Grid>\n              \n              <Grid item xs={12} sm={6}>\n              \n                <TextField\n                  label=\"Display Order\"\n                  required={true}\n                  fullWidth\n                  type=\"number\"\n                  margin=\"none\"\n                  name=\"displayOrder\"\n                  value={this.state.displayOrder}\n                  onChange={this.onChange}\n                />\n\n               \n\n                \n              </Grid>\n\n            \n              \n              </Grid>\n              <MaterialUIPickers callbackFromParent={dateParam} />\n              <input type=\"hidden\" id=\"startDateMili\" /> \n              <input type=\"hidden\" id=\"endDateMili\" /> \n\n              <Grid container spacing={2} direction=\"row\" justify=\"flex-end\" >\n\n              <Grid item xs={12} sm={6}>\n                <FormControl style={styles.multiselect}>\n                  <InputLabel  required={true} htmlFor=\"Pack Type\" >\n                    Pack \n                  </InputLabel>\n                  <Select \n                    name=\"packType\"\n                    value={this.state.packType}\n                    onChange={this.onChangePack}\n                  >\n                    <MenuItem value=\"Data\">Data</MenuItem>\n                    <MenuItem value=\"Voice\">Voice</MenuItem>\n                    <MenuItem value=\"Combo\">Combo</MenuItem>\n                    <MenuItem value=\"IDD\">IDD</MenuItem>\n                    <MenuItem value=\"SMS\">SMS</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n             \n              <Grid item xs={12} sm={6}>\n              <TextField\n                //label={this.state.showDescription ?  \"Description\" : \"Type\"}\n                  label=\"Description\"\n                  min=\"1\"\n                  max=\"99999\"\n                  fullWidth\n                  name=\"packTypeitem\"\n                  value={this.state.packTypeitem}\n                  onChange={this.onChange}\n                />\n\n              {/* {this.state.showDescription ? \n                <TextField\n                //label={this.state.showDescription ?  \"Description\" : \"Type\"}\n                  label=\"Description\"\n                  min=\"1\"\n                  max=\"99999\"\n                  fullWidth\n                  name=\"packTypeitem\"\n                  value={this.state.packTypeitem}\n                  onChange={this.onChange}\n                />\n                :\n                <FormControl style={styles.multiselect}>\n                  <InputLabel htmlFor=\"Pack Type\" >\n                    Description\n                  </InputLabel>\n                  <Select\n                    name=\"packTypeitem\"\n                    value={this.state.packTypeitem}\n                    onChange={this.onChange}\n                  >\n                  {this.state.packtypevalue ? this.state.packtypevalue.map(name => (\n                      <MenuItem key={name} value={name} >\n                          {name}\n                      </MenuItem>\n                  )): \"\"}\n                  </Select>\n                </FormControl>\n              } */}\n              </Grid> \n\n              </Grid>\n             \n              <Grid item xs={12} sm={6}>\n                <TextField\n                //label={this.state.showDescription ?  \"Description\" : \"Type\"}\n                  label=\"Description\"\n                  min=\"1\"\n                  max=\"99999\"\n                  fullWidth\n                  name=\"dataDay\"\n                  value={this.state.dataDay}\n                  onChange={this.onChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n              <TextField\n              //label={this.state.showDescription ?  \"Description\" : \"Type\"}\n              label=\"Description\"\n              style={{\n                marginLeft: \"18px\"\n              }}\n              // required={true}\n              fullWidth\n              margin=\"none\"\n              name=\"dataDayType\"\n              value={this.state.dataDayType}\n              onChange={this.onChange}\n            />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Description\"\n                 //label={this.state.showDescription ?  \"Description\" : \"Type\"}\n                  min=\"1\"\n                  max=\"99999\"\n                  fullWidth\n                  name=\"nightDay\"\n                  value={this.state.nightDay}\n                  onChange={this.onChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                label=\"Description\"\n                style={{\n                    marginLeft: \"18px\"\n                  }}\n                // required={true}\n                fullWidth\n                margin=\"none\"\n                name=\"nightDayType\"\n                value={this.state.nightDayType}\n                onChange={this.onChange}\n              />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Validity Days\"\n                  \n                  type=\"number\"\n                  min=\"1\"\n                  max=\"99999\"\n                  fullWidth\n                  name=\"validityDays\"\n                  value={this.state.validityDays}\n                  onChange={this.onChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                {/* <TextField\n                  label=\"Validity Type\"\n                  style={{\n                    marginLeft: \"18px\"\n                  }}\n                  \n                  fullWidth\n                  margin=\"none\"\n                  name=\"validityType\"\n                  value={this.state.validityType}\n                  onChange={this.onChange}\n                /> */}\n                <FormControl style={styles.selectStyle}>\n                <InputLabel htmlFor=\"Validity Type\" required={true}>\n                     Validity Type\n                  </InputLabel>\n                  <Select\n                    name=\"validityType\"\n                    value={this.state.validityType}\n                    onChange={this.onChange}\n                  >\n                    <MenuItem value=\"Month\">Month</MenuItem>\n                    <MenuItem value=\"Days\">Days</MenuItem>\n                    <MenuItem value=\"Week\">Week</MenuItem>\n                    <MenuItem value=\"Hours\">Hours</MenuItem>\n                    <MenuItem value=\"Minutes\">Minutes</MenuItem>\n\n                  </Select> \n                  </FormControl>\n              </Grid>\n             \n\n              <Grid item xs={12} sm={6}>\n                <FormControl style={styles.multiselect}>\n                  <InputLabel htmlFor=\"Activation status\" required={true}>\n                    Status\n                  </InputLabel>\n                  <Select\n                    name=\"activationStatus\"\n                    value={this.state.activationStatus}\n                    onChange={this.onChange}\n                  >\n                    <MenuItem value=\"true\">Active</MenuItem>\n                    <MenuItem value=\"false\">In Active</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl style={styles.multiselect}>\n                  <InputLabel htmlFor=\"Activation status\" required={true}>\n                    FTR or Normal\n                  </InputLabel>\n                  <Select\n                    name=\"isFtr\"\n                    value={this.state.isFtr}\n                    onChange={this.onChange}\n                  >\n                    <MenuItem value=\"true\">FTR(First Time Recharge)</MenuItem>\n                    <MenuItem value=\"false\">Normal</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid\n                container\n                spacing={24}\n                container\n                direction=\"row\"\n                justify=\"flex-end\"\n              >\n                <Grid item xs={12} sm={6}>\n                  <FormControl style={styles.multiselect}>\n                    <InputLabel htmlFor=\"display-type\" required={true}>\n                      Display Type\n                    </InputLabel>\n                    <Select\n                      name=\"displayType\"\n                      value={this.state.displayType}\n                      onChange={this.onChange}\n                    >\n                      <MenuItem value=\"details\">Details</MenuItem>\n                      <MenuItem value=\"detailsWithImage\">\n                        Details with Image\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n\n               \n                <Grid item xs={12} sm={6}>\n                {this.state.showFileBrowser ? \n                  <FormControl style={styles.multiselect}>\n                    <input\n                      style={{\n                        marginTop: \"31px\",\n                        marginLeft: \"18px\"\n                      }}\n                      type=\"file\"\n                      name=\"file\"\n                      onChange={this.onChangeFileUpload}\n                    />\n                  </FormControl>\n                   : \"\"}\n                </Grid>\n                 \n              </Grid>\n            \n              {this.state.showFileBrowser ? \n              <Grid  container spacing={24} container\n                direction=\"row\"\n                justify=\"center\">\n                  \n                  <Grid item xs={12} sm={6}>\n                        Selected File Size: {this.state.showFileSize}\n                        <br />\n                    </Grid>\n\n                    <Grid item xs={12} sm={6}>\n                      <img title=\"Preview Banner\"  style={{width:\"200px\", height:\"100px\"}} src={this.state.imageURL} />\n                  </Grid>\n              </Grid>\n            :\"\"  }\n\n\n                     \n<Grid container spacing={2} container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\">\n                   <br />  <br /> <br />\n                   <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.savePack}\n              >\n                Save\n              </Button>\n\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ marginLeft: \"150px\" }}\n                onClick={this.cancel}\n              >\n                Cancel\n              </Button>\n            </Grid>\n\n           \n            </form>\n          </Paper>\n        </Container>\n      </React.Fragment>\n    );\n  }\n\n  savePack = e => {\n    \n    e.preventDefault();\n    if(!this.state.amount || !this.state.displayOrder || !this.state.startDate || !this.state.endDate || !this.state.packType  ){\n        Notify.showError(\"Missing required fields\");\n        return;\n    }\n    if(this.state.displayType == \"detailsWithImage\" && !this.state.file){\n      Notify.showError(\"Details With Image required to upload images\");\n      return;\n    }\n\n    if(!this.state.startDate){\n      this.state.startDate = new Date().getTime();\n    }\n\n    if(!this.state.endDate){\n      this.state.endDate = new Date().getTime();\n    }\n\n    // const packs = {\n    //   amount: this.state.amount,\n    //   displayOrder: this.state.displayOrder,\n    //   comment: this.state.comment,\n    //   startDate: this.state.startDate,\n    //   endDate:this.state.endDate,\n    //   pack: this.state.packType,\n    //   packType: this.state.packTypeitem,\n    //   dataDay: this.state.dataDay,\n    //   dataDayType: this.dataDayType,\n    //   nightDay: this.state.nightDay,\n    //   nightDayType: this.state.nightDayType,\n    //   validityDays: this.state.validityDays,\n    //   validityType: this.state.validityType,\n    //   connectionType: this.state.connectionType,\n    //   displayType: this.state.displayType,\n    //   imageURL: this.state.imageURL,\n    //   description: this.state.description,\n    //   activationStatus: this.state.activationStatus,\n    //   isFtr: this.state.isFtr,\n\n    // };\n\n    let startDatetime = new Date(this.state.startDate).getTime()\n    let endDatetime = new Date(this.state.endDate).getTime()\n    if(startDatetime == endDatetime){\n      Notify.showError(\"Start and end date time should not be same\");\n      return;\n    }\n\n    if(this.state.displayType===\"detailsWithImage\" && !this.state.file){\n      Notify.showError(\"Select the file.\");\n      return;\n    }\n    \n\n    const formData = new FormData();\n\n    if(this.state.displayType===\"detailsWithImage\" && this.state.file){\n      formData.append('file',this.state.file);\n    }\n\n    new Date(this.state.startDate).getTime()\n\n    formData.append('amount', this.state.amount);\n    formData.append('displayOrder', this.state.displayOrder);\n    formData.append('startDate',startDatetime);\n    formData.append('endDate', endDatetime);\n    formData.append('pack', this.state.packType);\n    formData.append('packType', this.state.packTypeitem);\n    formData.append('dataDay', this.state.dataDay);\n    formData.append('dataDayType', this.state.dataDayType);\n    formData.append('nightDay', this.state.nightDay);\n    formData.append('nightDayType', this.state.nightDayType);\n    formData.append('validityDays', this.state.validityDays);\n    formData.append('validityType', this.state.validityType);\n    formData.append('connectionType', this.state.connectionType);\n    formData.append('displayType', this.state.displayType);\n    formData.append('description', this.state.description);\n    formData.append('activationStatus', this.state.activationStatus);\n    formData.append('comment', this.state.comment);\n    formData.append('isFtr', this.state.isFtr);\n\n    if(this.state.selectedZone.length){\n      formData.append('zones',this.state.selectedZone.length ? this.state.selectedZone : null);\n    }\n\n\n   // console.log(packs, \"PACKS\");\n    pack.addPack(formData).then(res => {\n      resolveResponse(res, \"Product saved successfully.\");\n      this.props.history.push(\"/packs\");\n    });\n  };\n\n  cancel = e => {\n    this.props.history.push(\"/packs\");\n  };\n\n\n\n\n\n  // onChangeFileUpload = e => this.setState({\n  //   //  file:e.target.files[0]\n  //     [e.target.name]: e.target.files[0]\n  // })\n\n\n\n  onChangeHandler = event => {\n    const formData = new FormData();\n    formData.append('file',event.target.files[0]);\n    // const config = {\n    //     headers: {\n    //         'content-type': 'multipart/form-data'\n    //     }\n    // };\n\n    // pack.uploadPackImage(formData).then(res => {\n     \n    //  var data =  resolveResponse(res, \"Product saved successfully.\");\n\n    //   this.setState({\n    //        imageURL: data.result,\n    //    });\n\n    // });\n\n\n    //http://125.16.74.160:30611\n    // axios.post(\"/SLRetailer/recharges/uploadRechargeImage\",formData,config)\n    //     .then((response) => {\n    // this.setState({\n    //     imageURL: response.data.result,\n    // });\n    //     }).catch((error) => {\n    //         console.log(error,\"ERROR\")\n    // });\n   \n  };\n\n  onChange = e =>{\n\n    this.setState({ [e.target.name]: e.target.value });\n\n    if(e.target.name == 'displayType' && e.target.value ==\"detailsWithImage\"){      \n      this.setState({showFileBrowser: true});\n    }\n\n    if(e.target.name == 'displayType' && e.target.value ==\"details\"){      \n      this.setState({showFileBrowser: false});\n    }\n  } \n\n\n  onChangePack = e =>  {\n    this.setState({ [e.target.name]: e.target.value });\n    \n    var datatype = ['Anytime MB','Anytime GB', 'Nighttime MB', 'Nighttime GB']; \n\n    var voicetype = ['Type Rs', 'Minutes', 'Seconds']; \n    var combotype = ['Combo']; \n    var iddsmstype = ['Type Rs', \"SMS\"]; \n\n    if( e.target.value == \"Data\"){\n      this.setState({packtypevalue:  datatype, showDescription: false});\n    }else{\n\n      this.setState({showDescription: true, packTypeitem : \"\"});\n    }\n\n    // if( e.target.value == \"Voice\"){\n    //   this.setState({packtypevalue:  voicetype});\n    // }\n   \n    // if( e.target.value == \"Combo\"){\n    //   this.setState({packtypevalue:  combotype});\n    // }\n    // if( e.target.value == \"IDD\" || e.target.value == \"SMS\" ){\n    //   this.setState({packtypevalue:  iddsmstype});\n    // }\n\n  }\n}\n\nconst styles = {\n  formContainer: {\n    display: \"flex\",\n    flexFlow: \"row wrap\"\n  },\n\n  textStyle: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  input: {\n    display: \"none\"\n  },\n\n  textStyle: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  multiselect: {\n    minWidth: \"100%\",\n    marginBottom: \"10px\"\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  chip: {\n    margin: 3\n  }, \n  selectStyle:{\n    //  minWidth: '100%',\n      marginBottom: '0px',\n       minWidth: 255,\n       maxWidth: 255,\n }\n  \n};\n\nexport default RechargePackAdd;\n","import React from 'react';\nimport axios from \"axios\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {Container,Paper} from \"@material-ui/core\";\n//import MaterialUIPickers from \"./MaterialUIPickers\";\nimport MaterialUIPickers from \"../../utils/MaterialUIPickers\";\nimport pack from \"../service/AdminService\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\n\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport {editPackInfo,getPackById} from \"../../action\"\nimport {connect} from \"react-redux\";\nimport Notify from \"../../utils/Notify\";\nimport md5  from 'md5'; \nimport ActivationService from \"../service/ActivationService\";\nimport Input from \"@material-ui/core/Input\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass RechargePackAdd extends React.Component {\n   \n    constructor(props) {\n        super(props);\n        this.state = {\n            activationStatus:\"\",\n            amount: \"\",\n            comment: \"\",\n            connectionType: \"\",\n            dataDay: \"\",\n            dataDayType: \"\",\n            description: \"\",\n            displayOrder: \"\",\n            displayType: \"\",\n            endDate: \"\",\n            imageURL: \"\",\n            ftr: \"\",\n            nightDay: \"\",\n            nightDayType: \"\",\n            pack: \"\",\n            packType:'',\n            startDate: \"\",\n            validityDays: \"\",\n            validityType: \"\",\n            packvalue: [],\n            showDescription:false,\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            showFileSize: \"\", \n            selectAllzone:'Select All',\n            showFileBrowser:false\n            \n            \n        }\n        this.savePack = this.savePack.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.myCallback = this.myCallback.bind(this);\n        this.onChangePack = this.onChangePack.bind(this);\n        this.addPackTpe = this.addPackTpe.bind(this);\n        this.zoneChange = this.zoneChange.bind(this);\n\n        \n\n    }\n    \n    \n\n  // onChangeFileUpload = e => this.setState({\n  //   //  file:e.target.files[0]\n  //     [e.target.name]: e.target.files[0]\n  // })\n\n\n\n  validateUploadFile = (file) => {\n    const filename = file.name.toString(); \n\n    if (/[^a-zA-Z0-9\\.\\-\\_ ]/.test(filename)) {\n        Notify.showError(\"File name can contain only alphanumeric characters including space and dots\")\n        return false;\n    }\n\n    if(file.type == \"image/png\" || file.type == \"image/jpeg\"){\n        var fileSize = file.size / 1000; //in kb\n        if(fileSize >= 100 && fileSize <= 2048){\n          const fileext =  filename.split('.').pop(); \n          Object.defineProperty(file, 'name', {\n            writable: true,\n            value:  md5(file.name) +\".\"+ fileext\n          });\n          return file;\n        }else{\n          Notify.showError(\"File size should be grater than 100KB and less than 2MB\")\n        }\n    }else {\n      Notify.showError(\"Only png and jpeg file allowd.\")\n    }\n    return false;\n  }\n\n  onChangeFileUpload = e => {\n\n    const filetoupload = this.validateUploadFile(e.target.files[0]); \n     if (filetoupload){\n       this.setState({\n           [e.target.name]: e.target.files[0], \n           showFileSize : e.target.files[0].size / 1000 + \"KB\",\n           imageURL: URL.createObjectURL(e.target.files[0])\n       })\n     }else{\n       this.setState({\n           [e.target.name]: null, \n           showFileSize : \"\",\n           imageURL: \"\"\n       })\n       e.target.value = null;\n \n     }\n   } \n   zoneChange = (e) =>{\n    this.setState({[e.target.name]: e.target.value})\n    \n    if(e.target.value.includes(\"Select All\")){\n      this.setState({selectedZone: this.state.listofzones})\n      this.setState({selectAllzone: \"Remove All\"})\n    }\n\n    if(e.target.value.includes(\"Remove All\")){\n      this.setState({selectedZone: []})\n      this.setState({selectAllzone: \"Select All\"})\n    }\n\n  }\n    \n    getInitialData = async ()=>{\n        const id = localStorage.getItem('selectedProductId');\n        this.setState({loading:true})\n        const packRes = await  this.props.getPackById(id);\n        console.log(\"packRes:\", packRes); \n        if(packRes.payload && packRes.payload.data && packRes.payload.data.result){\n            this.setState(packRes.payload.data.result);\n        }\n        this.setState({selectedZone: this.state.zones});\n        this.setState({loading:false})\n        this.setState({activationStatus:this.state.active})\n\n        if(this.state.displayType =='detailsWithImage' ){\n          this.setState({showFileBrowser:true})\n        }\n\n        this.addPackTpe(this.state.pack); \n    }\n\n    componentDidMount() {\n       this.getInitialData();\n       localStorage.setItem(\"lastUrl\",\"editpacks\");\n       ActivationService.getStaticData('ADMIN').then(res => {\n        let data = resolveResponse(res);\n        this.setState({listofzones: data.result && data.result.zones}) \n      })\n\n    }\n     \n    \n    myCallback = (date,fromDate) => {\n        if(fromDate ===\"START_DATE\"){\n            this.setState({startDate:new Date(date).getTime()})\n        }else if(fromDate===\"END_DATE\"){\n            this.setState({endDate:new Date(date).getTime()})\n        }\n       \n    }\n  render() {\n\n   \n    console.log(\"STAte\", this.state);\n\n\n      const dateParam = {\n        myCallback: this.myCallback,\n        startDate: this.state.startDate,\n        endDate: this.state.endDate,\n        firstLavel : \"Start Date\", \n        secondLavel : \"End Date\"\n      }\n      console.log(\"dateparam\",dateParam);\n      if(this.state.loading){\n          return <div>Loading</div>\n      }\n       return(\n        \n        <React.Fragment>\n        <PostLoginNavBar />\n        <Container maxWidth=\"sm\">\n          <Paper style={{ padding: \"20px\" }}>\n            <Typography variant=\"h5\" style={styles.textStyle}>\n              Edit Recharge Pack\n            </Typography>\n            <form style={styles.formContainer}>\n              {/* <TextField\n                label=\"Product Id\"\n                required={true}\n                fullWidth\n                margin=\"none\"\n                name=\"productId\"\n                value={this.state.productId}\n                ref={this.input}\n                onChange={this.onChange}\n              /> */}\n\n            <Grid container spacing={2} direction=\"row\" justify=\"flex-end\" >\n\n             <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Amount\"\n                  required={true}\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"99999\"\n                  fullWidth\n                  name=\"amount\"\n                  value={this.state.amount}\n                  onChange={this.onChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n              <TextField\n                label=\"Pack Name\"\n                type=\"\"\n                rows={2}\n                fullWidth\n                margin=\"none\"\n                min=\"1\"\n                max=\"15\"\n                name=\"comment\"\n                value={this.state.comment}\n                onChange={this.onChange}\n              />\n\n\n              </Grid>\n\n              </Grid>\n\n\n              \n              <Grid container spacing={2} direction=\"row\" justify=\"flex-end\" >\n              <Grid item xs={12} sm={6}>\n\n              <TextField\n                label=\"Description\"\n                fullWidth\n                multiline \n                variyant \n                rows={2} \n                margin=\"normal\"\n                name=\"description\"\n                value={this.state.description}\n                onChange={this.onChange}\n              />\n\n              </Grid>\n\n              <Grid item xs={12} sm={6} style={{marginTop: '34px'}}>\n\n              <FormControl style={styles.selectStyle}>\n                  <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                  <Select\n                  labelId=\"demo-mutiple-name-label\"\n                  id=\"demo-mutiple-name\"\n                  multiple\n                  name=\"selectedZone\"\n                  value={this.state.selectedZone}\n                  onChange={this.zoneChange}\n                  input={<Input />}\n                  MenuProps={MenuProps}\n                  >\n                    <MenuItem key={this.state.selectAllzone} value={this.state.selectAllzone} >\n                      <b> {this.state.selectAllzone}   </b>                                         \n                    </MenuItem>\n\n                  {this.state.listofzones ? this.state.listofzones.map(name => (\n                      <MenuItem key={name} value={name} >\n                          {name}\n                      </MenuItem>\n                  )): \"\"}\n                  </Select>\n              </FormControl>\n\n              </Grid>\n              </Grid>\n\n\n            \n\n              <Grid container spacing={2} direction=\"row\" justify=\"flex-end\" >\n\n              <Grid item xs={12} sm={6}>\n\n\n              <FormControl style={styles.multiselect}>\n                <InputLabel htmlFor=\"Connection Type\" required={true}>\n                  Connection Type\n                </InputLabel>\n                <Select\n                  name=\"connectionType\"\n                  value={this.state.connectionType}\n                  onChange={this.onChange}\n                >\n                  <MenuItem value=\"prepaid\">Prepaid</MenuItem>\n                  <MenuItem value=\"postpaid\">Postpaid</MenuItem>\n                </Select>\n              </FormControl>\n\n              </Grid>\n\n              <Grid item xs={12} sm={6}>\n              <TextField\n                  label=\"Display Order\"\n                  required={true}\n                  fullWidth\n                  margin=\"none\"\n                  name=\"displayOrder\"\n                  value={this.state.displayOrder}\n                  onChange={this.onChange}\n                />\n\n                  \n            </Grid>\n\n\n            </Grid>\n              \n              \n              <MaterialUIPickers callbackFromParent={dateParam} />\n              <input type=\"hidden\" id=\"startDateMili\" value={dateParam.startDate}/> \n              <input type=\"hidden\" id=\"endDateMili\" value={dateParam.endDate} /> \n              <Grid item xs={12} sm={6}>\n                <FormControl style={styles.multiselect}>\n                  <InputLabel  required={true} htmlFor=\"Pack Type\" >\n                    Pack \n                  </InputLabel>\n                  <Select\n                    name=\"pack\"\n                    value={this.state.pack}\n                    onChange={this.onChangePack}\n                  >\n                    <MenuItem value=\"Data\">Data</MenuItem>\n                    <MenuItem value=\"Voice\">Voice</MenuItem>\n                    <MenuItem value=\"Combo\">Combo</MenuItem>\n                    <MenuItem value=\"IDD\">IDD</MenuItem>\n                    <MenuItem value=\"SMS\">SMS</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n             \n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Description\"\n                  min=\"1\"\n                  max=\"99999\"\n                  fullWidth\n                  name=\"packType\"\n                  value={this.state.packType}\n                  onChange={this.onChange}\n                />\n                {/* <FormControl style={styles.multiselect}>\n                  <InputLabel htmlFor=\"Pack Type\" >\n                    Pack Type\n                  </InputLabel>\n                  <Select\n                    name=\"packType\"\n                    value={this.state.packType}\n                    onChange={this.onChange}\n                  >\n\n                  {this.state.packvalue ? this.state.packvalue.map(name => (\n                      <MenuItem key={name} value={name} >\n                          {name}\n                      </MenuItem>\n                  )): \"\"}\n                    \n                  </Select>\n                </FormControl> */}\n                {/* {this.state.showDescription ? \n                <TextField\n                  label=\"Description\"\n                  min=\"1\"\n                  max=\"99999\"\n                  fullWidth\n                  name=\"packType\"\n                  value={this.state.packType}\n                  onChange={this.onChange}\n                />\n                :\n                <FormControl style={styles.multiselect}>\n                  <InputLabel htmlFor=\"Pack Type\" >\n                  Description\n                  </InputLabel>\n                  <Select\n                    name=\"packType\"\n                    value={this.state.packType}\n                    onChange={this.onChange}\n                  >\n                  {this.state.packtypevalue ? this.state.packtypevalue.map(name => (\n                      <MenuItem key={name} value={name} >\n                          {name}\n                      </MenuItem>\n                  )): \"\"}\n                  </Select>\n                </FormControl>\n              } */}\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  //label={this.state.showDescription ?  \"Description\" : \"Data Day\"}\n                  // required={true}\n                  // type=\"number\"\n                  label=\"Description\"\n                  min=\"1\"\n                  max=\"99999\"\n                  fullWidth\n                  name=\"dataDay\"\n                  value={this.state.dataDay}\n                  onChange={this.onChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n              <TextField\n             // label={this.state.showDescription ?  \"Description\" : \"Type\"}\n             label=\"Description\" \n             style={{\n                marginLeft: \"18px\"\n              }}\n              // required={true}\n              fullWidth\n              margin=\"none\"\n              name=\"dataDayType\"\n              value={this.state.dataDayType}\n              onChange={this.onChange}\n            />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                //  label={this.state.showDescription ?  \"Description\" : \"Data Night\"}\n                label=\"Description\" \n                // required={true}\n                  // type=\"number\"\n                  min=\"1\"\n                  max=\"99999\"\n                  fullWidth\n                  name=\"nightDay\"\n                  value={this.state.nightDay}\n                  onChange={this.onChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n              //  label={this.state.showDescription ?  \"Description\" : \"Type\"}\n                label=\"Description\"\n                style={{\n                  marginLeft: \"18px\"\n                }}\n                // required={true}\n                fullWidth\n                margin=\"none\"\n                name=\"nightDayType\"\n                value={this.state.nightDayType}\n                onChange={this.onChange}\n              />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Validity Days\"\n                  \n                  type=\"number\"\n                  min=\"1\"\n                  max=\"99999\"\n                  fullWidth\n                  name=\"validityDays\"\n                  value={this.state.validityDays}\n                  onChange={this.onChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                {/* <TextField\n                  label=\"Validity Type\"\n                  style={{\n                    marginLeft: \"18px\"\n                  }}\n                  \n                  fullWidth\n                  margin=\"none\"\n                  name=\"validityType\"\n                  value={this.state.validityType}\n                  onChange={this.onChange}\n                /> */}\n                \n                \n                <FormControl style={styles.multiselect}>\n                <InputLabel htmlFor=\"Validity Type\" required={true}>\n                     Validity Type\n                  </InputLabel>\n                  <Select\n                    name=\"validityType\"\n                    value={this.state.validityType}\n                    onChange={this.onChange}\n                  >\n                     <MenuItem value=\"Month\">Month</MenuItem>\n                    <MenuItem value=\"Days\">Days</MenuItem>\n                    <MenuItem value=\"Week\">Week</MenuItem>\n                    <MenuItem value=\"Hours\">Hours</MenuItem>\n                    <MenuItem value=\"Minutes\">Minutes</MenuItem>\n\n\n                  </Select> \n                  </FormControl>\n              </Grid>\n             \n\n              <Grid item xs={12} sm={6}>\n                <FormControl style={styles.multiselect}>\n                  <InputLabel htmlFor=\"Activation status\" required={true}>\n                    Status\n                  </InputLabel>\n                  <Select\n                    name=\"activationStatus\"\n                    value={this.state.activationStatus}\n                    onChange={this.onChange}\n                  >\n                    <MenuItem value=\"true\">Active</MenuItem>\n                    <MenuItem value=\"false\">In Active</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n\n              <Grid item xs={12} sm={6}>\n                <FormControl style={styles.multiselect}>\n                  <InputLabel htmlFor=\"Activation status\" required={true}>\n                    FTR or Normal\n                  </InputLabel>\n                  <Select\n                    name=\"ftr\"\n                    value={this.state.ftr}\n                    onChange={this.onChange}\n                  >\n                    <MenuItem value=\"true\">FTR(First Time Recharge)</MenuItem>\n                    <MenuItem value=\"false\">Normal</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid\n                container\n                spacing={24}\n                container\n                direction=\"row\"\n                justify=\"flex-end\"\n              >\n                <Grid item xs={12} sm={6}>\n                  <FormControl style={styles.multiselect}>\n                    <InputLabel htmlFor=\"display-type\" required={true}>\n                      Display Type\n                    </InputLabel>\n                    <Select\n                      name=\"displayType\"\n                      value={this.state.displayType}\n                      onChange={this.onChange}\n                    >\n                      <MenuItem value=\"details\">Details</MenuItem>\n                      <MenuItem value=\"detailsWithImage\">\n                        Details with Image\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                {this.state.showFileBrowser ? \n                  <FormControl style={styles.multiselect}>\n                    <input\n                      style={{\n                        marginTop: \"31px\",\n                        marginLeft: \"18px\"\n                      }}\n                      type=\"file\"\n                      name=\"file\"\n                    onChange={this.onChangeFileUpload}\n                    />\n                  </FormControl>\n                  :\"\"}\n                </Grid>\n\n             \n\n              </Grid>\n              {this.state.showFileBrowser ? \n                 <Grid  container spacing={24} container\n                    direction=\"row\"\n                    justify=\"center\">\n                      \n                      <Grid item xs={12} sm={6}>\n                            Selected File Size: {this.state.showFileSize}\n                            <br />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                          <img title=\"Preview Banner\"  style={{width:\"200px\", height:\"100px\"}} src={this.state.imageURL} />\n                      </Grid>\n                  </Grid>\n              :\"\"}\n\n              {/* <TextField\n                label=\"comment\"\n                type=\"\"\n                multiline\n                rows={2}\n                fullWidth\n                margin=\"none\"\n                min=\"1\"\n                max=\"15\"\n                name=\"comment\"\n                value={this.state.comment}\n                onChange={this.onChange}\n              /> */}\n             \n\n                     \n            <Grid container spacing={2} container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\">\n                   <br />  <br /> <br />\n                       <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={this.savePack}\n                      >\n                        Save\n                      </Button>\n\n                      <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ marginLeft: \"150px\" }}\n                        onClick={this.cancel}\n                      >\n                        Cancel\n                      </Button>\n            </Grid>\n\n\n             \n            </form>\n          </Paper>\n        </Container>\n      </React.Fragment>\n     )\n    }\n\n    savePack = (e) => {\n        e.preventDefault();\n        \n      \n      //   if(this.state.displayType===\"detailsWithImage\"){\n      //       if(!this.state.imageURL){\n      //       Notify.showError(\"Missing required fields\");\n      //       return;\n      //       }\n\n      //   }\n       \n      //  this.props.editPackInfo(this.state);\n      //  this.props.history.push('/packs');\n\n\n      // if(!this.state.amount || !this.state.displayOrder || !this.state.comment || !this.state.startDate || !this.state.endDate || !this.state.packType  ){\n      //   Notify.showError(\"Missing required fields\");\n      //   return;\n      // }\n      // if(this.state.displayType == \"detailsWithImage\" && !this.state.file){\n      //   Notify.showError(\"Details With Image required to upload images\");\n      //   return;\n      // }\n\n   \n\n      // const packs = {\n      //   amount: this.state.amount,\n      //   displayOrder: this.state.displayOrder,\n      //   comment: this.state.comment,\n      //   startDate: this.state.startDate,\n      //   endDate:this.state.endDate,\n      //   pack: this.state.packType,\n      //   packType: this.state.packTypeitem,\n      //   dataDay: this.state.dataDay,\n      //   dataDayType: this.dataDayType,\n      //   nightDay: this.state.nightDay,\n      //   nightDayType: this.state.nightDayType,\n      //   validityDays: this.state.validityDays,\n      //   validityType: this.state.validityType,\n      //   connectionType: this.state.connectionType,\n      //   displayType: this.state.displayType,\n      //   imageURL: this.state.imageURL,\n      //   description: this.state.description,\n      //   activationStatus: this.state.activationStatus,\n      //   isFtr: this.state.isFtr,\n\n      // };\n\n      if(!this.state.startDate){\n        this.state.startDate = new Date().getTime();\n      }\n\n      if(!this.state.endDate){\n        this.state.endDate = new Date().getTime();\n      }\n\n      let startDatetime = new Date(this.state.startDate).getTime()\n      let endDatetime = new Date(this.state.endDate).getTime()\n      if(startDatetime == endDatetime){\n        Notify.showError(\"Start and end date time should not be same\");\n        return;\n      }\n\n      if(this.state.displayType===\"detailsWithImage\" && !this.state.file){\n        Notify.showError(\"Select the file.\");\n        return;\n      }\n\n      const formData = new FormData();\n\n      if(this.state.displayType===\"detailsWithImage\" && this.state.file){\n        formData.append('file',this.state.file);\n      }\n\n      const id = localStorage.getItem('selectedProductId');\n\n      formData.append('ProductId', id);\n\n      \n      formData.append('amount', this.state.amount);\n      formData.append('displayOrder', this.state.displayOrder);\n      formData.append('startDate',startDatetime);\n      formData.append('endDate', endDatetime);\n      formData.append('pack', this.state.pack);\n      formData.append('packType', this.state.packType);\n      formData.append('dataDay', this.state.dataDay);\n      formData.append('dataDayType', this.state.dataDayType);\n      formData.append('nightDay', this.state.nightDay);\n      formData.append('nightDayType', this.state.nightDayType);\n      formData.append('validityDays', this.state.validityDays);\n      formData.append('validityType', this.state.validityType);\n      formData.append('connectionType', this.state.connectionType);\n      formData.append('displayType', this.state.displayType);\n      formData.append('description', this.state.description);\n      formData.append('activationStatus', this.state.activationStatus);\n      formData.append('comment', this.state.comment);\n      formData.append('isFtr', this.state.ftr);\n     \n      if(this.state.selectedZone.length){\n        formData.append('zones',this.state.selectedZone.length ? this.state.selectedZone : null);\n      }\n     \n\n    // console.log(packs, \"PACKS\");\n      pack.addPack(formData).then(res => {\n        resolveResponse(res, \"Product saved successfully.\");\n        this.props.history.push(\"/packs\");\n      });\n     \n    };\n\n   cancel = (e) => {\n        this.props.history.push('/packs');\n    };\n\n   \n    onChangeHandler = event => {\n        const formData = new FormData();\n        formData.append('file',event.target.files[0]);\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        };\n        //http://125.16.74.160:30611/\n        axios.post(\"/SLRetailer/recharges/uploadRechargeImage\",formData,config)\n            .then((response) => {\n        this.setState({\n            imageURL: response.data.result,\n        });\n            }).catch((error) => {\n                console.log(error,\"ERROR\")\n        });\n       \n      };\n      \n      addPackTpe = value => {\n        \n       // var datatype = ['Anytime (Type MB, GB)', 'Nighttime (Type MB, GB)']; \n        var voicetype = ['Type Rs', 'Minutes', 'Seconds']; \n        var combotype = ['Combo']; \n        var iddsmstype = ['Type Rs', \"SMS\"]; \n\n        var datatype = ['Anytime MB','Anytime GB', 'Nighttime MB', 'Nighttime GB']; \n        \n        if(value == \"Data\"){\n          this.setState({packtypevalue:  datatype, showDescription: false});\n        }else{\n          this.setState({showDescription: true});\n        }\n\n      }\n    \n      onChangePack = e =>  {\n        this.setState({ [e.target.name]: e.target.value });\n        this.addPackTpe(e.target.value); \n    \n      }\n\n\n      onChange = e =>{\n\n        this.setState({ [e.target.name]: e.target.value });\n    \n        if(e.target.name == 'displayType' && e.target.value ==\"detailsWithImage\"){      \n          this.setState({showFileBrowser: true});\n        }\n    \n        if(e.target.name == 'displayType' && e.target.value ==\"details\"){      \n          this.setState({showFileBrowser: false});\n        }\n      } \n\n}\n\nconst styles ={\n\n    formContainer : {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle :{\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    input: {\n        display: 'none'\n    },\n\n    textStyle :{\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    multiselect: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: 3,\n    }\n    , \n    selectStyle:{\n      //  minWidth: '100%',\n        marginBottom: '0px',\n        minWidth: 255,\n        maxWidth: 255,\n  }\n};\n\nconst mapStateToProps=(state)=>{\n   return {pack:state.packs.pack.data};\n}\nexport default connect(mapStateToProps,{editPackInfo,getPackById})(RechargePackAdd);","import React from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CreateIcon from '@material-ui/icons/Create';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport ActivationService from \"../service/ActivationService\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\n\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass BaneerList extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        this.zoneChange = this.zoneChange.bind(this);\n\n        this.state = {\n            products:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All'\n\n        }\n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value});\n\n        if(e.target.value.includes(\"Select All\")){\n            this.setState({selectedZone: this.state.listofzones})\n            this.setState({selectAllzone: \"Remove All\"})\n        }\n    \n        if(e.target.value.includes(\"Remove All\")){\n            this.setState({selectedZone: []})\n            this.setState({selectAllzone: \"Select All\"})\n        }\n\n    }\n\n    componentDidMount() {\n        this.loadBannerList();\n        localStorage.setItem(\"lastUrl\",\"banners\");\n        ActivationService.getStaticData('ADMIN').then(res => {\n            let data = resolveResponse(res);\n            this.setState({listofzones: data.result && data.result.zones}) \n        })\n\n    }\n\n    loadBannerList() {\n\n        var data =  {\n            \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n          }\n\n        AdminService.getAllBanner(data)\n            .then((res) => {\n                let data = resolveResponse(res);\n                console.log(data);\n\n                if(data.result){\n                    this.setState({products: data.result});\n                }\n            });\n        //    var sampledata =  {\"status\":200,\"message\":\"ok\",\"result\":[{\"title\":\"title2\",\"active\":true,\"order\":1,\"bannerType\":\"type1\",\"lob\":\"prepaid\",\"section\":\"one\",\"categoryType\":\"Recharhe\",\"category\":\"bonus\",\"forAndroid\":\"true\",\"forIos\":\"true\",\"forWindows\":\"true\",\"publishDay\":12345678,\"expireDay\":1234566,\"updateTime\":\"1234567\",\"updateBy\":\"mansi\",\"imageURL\":\"http://10.5.200.246:31424/visman//banner/title2_xyz.png\",\"createdOn\":null,\"lastModifiedOn\":null},{\"title\":\"title3\",\"active\":true,\"order\":1,\"bannerType\":\"type1\",\"lob\":\"prepaid\",\"section\":\"one\",\"categoryType\":\"Recharhe\",\"category\":\"bonus\",\"forAndroid\":\"true\",\"forIos\":\"true\",\"forWindows\":\"true\",\"publishDay\":12345678,\"expireDay\":1234566,\"updateTime\":\"1234567\",\"updateBy\":\"mansi\",\"imageURL\":\"http://10.5.200.246:31424/visman/banner/title3_xyz.png\",\"createdOn\":null,\"lastModifiedOn\":null},{\"title\":\"title1\",\"active\":true,\"order\":1,\"bannerType\":\"type1\",\"lob\":\"prepaid\",\"section\":\"one\",\"categoryType\":\"Recharhe\",\"category\":\"bonus\",\"forAndroid\":\"true\",\"forIos\":\"true\",\"forWindows\":\"true\",\"publishDay\":12345678,\"expireDay\":1234566,\"updateTime\":\"1234567\",\"updateBy\":\"mansi\",\"imageURL\":\"http://xyz.com\",\"createdOn\":null,\"lastModifiedOn\":null}]};\n        //    this.setState({products: sampledata.result});\n    }\n\n    addProduct=(e)=> {\n        console.log(this.props)\n        this.props.history.push('/banner-add');\n    }\n\n    editProduct(productId) {\n        window.localStorage.removeItem(\"selectedBannerId\");\n        window.localStorage.setItem(\"selectedBannerId\", productId);\n        this.props.history.push('/banner-edit');\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    dateFormat(date){\n        var d = new Date(date);\n        var fd = d.toLocaleDateString() + ' ' + d.toTimeString().substring(0, d.toTimeString().indexOf(\"GMT\"));\n        return fd;\n    }\n   \n    \n\n    render(){\n        console.log(this.props,\"PROPS\")\n\n       \n      return(\n        <React.Fragment>\n            <PostLoginNavBar/>\n\n\n\n            <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n            <Grid syt  container spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={12} sm={6} >\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                    Banner Details\n                                </Typography> \n                            </Grid>\n                            <Grid item xs={10} sm={3}> \n                                <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                        <Select\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        multiple\n                                        name=\"selectedZone\"\n                                        value={this.state.selectedZone}\n                                        onChange={this.zoneChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        <MenuItem key={this.state.selectAllzone} value={this.state.selectAllzone} >\n                                            <b> {this.state.selectAllzone}   </b>                                         \n                                          </MenuItem>\n                                        {this.state.listofzones ? this.state.listofzones.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                        </Select>\n                                    </FormControl>\n                            </Grid>\n\n                            <Grid item xs={2} sm={1}  > \n                                 {/* InputLabelProps={{ shrink: true }} */}\n                                 <Button type=\"submit\"  onClick={() => this.loadBannerList()} variant=\"contained\"  style={{marginLeft: '20px'}} >Search</Button>\n                            </Grid>\n                            <Grid item xs={2} sm={2} alignItems=\"left\"> \n                            <Button variant=\"contained\" color=\"primary\" onClick={() => this.addProduct()}>\n                                Add Banner\n                            </Button>      \n                            </Grid>\n\n                            \n                </Grid>\n            \n\n            <Table  size=\"small\"   aria-label=\"sticky table\" >\n                <TableHead style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                    <TableRow variant=\"head\">\n                          {/* <TableCell align=\"center\">Edit</TableCell> */}\n\n\n                        <TableCell align=\"center\">Icon</TableCell>\n                        <TableCell align=\"center\">Title</TableCell>\n                        <TableCell align=\"center\">Banner Type</TableCell>\n                        <TableCell align=\"center\">Active</TableCell>\n                        {/* <TableCell align=\"center\">Lob</TableCell> */}\n                        {/* <TableCell align=\"center\">Section</TableCell> */}\n                        <TableCell align=\"center\">Category Type</TableCell>\n                        {/* <TableCell align=\"center\">Category</TableCell> */}\n                        <TableCell align=\"center\">Publish Date</TableCell>\n\n                        <TableCell align=\"center\">Expire Days</TableCell>\n\n                      \n\n                    </TableRow>\n                </TableHead>\n                <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                \n                    {this.state.products && this.state.products ? this.state.products.map(row => (\n                        <TableRow key={row.productId} onClick={() => this.editProduct( row.id)}>\n\n                            <TableCell align=\"center\"> <img style={{width:\"100px\", height:\"50px\"}} src={row.imageURL} /> </TableCell>\n                            <TableCell align=\"center\">{row.title}</TableCell>\n                            <TableCell align=\"center\">{row.bannerType}</TableCell>\n                            <TableCell align=\"center\">{row.active ? 'Active' : \"Inactive\"}</TableCell>\n                            {/* <TableCell align=\"center\">{row.lob}</TableCell> */}\n                            {/* <TableCell align=\"center\">{row.section}</TableCell> */}\n                            <TableCell align=\"center\">{row.categoryType}</TableCell>\n                            {/* <TableCell align=\"center\">{row.category}</TableCell> */}\n                             <TableCell align=\"center\">{row.publishDate ? new Date(row.publishDate).toString().substring(0, 25) : \"\"}</TableCell>\n                            <TableCell align=\"center\">{row.expireDate ? new Date(row.expireDate).toString().substring(0, 25): \"\"}</TableCell>\n\n                            \n                        </TableRow>\n                    )):<Spinner/>}\n                </TableBody>\n            </Table>\n\n            </Paper>\n            </React.Fragment> \n        )\n    }\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    selectStyle:{\n        // minWidth: '100%',\n         marginBottom: '0px',\n          minWidth: 300,\n          maxWidth: 300,\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\n\n//export default connect(mapStateToProps,{setPackLoaded})(BaneerList);\nexport default BaneerList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nexport default function SimpleExpansionPanel(props) {\n  const classes = useStyles();\n\n  var message = props.message; \n\n  console.log(message);\n  // var list =[]; \n   \n\n  // for(var i=0; i < message.length; i++){\n  //   list.push( <p> <ListItem component='a'><ListItemText primary={message[i].laId +' | '+ message[i].reason} /></ListItem></p> );\n\n  // }\n\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>Response</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n        \n\n        <table style={{width: \"none\"}}>\n        <TableHead>\n          <TableRow>\n            <TableCell>LaId</TableCell>\n            <TableCell>Reason</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {message && message.map(row => (\n            <TableRow key={row.name}>\n              <TableCell align=\"right\">{row.laId}</TableCell>\n              <TableCell align=\"right\">{row.reason}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </table>\n           \n           {/* {list} */}\n           {/* <ListItem button component='a' href={\"/#/offerupload\"} >\n            <ListItemText primary=\"Offer Upload\" />\n          </ListItem> */}\n\n         \n         \n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n     \n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Notify from \"../../utils/Notify\";\n\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SearchIcon from '@material-ui/icons/Search';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container } from \"@material-ui/core\";\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Title from './Title';\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nimport ActivationService from \"../service/ActivationService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport SimpleExpansionPanel from './SimpleExpansionPanel';\nimport md5  from 'md5'; \n\nimport  {DEV_PROTJECT_PATH} from \"../../utils/config\";\n\nclass Retailer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            retailerOnboardExcelTemplatePath: \"\",\n            retailerDeleteExcelTemplatePath: \"\",\n            deletefile:'', \n            searchby:'',\n            retailerDetails: '',\n            uploadResponse: '', // [{laId: \"b0208057\", reason : \"Given Laid already created\"},{laId: \"b0208058\", reason : \"Given Laid already created\"}],\n            deleteResponse:\"\"\n\n\n        };\n        this.relailerOnboard = this.relailerOnboard.bind(this);\n        this.relailerDelete = this.relailerDelete.bind(this);\n        this.searchRetailer = this.searchRetailer.bind(this);\n    }\n\n    validateUploadFile = (file) => {\n        const filename = file.name.toString(); \n    \n        if (/[^a-zA-Z0-9\\.\\-\\_ ]/.test(filename)) {\n            Notify.showError(\"File name can contain only alphanumeric characters including space and dots\")\n            return false;\n        }\n    \n        const fileext =  filename.split('.').pop(); \n        console.log(\"File Extension: \",fileext);\n\n        if(fileext == 'xlsx'){\n            var fileSize = file.size / 1000; //in kb\n            if(fileSize >= 5 && fileSize <= 2048){\n              Object.defineProperty(file, 'name', {\n                writable: true,\n                value:  md5(file.name) +\".\"+ fileext\n              });\n              return file;\n            }else{\n              Notify.showError(\"File size should be grater than 5KB and less than 2MB\")\n            }\n        }else {\n          Notify.showError(\"Only xlsx file allow to upload\")\n        }\n        return false;\n      }\n\n\n    onChangeFileUpload = e => {\n        const fileToUpload = this.validateUploadFile(e.target.files[0]);\n\n        if(fileToUpload){\n            console.log(e.target.name);\n            this.setState({[e.target.name]: e.target.files[0]})\n            return;\n        }else{\n            console.log(\"Not Valid file: \",e.target.name); \n            document.getElementById(e.target.name).value = \"\";\n        }\n    }\n\n\n\n\n    onChange = (e) => {\n        this.setState({searchby: e.target.value})\n        // const re = /^[0-9\\b]+$/;\n        // if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n        //     this.setState({searchby: e.target.value})\n        // }\n\n    }\n\n\n\n    componentDidMount() {\n       // this.getAdmminStaticData();\n       ActivationService.getStaticData('ADMIN').then(res => {\n        let data = resolveResponse(res);\n        this.setState({listofzones: data.result && data.result.zones}) \n    })\n    }\n\n    relailerOnboard() {\n    \n        console.log(this.state.uploadfile);\n\n            if(!this.state.uploadfile || document.getElementById('uploadfile').value ==\"\"){\n                Notify.showError(\"Missing required file to upload\");\n                return;\n            }\n\n            var userDetails = localStorage.getItem(\"userDetails\")\n            userDetails = userDetails && JSON.parse(userDetails);\n\n            const formData = new FormData();\n            formData.append('file',this.state.uploadfile);\n           \n        \n            \n            AdminService.uploadRetailer(formData).then(res => {\n          //  resolveResponse(res, \" On-Boarded successfully.\");\n            var data = resolveResponse(res);\n            if(data.status == 200 && data.message == 'ok'){\n                Notify.showSuccess(\"Agent On-Boarded successfully.\");\n\n            }\n\n            document.getElementById('uploadfile').value = \"\";\n            if(data.result && data.result.rejectedAgents){\n                this.setState({ uploadResponse:  data.result.rejectedAgents })\n            }\n        \n        \n            });\n    }\n\n\n    relailerDelete() {\n    \n        if(!this.state.deletefile || document.getElementById('deletefile').value ==\"\"){\n        Notify.showError(\"Missing required file to upload\");\n        return;\n        }\n\n        var userDetails = localStorage.getItem(\"userDetails\")\n        userDetails = userDetails && JSON.parse(userDetails);\n\n        const formData = new FormData();\n        formData.append('file',this.state.deletefile);\n    \n\n        \n        AdminService.deleteRetailer(formData).then(res => {\n        var data = resolveResponse(res,'');\n\n        if(data.status == 200 && data.message == 'ok'){\n            Notify.showSuccess(\"Agent info deleted successfully.\");\n\n        }\n\n        document.getElementById('deletefile').value = \"\"; \n\n        if(data.result && data.result.rejectedAgents){\n            this.setState({ deleteResponse:  data.result.rejectedAgents})\n        }\n       \n\n        });\n    }\n\n    searchRetailer(){\n       \n            if(!this.state.searchby){\n                Notify.showError(\"Type by lapu number or Retailer AirtelId Id \");\n                return;\n            }\n    \n            var userDetails = localStorage.getItem(\"userDetails\")\n            userDetails = userDetails && JSON.parse(userDetails);\n    \n          \n            AdminService.searchRetailer(this.state.searchby).then(res => {\n                var data =resolveResponse(res, \"Retailer On-Boarded successfully.\");\n                    if(data.result){\n                        this.setState({ retailerDetails :  [data.result[0]] })\n                    }\n\n                    console.log(\"retailerDetails\", this.state.retailerDetails); \n                });\n        \n              \n \n    }\n\n   \n\n\n\n\n\n\n    render() {\n\n        return (\n\n            <React.Fragment >\n                <PostLoginNavBar />\n\n\n                \n\n\n\n            <div style={{ padding: \"40px\" }} >\n\n\n                  \n                <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n                \n                <Grid syt  container spacing={24} container\n                    direction=\"row\"\n                    justify=\"right\"\n                    alignItems=\"center\">\n                        <Grid item xs={12} sm={7} >\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            Back Office User Search \n                        </Typography> \n                        </Grid>\n\n                        <Grid item xs={12} sm={3} item alignItems='flex-end'> \n                                <TextField type=\"text\" value={this.state.searchby } label=\"Search User\" style={{ width: \"100%\" }} name=\"searchby\" onChange={this.onChange} />\n                        </Grid>\n                        <Grid item xs={12} sm={2} item alignItems='flex-end'  > \n                            <Button startIcon={<SearchIcon/>} variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={this.searchRetailer} >Search</Button>\n                        </Grid>\n                    </Grid>\n\n\n                    <div style={{padding:\"10px\", overflow:\"auto\", height:\"100px\"}} >\n\n                            <Table size=\"small\"   aria-label=\"sticky table\">\n                                    <TableHead >\n                                        <TableRow style={{width:\"170px\",whiteSpace: \"nowrap\"}}>\n                                            <TableCell align=\"\">User Id</TableCell>\n                                            <TableCell align=\"\">Name </TableCell>\n                                            <TableCell align=\"\">Msisdn</TableCell>\n                                            <TableCell align=\"\">Email</TableCell>\n                                            <TableCell align=\"\">TL ID</TableCell>\n                                            <TableCell align=\"\">TL No.</TableCell>\n                                            <TableCell align=\"\">Manager Id</TableCell>\n                                            <TableCell align=\"\">Manager No.</TableCell>\n                                            <TableCell align=\"\">Role</TableCell>\n                                            <TableCell align=\"\">Department</TableCell>\n                                            <TableCell align=\"\">Remarks</TableCell>\n                                            <TableCell align=\"\">Is Active</TableCell>\n\n\n                                        </TableRow>\n                                    </TableHead>\n\n                                    <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                                        {this.state.retailerDetails ? this.state.retailerDetails.map(row => (\n                                            <TableRow hover   key={row.txnId} >\n                                               \n                                                <TableCell align=\"center\" >{row.laid}</TableCell>\n                                                <TableCell align=\"center\">{row.name}</TableCell>\n                                                <TableCell align=\"center\">{row.msisdn}</TableCell>\n                                                <TableCell align=\"center\">{row.emailId}</TableCell>\n                                                <TableCell align=\"center\">{row.tlId}</TableCell>\n                                                <TableCell align=\"center\">{row.tlNum}</TableCell>\n                                                <TableCell align=\"center\">{row.managerId}</TableCell>\n                                                <TableCell align=\"center\">{row.managerNum}</TableCell>\n                                                <TableCell align=\"center\">{row.role}</TableCell>\n                                                <TableCell align=\"center\">{row.department}</TableCell>\n                                                <TableCell align=\"center\">{row.remarks}</TableCell>\n                                                <TableCell align=\"center\">{row.active ? \"Yes\": \"No\"}</TableCell>\n\n                                                \n                                            </TableRow>\n                                        )):  \"\"}\n                                    </TableBody>\n                                </Table>\n\n                    </div>\n            </Paper>\n\n            <br /><br /> \n                <Paper style={{ padding: \"15px\" }}>\n                    <Title>Back Office On-Boarding </Title>\n                    <Grid container className=\"flexGrow\" spacing={3} style={{ padding: \"10px\" }}>\n                        <Grid item xs={12} sm={3}>\n                            <InputLabel htmlFor=\"Connection Type\" >\n                                <Typography variant=\"subtitle1\">\n                                    {/* <Link color=\"primary\" href={this.state.retailerOnboardExcelTemplatePath}>Download Sample</Link> */}\n                                    <Link color=\"primary\" href={DEV_PROTJECT_PATH+\"/webdata/AgentOnboardingTemplate.xlsx\"}>Download Sample</Link>\n\n                                </Typography>\n                            </InputLabel>\n                        </Grid>\n\n                        <Grid item xs={12} sm={3}>\n                            <Typography variant=\"subtitle1\"> Upload or Update User </Typography>\n                        </Grid>\n\n                        <Grid item xs={12} sm={3}>\n                            <Typography variant=\"subtitle1\">\n\n                            <input\n                                    type=\"file\"\n                                    name=\"uploadfile\"\n                                    id=\"uploadfile\"\n\n                                    // onChange={this.onChangeHandler}\n                                    onChange={this.onChangeFileUpload}\n                                  />\n                            </Typography>\n                        </Grid>\n\n                        <Grid item xs={12} sm={3}>\n                            <Button startIcon={<CloudUploadIcon />}  variant=\"contained\" color=\"primary\" style={{ marginLeft: '20px' }} onClick={this.relailerOnboard}>Upload</Button>\n                        </Grid>\n\n\n                    </Grid>\n\n                    <Grid container className=\"flexGrow\" spacing={3} style={{ padding: \"10px\" }}>\n                        <Grid item xs={12} sm={12}>\n                            <Typography variant=\"subtitle1\"> </Typography>\n                             {this.state.uploadResponse ? <SimpleExpansionPanel message={ this.state.uploadResponse} />: \"\" }\n                            \n                        </Grid>\n\n                    </Grid>\n                </Paper>\n\n            \n\n                \n            \n\n                <br /><br />\n                <Paper style={{ padding: \"15px\" }}>\n                    <Title>Back Office Delete </Title>\n                    <Grid container className=\"flexGrow\" spacing={3} style={{ padding: \"10px\" }}>\n\n\n                        <Grid item xs={12} sm={3}>\n\n                            <InputLabel htmlFor=\"Connection Type\" >\n                                <Typography variant=\"subtitle1\">\n                                    {/* <Link color=\"primary\" href={this.state.retailerDeleteExcelTemplatePath}>Download Delete Sample </Link> */}\n                                    <Link color=\"primary\" href={DEV_PROTJECT_PATH+\"/webdata/AgentDeleteTemplate.xlsx\"}>Download Delete Sample </Link> \n                                </Typography>\n                            </InputLabel>\n\n                        </Grid>\n                        <Grid item xs={12} sm={3}>\n                            <Typography variant=\"subtitle1\">Bulk Delete User</Typography>\n                        </Grid>\n\n                        <Grid item xs={12} sm={3}>\n                            <Typography variant=\"subtitle1\">\n                            <input\n                                    type=\"file\"\n                                    name=\"deletefile\"\n                                    id=\"deletefile\"\n                                    // onChange={this.onChangeHandler}\n                                    onChange={this.onChangeFileUpload}\n                                  />\n                            </Typography>\n                        </Grid>\n\n                        <Grid item xs={12} sm={3}>\n                            <Button startIcon={<DeleteIcon/>} variant=\"contained\" color=\"primary\" style={{ marginLeft: '20px' }} onClick={this.relailerDelete} >Delete</Button>\n                        </Grid>\n\n\n                    </Grid>\n\n                    <Grid container className=\"flexGrow\" spacing={3} style={{ padding: \"10px\" }}>\n                        <Grid item xs={12} sm={12}>\n                            <Typography variant=\"subtitle1\"> </Typography>\n                             {this.state.deleteResponse ? <SimpleExpansionPanel message={this.state.deleteResponse} />: \"\" }\n                            \n                        </Grid>\n\n                    </Grid>\n                </Paper>\n\n        </div>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle: {\n        display: 'flex',\n        justifyContent: 'left'\n    }\n}\n\n\nexport default Retailer;","import React, { useState } from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Notify from \"../../utils/Notify\";\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SearchIcon from '@material-ui/icons/Search';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container } from \"@material-ui/core\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Title from './Title';\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { CRO_API_BASE_URL } from \"../../utils/config\";\nimport { CSVLink } from \"react-csv\";\nimport md5  from 'md5'; \nimport  {DEV_PROTJECT_PATH} from \"../../utils/config\";\n\nclass OfferUpload extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            retailerOnboardExcelTemplatePath: \"\",\n            retailerDeleteExcelTemplatePath: \"\",\n            deletefile:'', \n            searchby:'',\n            retailerDetails: '',\n            allOfferData:\"\"\n\n\n        };\n        this.getAdmminStaticData = this.getAdmminStaticData.bind(this);\n        this.uploadOffer = this.uploadOffer.bind(this);\n        this.relailerDelete = this.relailerDelete.bind(this);\n        this.searchRetailer = this.searchRetailer.bind(this);\n    }\n\n\n    validateUploadFile = (file) => {\n        const filename = file.name.toString(); \n    \n        if (/[^a-zA-Z0-9\\.\\-\\_ ]/.test(filename)) {\n            Notify.showError(\"File name can contain only alphanumeric characters including space and dots\")\n            return false;\n        }\n    \n        const fileext =  filename.split('.').pop(); \n        console.log(\"File Extension: \",fileext);\n\n        if(fileext == 'xlsx'){\n            var fileSize = file.size / 1000; //in kb\n            if(fileSize >= 5 && fileSize <= 2048){\n              Object.defineProperty(file, 'name', {\n                writable: true,\n                value:  md5(file.name) +\".\"+ fileext\n              });\n              \n              return file;\n            }else{\n              Notify.showError(\"File size should be grater than 5KB and less than 2MB\")\n            }\n        }else {\n          Notify.showError(\"Only xlsx file allow to upload\")\n        }\n        return false;\n      }\n\n\n    onChangeFileUpload = e => {\n        const fileToUpload = this.validateUploadFile(e.target.files[0]);\n\n        if(fileToUpload){\n            console.log(e.target.name);\n            this.setState({[e.target.name]: e.target.files[0]})\n            return;\n        }else{\n            console.log(\"Not Valid file: \",e.target.name); \n            document.getElementById(e.target.name).value = \"\";\n        }\n    }\n\n\n\n    onChange = (e) => {\n\n        const re = /^[0-9\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n            this.setState({searchby: e.target.value})\n        }\n\n    }\n\n\n\n    componentDidMount() {\n        this.getAdmminStaticData();\n\n        AdminService.downlaodAllOfferData()\n        .then((res) => {\n            let data = resolveResponse(res);\n            if (data.result)\n                this.setState({ allOfferData: data.result })\n            });\n\n    }\n\n    getAdmminStaticData() {\n\n            AdminService.getStaticData(\"ADMIN\")\n            .then((res) => {\n                let data = resolveResponse(res);\n                if (data.result && data.result)\n                    this.setState({ retailerOnboardExcelTemplatePath: data.result.retailerOnboardExcelTemplatePath, retailerDeleteExcelTemplatePath: data.result.retailerDeleteExcelTemplatePath })\n                });\n    }\n\n\n    uploadOffer() {\n    \n\n        console.log(this.state.uploadfile);\n\n            if(!this.state.uploadfile || document.getElementById('uploadfile').value ==\"\"){\n                Notify.showError(\"Missing required file to upload\");\n                return;\n            }\n\n            // var userDetails = localStorage.getItem(\"userDetails\")\n            // userDetails = userDetails && JSON.parse(userDetails);\n\n            const formData = new FormData();\n            formData.append('file',this.state.uploadfile);\n          //  formData.append('submittedBy',userDetails && userDetails.loginId);\n           // formData.append('email', '');\n        \n            \n            AdminService.uploadOffer(formData).then(data => {\n\n           // var data = resolveResponse(res, \"Offer Uploaded Successfully.\");\n            console.log('datavijay',data);\n            var data = data && data.data;\n            if(data.status == 200){\n                Notify.showSuccess(\"Offer Uploaded Successfully.\");\n            }else{\n                Notify.showError(data.message);\n            }\n          \n            document.getElementById('uploadfile').value = \"\";\n        \n            });\n    }\n\n\n    relailerDelete() {\n    \n        if(!this.state.deletefile || document.getElementById('deletefile').value ==\"\"){\n        Notify.showError(\"Missing required file to upload\");\n        return;\n        }\n\n        var userDetails = localStorage.getItem(\"userDetails\")\n        userDetails = userDetails && JSON.parse(userDetails);\n\n        const formData = new FormData();\n        formData.append('file',this.state.deletefile);\n        formData.append('submittedBy', userDetails && userDetails.loginId);\n        formData.append('email', '');\n    \n        \n        AdminService.deleteRetailer(formData).then(res => {\n        resolveResponse(res,'');\n        Notify.showSuccess(\"Attached retailer info deleted successfully.\");\n        document.getElementById('deletefile').value = \"\"; \n\n        });\n    }\n\n    searchRetailer(){\n       \n            if(!this.state.searchby){\n                Notify.showError(\"Type by lapu number or Retailer AirtelId Id \");\n                return;\n            }\n    \n            var userDetails = localStorage.getItem(\"userDetails\")\n            userDetails = userDetails && JSON.parse(userDetails);\n    \n            const param = {\n                lapuNumber : this.state.searchby, \n                retailerAirtelId: this.state.searchby, \n            }\n        \n            AdminService.searchRetailer(param).then(res => {\n            var data = resolveResponse(res,'');\n           \n                var staticdata = {\n                    \"message\": \"string\",\n                    \"result\": {\n                    \"distributerId\": \"string\",\n                    \"distributerMsisdn\": \"string\",\n                    \"distributerName\": \"string\",\n                    \"district\": \"string\",\n                    \"fseId\": \"string\",\n                    \"fseMsisdn\": \"string\",\n                    \"fseName\": \"string\",\n                    \"retailerAirtelId\": \"string\",\n                    \"retailerName\": \"string\",\n                    \"retailerVLNumber\": \"string\",\n                    \"territory\": \"string\",\n                    \"tmId\": \"string\",\n                    \"tmMsisdn\": \"string\",\n                    \"tmName\": \"string\",\n                    \"zbmId\": \"string\",\n                    \"zbmMsisdn\": \"string\",\n                    \"zbmName\": \"string\",\n                    \"zone\": \"string\"\n                    },\n                    \"status\": 0\n                }\n                \n                if(data.result){\n                    this.setState({ retailerDetails :  [data.result] })\n                }else{\n                   // this.setState({ retailerDetails :  [staticdata.result] })\n                }\n        });\n    }\n\n    addProduct() {\n        this.props.history.push('/add-product');\n    }\n\n    someAction() {\n        alert(\"action happed in other commpornt\");\n    }\n\n\n    editProduct(productId) {\n        console.log(\"productid\", productId)\n\n        window.localStorage.setItem(\"selectedProductId\", productId);\n        this.props.history.push('/edit-doc');\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n\n\n\n\n    render() {\n\n        return (\n\n            <React.Fragment >\n                <PostLoginNavBar />\n\n            <div style={{ padding: \"40px\" }} >\n                <Paper style={{ padding: \"15px\" }}>\n                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                         Customer Offer Upload\n                    </Typography> \n                    <Grid container className=\"flexGrow\" spacing={3} style={{ padding: \"10px\" }}>\n                        <Grid item xs={12} sm={3}>\n                            <InputLabel htmlFor=\"Connection Type\" >\n                                <Typography variant=\"subtitle1\">\n                                    <Link color=\"primary\" href={DEV_PROTJECT_PATH+\"/webdata/Offers.xlsx\"}>Download Sample</Link>\n                                </Typography>\n                            </InputLabel>\n                        </Grid>\n\n                        <Grid item xs={12} sm={3}>\n                            <Typography variant=\"subtitle1\">Upload Offer</Typography>\n                        </Grid>\n\n                        <Grid item xs={12} sm={3}>\n                            <Typography variant=\"subtitle1\">\n\n                            <input\n                                    type=\"file\"\n                                    name=\"uploadfile\"\n                                    id=\"uploadfile\"\n                                    // onChange={this.onChangeHandler}\n                                    onChange={this.onChangeFileUpload}\n                                  />\n                            </Typography>\n                        </Grid>\n\n                        <Grid item xs={12} sm={3}>\n                            <Button startIcon={<CloudUploadIcon />}  variant=\"contained\" color=\"primary\" style={{ marginLeft: '20px' }} onClick={this.uploadOffer}>Upload</Button>\n                        </Grid>\n                    </Grid>\n                </Paper>\n\n                <br />\n\n                <Paper style={{ padding: \"15px\" }}>\n                     <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                         Download Offers Details\n                    </Typography> \n\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                        Total Offers:{this.state.allOfferData.length}\n                    </Typography>\n\n                    {this.state.allOfferData ? \n                        \n                        <CSVLink data={this.state.allOfferData}\n                        filename={\"offers-details.csv\"}\n                        className=\"btn btn-primary\"\n                        target=\"_blank\"\n                        >\n                        <Typography variant=\"subtitle1\"  gutterBottom>\n                            Download Offers\n                        </Typography>\n\n                        </CSVLink> \n                        \n                    :\"\"}\n                </Paper>\n\n        </div>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle: {\n        display: 'flex',\n        justifyContent: 'left'\n    }\n}\n\n\nexport default OfferUpload;","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport UserService from \"../service/UserService\";\nimport LoginNavBar from \"../LoginNavbar\";\nimport {Container} from \"@material-ui/core\";\nimport Notify from \"../../utils/Notify\";\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\n//import AdminWelcome from '../adminwelcome.png';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport ActivationService from \"../service/ActivationService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nimport  {DEV_PROTJECT_PATH} from \"../../utils/config\";\n\n\nclass LoginComponent extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: \"\",\n            password: \"\", \n            isDasable:false,\n            isError:false,\n            \n        };\n        this.login = this.login.bind(this);\n    }\n\n\n    render() {\n        var password = \"U*0elFh:\"; \n\n        return(\n            <React.Fragment>\n                 <PostLoginNavBar/>\n                 <img style={styles.imagestyle} src={DEV_PROTJECT_PATH+\"/webdata/adminwelcome.png\"} />\n            </React.Fragment>\n        )\n\n    }\n\n    componentDidMount() {\n      const token =   window.localStorage.getItem(\"token\"); \n\n    //   if(token){\n    //     const lastUrl = localStorage.getItem(\"lastUrl\"); \n    //     this.props.history.push('/'+lastUrl);\n    //   }\n    ActivationService.getStaticData('ADMIN').then(res => {\n        let data = resolveResponse(res);\n        this.setState({listofzones: data.result && data.result.zones}) \n    })\n\n        \n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n    login = (e) => {\n        e.preventDefault();\n        if(!this.state.userName || !this.state.password){\n            this.setState({ isError: \"Olms Id and password is required.\" });\n\n            // setTimeout(() => {\n            //     this.setState({ isError: \"\" });\n            // }, 3000);\n\n          //  Notify.showError(\"Olms Id and password is required.\");\n            return;\n        }\n         \n        this.setState({ isDasable: true });\n        \n        const loginPayload = {\n            userName:  this.state.userName,\n            password: this.state.password\n        };\n        UserService.login(loginPayload)\n            .then(res => {\n              //  Notify.showError(\"Olms Id and password is required.\");\n            //  alert(JSON.stringify(res));\n\n              \n              this.setState({ isError: res.data.message });\n\n              //  let data = resolveResponse(res);\n                console.log(\"resolveResponse\",data); \n                // if(!data.result)\n                //     Notify.showError(\"Something Went worng...\");\n\n                var data = res.data; \n                this.setState({ isDasable: false });\n\n                // else\n                //     resolveResponse(res, \"Login success.\");\n\n                if(data.result){\n                    window.localStorage.setItem(\"userDetails\",JSON.stringify(data.result));\n                    window.localStorage.setItem(\"token\",data.result.token)\n                }\n               \n                // BO agent : BOA\n                // Data Entry : DE\n                // Admin : ADMIN\n                // Distributor : DIST\n\n                if(data.result && data.result.roleCode == \"BOA\")\n                this.props.history.push('/verify');\n\n                if(data.result && data.result.roleCode == \"DE\")\n                this.props.history.push('/dataentry');\n\n                if(data.result && data.result.roleCode == \"ADMIN\")\n                this.props.history.push('/packs');\n\n                if((data.result && data.result.roleCode== \"DIST\") || (data.result &&  data.result.roleCode== \"FSE\"))\n                this.props.history.push('/distributor');\n                \n            });\n          \n            // setTimeout(() => {\n            //     this.setState({ isError: \"\" });\n            // }, 3000);\n\n\n\n           \n    }\n\n}\n\nconst styles ={\n    formStyle :{\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n    label: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    errorMessage:{\n        color:\"red\",\n        marginTop: '11px'\n    },\n    waitMessage:{\n        color:\"gray\",\n        marginTop: '11px'\n    },\n    imagestyle:{\n        width:\"100%\",\n        height: '100vh'\n    }\n\n}\n\nexport default LoginComponent;","import React, { useState } from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from '@material-ui/core/TextField';\nimport Notify from \"../../utils/Notify\";\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\n\nimport Grid from '@material-ui/core/Grid';\n\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container } from \"@material-ui/core\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\n\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport $ from 'jquery'; \n\n\nconst handleChangePage = (event, newPage) => {\n    //  this.setPage(newPage);\n};\n\nconst handleChangeRowsPerPage = event => {\n\n    // this.setRowsPerPage(parseInt(event.target.value, 10));\n    // this.setPage(0);\n};\n\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nclass RoleManagement extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            searchedproducts: '',\n            searchby: '',\n            listofzones: [],\n            selectedReasons: {},\n            selectedZone: [],\n            zone: '',\n            addNewEnable:false,\n            roleName:\"\",\n            roleDetails:\"\",\n            selectedRole:false\n        };\n        this.loadProductList = this.loadProductList.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.zoneChange = this.zoneChange.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.addRole = this.addRole.bind(this);\n        this.showRoleDetails = this.showRoleDetails.bind(this);\n\n        \n\n        this.deleteNewRole = this.deleteNewRole.bind(this);\n        this.deleteRole = this.deleteRole.bind(this);\n\n        \n\n\n    }\n\n    componentDidMount() {\n      //  this.loadProductList(\"\");\n        localStorage.setItem(\"lastUrl\", \"role\");\n\n       // var roles = {\"status\":200,\"message\":\"ok\",\"result\":[{\"id\":15,\"role\":\"ADMIN\"},{\"id\":16,\"role\":\"BOA\"},{\"id\":1,\"role\":\"CEO\"},{\"id\":8,\"role\":\"CP\"},{\"id\":11,\"role\":\"CSM\"},{\"id\":14,\"role\":\"DE\"},{\"id\":5,\"role\":\"DIST\"},{\"id\":10,\"role\":\"DSA\"},{\"id\":12,\"role\":\"DTH Sales Head\"},{\"id\":9,\"role\":\"FSE\"},{\"id\":6,\"role\":\"RET\"},{\"id\":7,\"role\":\"SMH\"},{\"id\":4,\"role\":\"TM\"},{\"id\":2,\"role\":\"ZBM\"},{\"id\":3,\"role\":\"ZSM\"}]}; \n       // this.setState({ searchedproducts: roles && roles.result })\n\n        AdminService.getListOfRoles().then(res => {\n            let data = resolveResponse(res);\n            this.setState({ searchedproducts: data && data.result })\n        })\n\n     \n    }\n   \n\n    showRoleDetails(id){\n        $(\"#tableId .rolesRow\").css(\"background-color\", \"\"); \n        document.getElementById('roleId'+id).style.backgroundColor = \"lightgray\"; \n        \n\n        AdminService.getRoleDetails(id).then(res => {\n            let data = resolveResponse(res);\n            this.setState({ roleDetails: data && data.result && data.result.authorites })\n           // this.setState({ selectedRole: true })\n        })\n\n    }\n\n    searchOnDB(mobileNumber) {\n\n     //   this.loadProductList(mobileNumber);\n\n        // AdminService.searchMobileNo(mobileNumber).then(res => {\n        //     let data = resolveResponse(res);\n        //     const selectedProduct = data.result;            \n\n        //     if(selectedProduct && selectedProduct.transactionId){\n        //         window.localStorage.setItem(\"selectedProductId\", selectedProduct.transactionId);\n        //         //window.localStorage.setItem(\"selectedSim\", '');\n\n        //         this.props.history.push('/verify-edit');\n        //         // this.setState({\n        //         //     });\n        //     }\n        //     // else{\n        //     //     Notify.showError(\"Not Found or already processed\");\n        //     // }\n\n        // })\n    }\n\n\n    loadProductList(mobileNumber) {\n\n\n        var d = new Date();\n        var endTime = d.getTime();\n\n        var startTime = endTime - 172800000;\n\n        var data = {\n            \"endDate\": endTime,\n            \"mobileNumber\": mobileNumber ? mobileNumber : null,\n            \"noOfRecords\": 20,\n            \"role\": \"BOA\",\n            \"startDate\": 0,\n            \"txnId\": 0,\n            \"type\": \"next\",\n            \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n        }\n\n        document.getElementById('showMessage').innerHTML = \"Please Wait Loading...\";\n\n        AdminService.listDocs(data)\n            .then((res) => {\n                let data = resolveResponse(res);\n                var activationList = data && data.result && data.result.activationList;\n                this.setState({ products: activationList })\n\n\n\n                //this.setState({searchedproducts: activationList})\n                var roles = [\"Data Entry\", \"BO Agent\", \"Distributor\", \"FSE\"];\n\n                this.setState({ searchedproducts: roles })\n\n                var listingIds = activationList && activationList.map(function (val, index) {\n                    return val.txnId\n                });\n\n                if (document.getElementById('showMessage')) {\n                    if (activationList == null) {\n                        document.getElementById('showMessage').innerHTML = \"No new documents for verification\";\n                    } else {\n                        document.getElementById('showMessage').innerHTML = \"\";\n                    }\n                }\n\n                localStorage.setItem(\"verifyListingTxn\", listingIds);\n            });\n\n    \n\n    }\n\n    onChange = (e) => {\n\n    this.setState({ [e.target.name]: e.target.value })\n\n        // const re = /^[0-9\\b]+$/;\n        // if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n        //     this.setState({ searchby: e.target.value })\n        // }\n\n    }\n\n    zoneChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    addRole() {\n        this.setState({ addNewEnable: true }) \n    }\n\n    deleteNewRole(){\n        this.setState({ addNewEnable: false }) \n        this.setState({ roleName: \"\" }) \n\n\n    }\n\n    deleteRole(){\n\n        window.confirm(\"Please confirm if you want to delete the role?\"); \n        return;\n    }\n\n    someAction() {\n        alert(\"action happed in other commpornt\");\n    }\n\n\n\n\n    editProduct(productId, sim) {\n        console.log(\"productid, row.sim\", productId, sim)\n\n        window.localStorage.setItem(\"selectedProductId\", productId);\n        window.localStorage.setItem(\"selectedSim\", sim);\n\n        this.props.history.push('/verify-edit');\n\n        // this.props.history.push({\n        //     pathname: '/edit-doc',\n        //     search: '?query=abc',\n        //     state: { rowdata: productId }\n        //   })\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n\n    handleChange = obj => event => {\n\n        console.log(\"objid1\", event.target.checked); \n        var roleDetails = this.state.roleDetails;\n        for (var i = 0; i < roleDetails.length; i++) {\n            // if(roleDetails[i].id == obj.id && obj.alreadyAssigned == false) {\n            //     roleDetails[i].alreadyAssigned = true; \n            // }else if(roleDetails[i].id == obj.id && obj.alreadyAssigned == true) {\n            //     roleDetails[i].alreadyAssigned = false; \n            // }\n\n            if(roleDetails[i].id == obj.id)\n            roleDetails[i].alreadyAssigned =   event.target.checked\n        }\n        this.setState({ roleDetails: roleDetails }) \n\n        //this.setState({ ...this.state, roleDetails : {...this.state.roleDetails, [obj.alreadyAssigned]: event.target.checked } });\n        console.log(this.state.roleDetails); \n\n\n    };\n\n\n    render() {\n\n      //onChange={this.handleChange(roleDetails[i].authority)} \n\n        var roleDetails = this.state.roleDetails;\n        var authorites = [];\n        for (var i = 0; i < roleDetails.length; i++) {\n            authorites.push(<label><ListItem onChange={this.handleChange(roleDetails[i])} button> <input type=\"checkbox\"  \n            checked={roleDetails[i].alreadyAssigned} /> {roleDetails[i].authority} </ListItem></label>)\n\n        }\n\n\n\n        return (\n\n            <React.Fragment>\n                <PostLoginNavBar />\n\n                <Paper style={{ padding: \"10px\", overflow: \"auto\" }} >\n\n                    <Grid container spacing={3} direction=\"row\" alignItems=\"center\" container>\n\n                        <Grid item xs={12} sm={9} >\n                            <Typography variant=\"h6\" color=\"primary\" gutterBottom>\n                                Role Management\n                                </Typography>\n                        </Grid>\n                        {/* <Grid item xs={10} sm={3}> \n                                <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                        <Select\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        multiple\n                                        name=\"selectedZone\"\n                                        value={this.state.selectedZone}\n                                        onChange={this.zoneChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        {this.state.listofzones ? this.state.listofzones.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                        </Select>\n                                    </FormControl>\n                            </Grid> */}\n\n                        {/* <Grid item xs={2} sm={2}  > \n                                <TextField  value={this.state.searchby}  label=\"Search by Mobile No.\"  style={{width:\"100%\"}} name=\"Search by Mobile No.\" name=\"searchby\" onChange={this.onChange} />\n                            </Grid> */}\n                        {/* <Grid item xs={3} sm={3} alignItems=\"left\">\n                            <Button type=\"submit\" onClick={() => this.searchOnDB(this.state.searchby)} variant=\"contained\" style={{ marginLeft: '20px' }} >Add New</Button>\n                        </Grid> */}\n\n                    </Grid>\n\n\n                        {/* <Container  > */}\n                        {/* <EnhancedTable products={this.state.products}/> */}\n\n                        {/* <StickyHeadTable products={this.state.products} someAction={this.someAction}/>\n                     */}\n\n\n                        {/* <Typography variant=\"h5\" style={styles.tableStyle}>&nbsp;Document Verification</Typography> */}\n                        {/* <Button variant=\"contained\" color=\"primary\" onClick={() => this.addProduct()}>\n                        Add Product\n                    </Button> */}\n\n                        {/* style={{whiteSpace: \"nowrap\"}}   stickyHeader aria-label=\"sticky table\"*/}\n                        <Paper style={{ padding: \"10px\", overflow: \"auto\" }} >\n\n                            <Grid container spacing={3} direction=\"row\" alignItems=\"center\" container>\n\n\n                                <Grid item xs={12} sm={6} >\n                                <div style={{ padding: \"10px\", overflow: \"auto\", height: \"400px\" }} >\n\n\n                                    <Table id=\"tableId\" size=\"small\" aria-label=\"sticky table\">\n                                        <TableHead >\n                                            <TableRow style={{ width: \"170px\", whiteSpace: \"nowrap\" }}>\n                                                {/* <TableCell align=\"\">View</TableCell> */}\n                                                <TableCell> \n                                                    <Typography color=\"primary\" gutterBottom>\n                                                        Role Name\n                                                    </Typography>\n                                                </TableCell>\n\n                                                <TableCell> \n                                                    <Typography color=\"primary\" gutterBottom>\n                                                        Delete\n                                                    </Typography>\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody style={{ whiteSpace: \"nowrap\" }}>\n                                            {this.state.searchedproducts ? this.state.searchedproducts.map(row => (\n                                                <TableRow id={\"roleId\"+row.id} className='rolesRow'  key={row.txnId} >\n                                                   \n                                                   <TableCell    onClick={() => this.showRoleDetails(row.id)}  component=\"th\" scope=\"row\" className=\"hidden\">\n                                                        <ListItem  button>{row.role} </ListItem>\n                                                    </TableCell>\n                                                   \n                                                   \n                                                    <TableCell component=\"th\" scope=\"row\" className=\"hidden\">\n                                                        <Button onClick={() => this.deleteRole()} variant=\"contained\" style={{marginTop: \"12px\", marginLeft: \"5px\"}} size=\"small\" color=\"secondary\"> <DeleteForeverIcon/></Button> \n                                                    </TableCell>\n\n                                                </TableRow>\n                                            )) : \"\"}\n                                        </TableBody>\n                                    </Table>\n                                    </div>\n                                    {this.state.addNewEnable ? \n                                    <>\n                                    <TextField label=\"Add New Role\" style={{width: \"525px\"}}  name=\"roleName\" value={this.state.roleName} onChange={this.onChange}/>\n                                    <Button onClick={() => this.deleteNewRole()} variant=\"contained\" style={{marginTop: \"12px\", marginLeft: \"5px\"}} size=\"small\" color=\"secondary\">Delete</Button> </>\n                                    : \"\"}\n                                    \n                                </Grid>\n\n                                <Grid item xs={12} sm={6} >\n                                    <Typography color=\"primary\" gutterBottom>\n                                        Privileges\n                            </Typography>\n                                    {authorites}\n                                </Grid>\n\n\n                            </Grid>\n\n                            \n                        {/* <br />\n                            <Divider /> <br /> */}\n                            <Grid container spacing={3} direction=\"row\" alignItems=\"center\" container>\n                           \n\n                                <Grid item xs={12} sm={6} >\n\n                                    <Button onClick={() => this.addRole()} variant=\"contained\" color=\"default\"  style={{ marginLeft: '20px' }} >Add New Role</Button>\n\n                                </Grid>\n\n                                <Grid item xs={12} sm={6} >\n                                    <Button variant=\"contained\" color=\"primary\" style={{ marginLeft: '20px' }} >Update</Button>\n\n\n                                </Grid>\n                            </Grid>\n\n\n\n\n                        </Paper>\n\n\n\n\n                        <div style={{ color: \"gray\", fontSize: \"15px\", textAlign: \"center\" }}> <br /> <span id=\"showMessage\"> </span></div>\n\n                        {/* </Container> */}\n\n              \n\n                </Paper>\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle: {\n        display: 'flex',\n        justifyContent: 'left'\n    },\n    tableRow: {\n        hover: {\n            \"&:hover\": {\n                background: 'green !important',\n            },\n        },\n\n    },\n\n    selectStyle: {\n        // minWidth: '100%',\n        marginBottom: '0px',\n        minWidth: 340,\n        maxWidth: 340,\n    }\n}\n\n\n\nexport default RoleManagement;","import React, { useState } from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Notify from \"../../utils/Notify\";\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SearchIcon from '@material-ui/icons/Search';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container } from \"@material-ui/core\";\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Title from './Title';\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nimport ActivationService from \"../service/ActivationService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport SimpleExpansionPanel from './SimpleExpansionPanel';\n\nclass CurrentMSISDNStatus extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            retailerOnboardExcelTemplatePath: \"\",\n            retailerDeleteExcelTemplatePath: \"\",\n            deletefile:'', \n            searchby:'',\n            msisdnDetails: '',\n            uploadResponse: '', // [{laId: \"b0208057\", reason : \"Given Laid already created\"},{laId: \"b0208058\", reason : \"Given Laid already created\"}],\n            deleteResponse:\"\"\n\n\n        };\n       \n        this.searchRetailer = this.searchRetailer.bind(this);\n    }\n\n  \n\n\n\n    onChange = (e) => {\n       // this.setState({searchby: e.target.value})\n        const re = /^[0-9\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n            this.setState({searchby: e.target.value})\n        }\n\n    }\n\n\n\n    componentDidMount() {\n       // this.getAdmminStaticData();\n    //    ActivationService.getStaticData('ADMIN').then(res => {\n    //     let data = resolveResponse(res);\n    //     this.setState({listofzones: data.result && data.result.zones}) \n    // })\n    }\n\n   \n    searchRetailer(){\n       \n            if(!this.state.searchby){\n                Notify.showError(\"Type MSISDN\");\n                return;\n            }\n    \n            var userDetails = localStorage.getItem(\"userDetails\")\n            userDetails = userDetails && JSON.parse(userDetails);\n    \n            AdminService.searchMSISDN(this.state.searchby).then(res => {\n                var data =resolveResponse(res, \"\");\n\n                    if(data.status===401){\n                        localStorage.clear();\n                        this.props.history.push(\"/login\");\n                        return;\n                    }\n\n                    if(data.result && data.result.data){\n                        this.setState({ msisdnDetails :  data.result.data })\n                    }else{\n                       // Notify.showError(\"No Such MSISDN found\"); \n                        this.setState({ msisdnDetails :  [] })\n                    }\n\n                });\n        \n              \n \n    }\n\n   \n\n\n\n\n\n\n    render() {\n\n        return (\n\n            <React.Fragment >\n                <PostLoginNavBar />\n\n\n                \n\n\n\n            <div style={{ padding: \"20px\" }} >\n\n\n                  \n                <Paper style={{padding:\"15px\", position:\"fixed\", width:\"97%\"}} >\n                \n                    <Grid syt  container spacing={24} container\n                    direction=\"row\"\n                    justify=\"right\"\n                    alignItems=\"center\">\n                        <Grid item xs={12} sm={8} >\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                          {/* Current Status of MSISDN Search   */}\n                          MSISDN Record History  - Search\n                        </Typography> \n                        </Grid>\n\n                        <Grid item xs={12} sm={2} item > \n                                <TextField type=\"text\" value={this.state.searchby } label=\" Search MSISDN \" style={{ width: \"100%\" }} name=\"searchby\" onChange={this.onChange} />\n                        </Grid>\n                        <Grid item xs={12} sm={2} item style={{textAlign:\"left\"}} > \n                            <Button startIcon={<SearchIcon/>} variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={this.searchRetailer} >Search</Button>\n                        </Grid>\n                    </Grid>\n\n                 </Paper>\n                        \n\n                {/* <Paper style={{padding:\"20px\", marginTop: '100px'}} > */}\n                <Table style={{marginTop: '100px'}}  aria-label=\"sticky table\">\n                        <TableHead >\n                            <TableRow style={{width:\"170px\",whiteSpace: \"nowrap\"}}>\n                                <TableCell align=\"\">Zone </TableCell>\n                                <TableCell align=\"\">MSISDN</TableCell>\n                                <TableCell align=\"\">NIC No.</TableCell>\n                                <TableCell align=\"\">Sim No.</TableCell>\n                                <TableCell align=\"\">FTA Date</TableCell>\n                                <TableCell align=\"\">Submit Date</TableCell>\n                                <TableCell align=\"\">Resubmit Date</TableCell>\n                               \n                                <TableCell align=\"\">Verification Date</TableCell>\n                                <TableCell align=\"\">Data Entered Date</TableCell>\n                                <TableCell align=\"\">Omni Transfer Date</TableCell>\n                                <TableCell align=\"\">Verify By</TableCell>\n                                <TableCell align=\"\">Verifiy Comment</TableCell>\n                                <TableCell align=\"\">Verification Status</TableCell>\n                                <TableCell align=\"\">Data Entered By</TableCell>\n                                <TableCell align=\"\">Distributor Name</TableCell>\n                                <TableCell align=\"\">Distributor Number</TableCell>\n                                <TableCell align=\"\">Retailer Number</TableCell>\n                                <TableCell align=\"\">Omni Status</TableCell>\n                                <TableCell align=\"\">Image Count </TableCell>\n                                <TableCell align=\"\">Ref Number </TableCell>\n                                \n                            </TableRow>\n                        </TableHead>\n\n                        <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                            {this.state.msisdnDetails ? this.state.msisdnDetails.map(row => (\n                                <TableRow hover   key={row.txnId} >\n                                    <TableCell align=\"center\">{row.zone}</TableCell> \n                                    <TableCell align=\"center\" >{row.msisdnNumber}</TableCell>\n                                    <TableCell align=\"center\">{row.nicNumber}</TableCell>\n                                    <TableCell align=\"center\">{row.simNumber}</TableCell>\n                                    <TableCell align=\"center\">{row.ftaDate}</TableCell>\n                                    <TableCell align=\"center\">{row.submitDate}</TableCell>\n                                    <TableCell align=\"center\">{row.resubmitDate}</TableCell>\n                                    <TableCell align=\"center\">{row.verificationDate}</TableCell>\n                                    <TableCell align=\"center\">{row.dataEnteredDate}</TableCell>\n\n                                    <TableCell align=\"center\">{row.omniTransferDate}</TableCell>\n                                    <TableCell align=\"center\">{row.verifyBy}</TableCell>\n                                    <TableCell align=\"center\">{row.verifiyComment}</TableCell>\n                                    <TableCell align=\"center\">{row.verificationStatus}</TableCell>\n                                    <TableCell align=\"center\">{row.dataEnteredBy}</TableCell>\n                                    <TableCell align=\"center\">{row.distributorName}</TableCell>\n                                    <TableCell align=\"center\">{row.distributorNumber}</TableCell>\n                                    <TableCell align=\"center\">{row.retailerNumber}</TableCell>\n                                    <TableCell align=\"center\">{row.omniStatus}</TableCell>\n                                    <TableCell align=\"center\">{row.imageCount}</TableCell>\n                                    <TableCell align=\"center\">{row.refNumber}</TableCell>\n\n                                </TableRow>\n                            )):  \"\"}\n                        </TableBody>\n                    </Table>\n\n                          {/* </Paper>  */}\n                          \n                          \n                           {/* {this.state.msisdnDetails ? this.state.msisdnDetails.map(row => (\n                               <>  <br />\n                              <Paper style={{padding:\"20px\"}} >\n                                <Grid syt  container spacing={2} container\n                                    direction=\"row\"\n                                    justify=\"right\"\n                                    alignItems=\"center\">\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Zone\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.zone} />  \n                                        </Grid>\n                         \n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"MSISDN\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.msisdnNumber} />  \n                                        </Grid>\n\n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"NIC Number\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.nicNumber} />  \n                                        </Grid>\n                                    \n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Sim Number\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.simNumber} />  \n                                        </Grid>\n                                        \n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"FTA Date\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.ftaDate} />  \n                                        </Grid>\n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Submit Date\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.submitDate} />  \n                                        </Grid>\n\n\n                                       \n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Verification Date\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.verificationDate} />  \n                                        </Grid>\n\n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Data Entered Date\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.dataEnteredDate} />  \n                                        </Grid>\n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Resubmit Date\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.resubmitDate} />  \n                                        </Grid>\n\n                                      \n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Omni Transfer Date\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.omniTransferDate} />  \n                                        </Grid>\n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Verify By\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.verifyBy} />  \n                                        </Grid>\n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Verifiy Comment\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.verifiyComment} />  \n                                        </Grid>\n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Verification Status\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.verificationStatus } />  \n                                        </Grid>\n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Data Entered By\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.dataEnteredBy } />  \n                                        </Grid>\n                                        \n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Distributor Name\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.distributorName } />  \n                                        </Grid>\n\n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Distributor Number\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.distributorNumber } />  \n                                        </Grid>\n\n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Retailer Number\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.retailerNumber } />  \n                                        </Grid>\n\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Omni Status\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.omniStatus } />  \n                                        </Grid>\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Image Count\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.imageCount } />  \n                                        </Grid>\n                                        <Grid item xs={12} sm={3} >\n                                            <Typography variant=\"body2\"  color =\"primary\">                                       \n                                                <ListItemText primary={\"Ref Number\"} />\n                                            </Typography> \n                                            <ListItemText primary={row.refNumber } />  \n                                        </Grid>\n                                    </Grid>\n\n                                </Paper>\n                                </>\n                                \n                            )):  \"\"} */}\n\n                                \n                    </div>\n            {/* </Paper> */}\n\n        \n\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle: {\n        display: 'flex',\n        justifyContent: 'left'\n    }\n}\n\n\nexport default CurrentMSISDNStatus;","import { HashRouter as Router, Route, Switch , Redirect} from 'react-router-dom'\nimport React from \"react\";\nimport LoginComponent from \"./login/LoginComponent\";\n\nimport Report from \"./report/Report\";\nimport TestReport from \"./report/TestReport\";\n\n//Baneer \nimport BannerAdd from \"./banner/BannerAdd\";\nimport BannerEdit from \"./banner/BannerEdit\";\n\nimport VerifyList from './verify/VerifyList';\nimport ResubmitVerify from './verify/ResubmitVerify';\n\nimport VerifyEdit from './verify/VerifyEdit';\n//data entry\nimport DataEntryList from './dataentry/DataEntryList';\nimport ResubmitDataEntryList from './dataentry/ResubmitDataEntryList';\n\n\nimport DataEntryEdit from './dataentry/DataEntryEdit';\n//Distributer\nimport DistributerList from './distributer/DistributerList';\nimport DistResubmit from './distributer/DistResubmit';\n\n\n//Admin\nimport RechargePack from \"./pack/RechargePack\";\nimport RechargePackAdd from \"./pack/RechargePackAdd\";\nimport RechargePackEdit from \"./pack/RechargePackEdit\";\nimport BaneerList from './banner/BannerList';\nimport BackOffice from './backoffice/BackOffice';\nimport OfferUpload from './backoffice/OfferUpload';\nimport AdminWelcome from './login/AdminWelcome';\nimport RoleManagement from './login/RoleManagement';\n\nimport CurrentMSISDNStatus from './backoffice/CurrentMSISDNStatus';\n\n\n\nconst AppRouter = () => {\n\n    return(\n        <React.Fragment>\n            <Router>\n                <Switch>\n                    <Route path=\"/\" exact component={LoginComponent}/>\n                    <Route path=\"/login\" component={LoginComponent} />\n\n                    <Route path=\"/verify\" component={VerifyList} />\n                    <Route path=\"/resubmit-verify\" component={ResubmitVerify} />\n                    <Route path=\"/verify-edit\" component={VerifyEdit} />\n\n                    <Route path=\"/dataentry\" component={DataEntryList} />\n                    <Route path=\"/resubmit-dataentry\" component={ResubmitDataEntryList} />\n\n                    <Route path=\"/data-edit\" replace component={DataEntryEdit} />\n\n                    <Route path=\"/distributor\" component={DistributerList} />\n                    <Route path=\"/dist-resubmit\" component={DistResubmit} />\n\n                    \n\n                    {/* admin dashboard */}\n                    <Route path=\"/banners\" component={BaneerList} />\n                    <Route path=\"/banner-add\" component={BannerAdd} />\n                    <Route path=\"/banner-edit\" component={BannerEdit} />\n\n                    <Route path=\"/packs\" component={RechargePack} />\n                    <Route path=\"/pack-add\" component={RechargePackAdd} />\n                    <Route path=\"/pack-edit\" component={RechargePackEdit} />\n                    \n                    <Route path=\"/backoffice\" component={BackOffice} />\n                    <Route path=\"/offerupload\" component={OfferUpload} />\n\n                    <Route path=\"/report\" component={Report} />\n                    <Route path=\"/welcome\" component={AdminWelcome} />\n\n                    <Route path=\"/role\" component={RoleManagement} />\n\n                    <Route path=\"/msisdn-status\" component={CurrentMSISDNStatus} />\n                    \n                    {/* <Route path=\"/testreport\" component={TestReport} /> */}\n\n                    <Route path=\"*\" component={LoginComponent} />\n\n\n\n\n                    {/* <Route render={() => <Redirect to={{pathname: \"/\"}} />} /> */}\n                    \n                </Switch>\n            </Router>\n        </React.Fragment>\n    )\n}\n\nexport default AppRouter;","import React from 'react';\nimport './App.css';\nimport AppRouter from \"./components/RouterComponent\";\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n//import LoginComponent from \"./login/LoginComponent\";\n\nimport LoginComponent from \"./components/login/LoginComponent\";\n\n\n\nfunction App() {\n  const token = window.localStorage.getItem(\"token\"); \n\n  // if(!token){\n  //    window.location.replace(window.location.pathname + \"/#/login\");  \n  // }\n\n  return (\n    <React.Fragment>\n        <AppRouter/>\n        <ToastContainer/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./createStore\";\nimport App from \"./App\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);"],"sourceRoot":""}