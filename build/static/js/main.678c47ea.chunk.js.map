{"version":3,"sources":["reducer/packReducer.js","reducer/index.js","action/types.js","createStore.js","components/service/AuthService.js","utils/config.js","components/service/StoreService.js","components/LoginNavbar.js","utils/Notify.js","utils/ResponseHandler.js","components/login/LoginComponent.js","components/service/AdminService.js","components/service/ActivationService.js","components/report/Title.js","components/LeftMenuBar.js","components/PostLoginNavbar.js","components/report/MaterialUIPickers.js","components/report/Report.js","components/expriment/Chart.js","components/expriment/Deposits.js","components/expriment/Orders.js","components/expriment/StickyHeadTable.js","components/service/ProductService.js","components/expriment/ListProductComponent.js","components/expriment/SimpleAction.js","components/expriment/VerifyDocs.js","components/service/RetailerAdminService.js","api.js","components/rechargepack/RechargePack.js","action/index.js","components/service/PackService.js","utils/MaterialUIPickers.js","components/rechargepack/RechargePackAdd.js","components/banner/BannerAdd.js","components/banner/BannerEdit.js","components/rechargepack/EditRechargePack.js","components/verify/StickyHeadTable.js","components/verify/EnhancedTable.js","components/verify/VerifyList.js","components/verify/RecipeReviewCard.js","components/verify/ImageGalary.js","components/verify/ImageGalaryPEF.js","utils/SlideShowGalary.js","components/verify/VerifyEdit.js","components/dataentry/Hooks.js","components/dataentry/EnhancedTable.js","components/dataentry/DataEntryList.js","components/dataentry/PaperSheet.js","components/dataentry/Zoom.js","components/dataentry/CheckboxList.js","components/dataentry/MaterialUIPickers.js","components/dataentry/RecipeReviewCard.js","components/dataentry/ImageGalary.js","components/dataentry/TitlebarGridList.js","components/dataentry/DataEntryEdit.js","components/distributer/DistributerList.js","components/banner/BannerList.js","components/banner/BaneerListAdd.js","components/backoffice/Title.js","components/backoffice/SimpleExpansionPanel.js","components/backoffice/BackOffice.js","components/backoffice/OfferUpload.js","components/login/AdminWelcome.js","components/login/RoleManagement.js","components/expriment/Test.js","components/RouterComponent.js","App.js","index.js","components/airtellogo.png"],"names":["INTIAL_STATE","packs","pack","updatedPack","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","service_AuthService","localStorage","getItem","headers","Authorization","baseUrl","PRODUCT_API_BASE_URL","PORTAL_STORE_API_BASE_URL","STORE_API_BASE_URL","RETAILER_API_BASE_URL","location","hostname","RETAILER_REPORT_BASEAPI","SL_AD_LOGIN_URL","SL_AD_LOGOUT_URL","RECHARGE_PACK_LISTING","VERIFY_DOCS_LISTING","SAVE_PACK","UPLAOD_PACK_IMAGE","BASE_URL","GET_ALL_BANNERS_DETAILS","SAVE_BANNER","UPDATE_BANNER","UPLOAD_IMG_BANNER","GET_ONE_BANNER","SEARCH_BY_MOBILE_NO","VERIFICATION_STATIC_DATA","VERIFY_DOCS_APPROVE","VERIFY_DETAILS","DATAENTRY_DETAILS","SAVE_DATAENTRY_DETAILS","DISTRIBUTER_SEARCH","DISTRIBUTER_UPLOAD","UNLOCK_SKIP_VERIFICATION","RETAILER_ONBOARD","RETAILER_DELETE","RETAILER_SEARCH","TESTAPI","service_StoreService","credentials","key","axios","post","get","AuthService","getHeader","storeId","attendance","CIRCLE_API_BASE_URL","style","flexGrow","LoginNavBar","props","react_default","a","createElement","Fragment","AppBar","position","Toolbar","width","src","AirtellLogo","Typography","variant","utils_Notify","msg","toast","error","this","options","success","warn","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","resolveResponse","response","data","status","console","log","clear","Promise","reject","replace","message","Notify","showError","LoginComponent","require","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","name","value","trim","login","preventDefault","userName","password","isDasable","keynum","Math","floor","random","atualkey","toString","substring","encryptedPass","CryptoJS","AES","encrypt","loginPayload","storeService","then","res","isError","result","setItem","JSON","stringify","token","roleCode","history","push","bind","assertThisInitialized","LoginNavbar","Container","maxWidth","styles","label","formStyle","TextField","required","fullWidth","margin","Grid","item","xs","sm","Button","disabled","color","onClick","InputLabel","waitMessage","errorMessage","lastUrl","React","Component","display","flexFlow","justifyContent","marginTop","service_AdminService","role","amsConstant","formData","lapuNumber","api","service_ActivationService","productId","postdata","product","mobile","delete","object","mobileNumber","simNumber","Title","component","gutterBottom","children","BOAMenuList","ListItem","href","button","ListItemIcon","VerifiedUser_default","ListItemText","primary","AdminMenuList","Layers_default","People_default","Assignment_default","BarChart_default","DISTMenuList","CloudUpload_default","DEMenuList","Edit_default","LogoutMenu","react_router_dom","textDecoration","logout","PowerSettingsNew_default","useStyles","makeStyles","theme","root","endMenu","flexDirection","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","concat","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","content","contentShift","PostLoginNavBar","classes","useTheme","_React$useState","useState","_React$useState2","slicedToArray","open","setOpen","userDetails","parse","className","CssBaseline","clsx","IconButton","aria-label","edge","Menu_default","noWrap","direction","container","paddingLeft","paddingRight","alignContent","justify","textAlign","loginName","toUpperCase","Drawer","anchor","paper","ChevronLeft_default","ChevronRight_default","Divider","List","Menu","MaterialUIPickers","Date","selectedStartDate","setSelectedStartDate","_React$useState3","_React$useState4","selectedEndDate","setSelectedEndDate","dateObj","requiredDate","setMonth","getMonth","currDate","back18Month","useUtils_cfb96ac9","utils","DateFnsUtils","DatePicker","disableFuture","allowKeyboardControl","minDate","minDateMessage","id","format","date","callbackFromParent","myCallback","KeyboardButtonProps","maxDateMessage","maxDate","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","Report","zoneChange","includes","selectedZone","listofzones","selectAllzone","showZoneSelection","fromDate","startDate","getTime","endDate","products","reporttype","emails","responseFlag","responseFlagMsg","zone","reportName","loadProductList","sendReportToEmail","convertBool","_this2","ActivationService","getStaticData","zones","_this3","retrieveType","dataEntryData","AdminService","sentReportToEmail","verifications","dataEntry","flag","_React$createElement","_React$createElement2","_React$createElement3","_React$createElement4","_React$createElement5","_React$createElement6","_React$createElement10","dateParam","Paper","syt","FormControl","multiselect","htmlFor","Select","MenuItem","selectStyle","labelId","multiple","input","Input","map","react_csv","filename","Table","tableStyle","minWidth","marginBottom","createData","time","amount","depositContext","flex","shipTo","paymentMethod","seeMore","Mobile","NIC","Sim","PEF_Count","NIC_Count","Distributor","Zone","FTA_Date","Status","Resubmit","Verify_Date","Submit_Date","Resubmit_Date","tableWrapper","overflow","service_ProductService","isFtr","toolbarIcon","zIndex","menuButtonHidden","title","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","height","paddingTop","paddingBottom","fixedHeight","service_RetailerAdminService","performServerAction","baseURL","RechargePack","addProduct","editProduct","loadPackList","RetailerAdminService","listPack","allPacks","portal","removeItem","moment","size","TableHead","TableRow","TableCell","align","TableBody","row","imageURL","scope","connectionType","packType","active","validityDays","validityType","description","comment","dateFormat","displayType","lib_default","connect","setPackLoaded","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","sent","stop","_x","apply","PackService","d","setHours","handleStartDateChange","startDateMili","document","getElementById","handleEndDateChange","endDateMili","disablePast","firstLavel","TimePicker","secondLavel","RechargePackAdd","savePack","displayOrder","file","startDatetime","endDatetime","FormData","append","dataDay","dataDayType","nightDay","nightDayType","activationStatus","addPack","cancel","onChangeFileUpload","files","onChangeHandler","event","onChangePack","packtypevalue","userCategory","packTypeitem","textStyle","formContainer","min","max","rows","multiline","variyant","MaterialUIPickers_MaterialUIPickers","_styles","flexWrap","BannerAdd","publishDay","expireDay","bannerType","order","link","categoryType","loginId","addBanner","handleChange","checked","content-type","catch","section","category","forAndroid","forIos","forWindows","updateTime","updateBy","BannerAdd_styles","BannerEdit","getInitialData","loading","getOneBanner","selectedData","bannerId","split","updateBanner","showSuccess","BannerEdit_styles","packRes","getPackById","addPackTpe","ftr","packvalue","EditRechargePack_styles","editPackInfo","updatedInfo","_ref3","_callee3","_context3","String","t0","_x3","_ref2","_callee2","_context2","abrupt","_x2","calories","fat","carbs","protein","highlight","palette","secondary","main","backgroundColor","lighten","light","text","dark","table","visuallyHidden","border","clip","top","VerifyList","test","searchby","searchedproducts","endTime","noOfRecords","txnId","innerHTML","listDocs","activationList","listingIds","val","index","setTimeout","alert","sim","searchOnDB","hover","Visibility_default","cursor","nic","pefCount","nicCount","distributer","ftaDate","resubmit","verifiedDate","submitDate","resubmitDate","fontSize","tableRow","&:hover","background","card","media","MediaCard","imageDetails","Card","CardActionArea","CardMedia","image","img","CardContent","fadeProperties","transitionDuration","infinite","indicators","arrows","scale","autoplay","oldIndex","newIndex","SlideSlowGalary","openImageGalary","isOpen","photoIndex","$","_this$state","topImg","images","topImgItem","i","verticalAlign","PanViewer_default","alt","react_slideshow_image_lib","VerifyEdit","selectedReasons","updateLocalActList","txn","splice","onlockTransectionOnSkip","transactionsIds","unlockTransectionsSkip","skipThisVerify","selectedProductId","verifyListingTxn","nextid","parseInt","loadOneTransection","approveLoader","approveDone","approveButton","rejectDone","rejectButton","approveEV","values","find","rejectedReasons","comments","isPOIRejected","isCumtomerPhotoRejected","verificationDateTime","verificationUser","isRejected","transactionId","approveDocs","rejectEV","rejectLoader","keys","join","keyList","rejectData","address1","address2","address3","altContactNumber","customerImageUrl","customerSignatureUrl","deDateTime","deUser","dob","firstName","gender","lastName","middleName","pefImageUrl","poiBackImageUrl","poiFrontImageUrl","poiNumber","poiType","submittedBy","loader","emailid","presentAddress","getOneVerify","selectedProduct","objectReason","reduce","array","alternateNumber","retailerSignatureUrl","submittedDate","submittedDateStr","resubmittedDate","resubmittedDateStr","prevRejectedImgs","prevData","eActivatedRejectionReasons","preActivatedRejectionReasons","reasonList","isMandatory","exemptReason","author","featured","prevImageDetails","pefcontainer","doccontaiter","datacontainer","textStyleHeading","VerifyEdit_SubmitedByRetailer","cafdetails","VerifyEdit_SubmitedByDistributer","SlideShowGalary","footerButton","CircularProgress","DoneSharp_default","mainDivAdjustment","left","bottom","SubmitedByRetailer","SubmitedByDistributer","pefdetails","Hooks","page","setPage","rowsPerPage","setRowsPerPage","DataEntryList","listingTakingTime","date15Years","setFullYear","getFullYear","today","getDate","gridList","icon","DataEntryEdit","dataEntryId","dataentryListingTxn","submitDataEntry","saveDataEntry","reset","productName","displayName","servingTimeInMins","priority","iconUrl","onlineBooking","showRecent","tagUrl","helpTextImage","helpText","updateProduct","onChangeDob","propMobile","getOneDataEntry","genderSelect","rejectmsg","propertiesName","screenFields","fields","dataentry_MaterialUIPickers_MaterialUIPickers","objects","MuiTextField","placeholder","inputProps","imgStyle","onUploadFiles","imageType","uploadDistrubuter","user_image","user_image_upload","user_signature_loader","user_signature_upload","retailer_signature_loader","retailer_signature_upload","poi_front_image_loader","poi_front_image_upload","poi_back_image_loader","poi_back_image_upload","pef_image_loader","pef_image_upload","pef_image_response","poi_front_image_response","poi_back_image_response","searchDistributer","poiFrontPending","poiBackPending","pefFPending","_this4","onSubmit","handleSubmit","show","BaneerList","loadBannerList","getAllBanner","toLocaleDateString","toTimeString","indexOf","BaneerListAdd_styles","heading","typography","pxToRem","fontWeight","fontWeightRegular","SimpleExpansionPanel","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","ExpansionPanelDetails","laId","reason","Retailer","extention","pop","retailerOnboardExcelTemplatePath","retailerDeleteExcelTemplatePath","deletefile","retailerDetails","uploadResponse","deleteResponse","relailerOnboard","relailerDelete","searchRetailer","uploadfile","uploadRetailer","rejectedAgents","deleteRetailer","_this5","startIcon","Search_default","laid","msisdn","emailId","tlId","tlNum","managerId","managerNum","department","remarks","backoffice_Title_Title","Link","Delete_default","OfferUpload","getAdmminStaticData","param","retailerAirtelId","imagestyle","RoleManagement","addNewEnable","roleName","addRole","deleteNewRole","deleteRole","confirm","selected","DeleteForever_default","imgTextStyle","topImgStyle","borderRadius","buttomImgSyle","displayBlock","displayNone","react_image_lightbox_default","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","AppRouter","react_router","path","exact","DistributerList","AddBanner","EditRechargePack","BackOffice","AdminWelcome","Test","App","RouterComponent","react_toastify","ReactDOM","render","es","src_App","querySelector","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.678c47ea.chunk.js","sourcesContent":["import * as actionTypes from \"../action/types\";\nconst INTIAL_STATE = {\n    packs: [],\n    pack:[],\n    updatedPack:null\n  };\n export default (state = INTIAL_STATE,action)=>{\n    switch (action.type) {\n        case actionTypes.SET_PACK_LOADED:\n          return { ...state, packs:action.payload };\n        case actionTypes.EDIT_PACK_INFO:\n          return {...state,updatedPack:action.payload}\n          case actionTypes.GET_PACK_INFO_BY_ID:\n              return {...state,pack:action.payload}    \n     default:\n          return state;\n      }\n}\n\n","import { combineReducers } from 'redux';\n\nimport getPackReducer from './packReducer';\n\nexport default combineReducers({\n    packs: getPackReducer,\n});","export const SET_PACK_LOADED = 'SET PACK LOADED';\nexport const EDIT_PACK_INFO ='EDIT PACK INFO';\nexport const GET_PACK_INFO_BY_ID ='GET_PACK_INFO_BY_ID';\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nexport default store;","class AuthService {\n\n    getLoggedInUserInfo() {\n        localStorage.getItem(\"UserInfo\");\n    }\n\n    getHeader() {\n        return { 'headers': {'Authorization': 'Bearer ' + localStorage.getItem(\"token\") } }\n        //return { 'headers': { 'X-Server-Key': '8786gfhy' } }\n    }\n\n    // logout() {\n\n    //     if(window.localStorage.getItem(\"token\")){\n    //       localStorage.clear();\n    //       this.props.history.push(\"/login\");\n    //     }\n    //     console.log(\"logout\");\n    // }\n}\n\nexport default new AuthService();","const baseUrl = 'http://125.17.6.6/ams/api/v1/';\n//const baseUrl = 'http://localhost:8080/api/v1/';\n//http://125.16.74.160:30611/SLRetailerM1/recharges/getPrepaidPacks\nexport const PRODUCT_API_BASE_URL = baseUrl + 'store/portal/products';\nexport const SEGMENT_API_BASE_URL = baseUrl + 'store/portal/segments';\nexport const PORTAL_STORE_API_BASE_URL = baseUrl + 'store/portal/stores';\nexport const STORE_API_BASE_URL = baseUrl + 'store';\nexport const CIRCLE_API_BASE_URL = baseUrl + 'store/circles';\nexport const QUEUE_API_BASE_URL = baseUrl + 'store/portal/queues';\nexport const CRO_API_BASE_URL = STORE_API_BASE_URL + '/set-up';\n\nvar RETAILER_API_BASE_URL = 'https://retailer.airtel.lk/';\n\nif(window.location.hostname == \"retailer.airtel.lk\"){\n    RETAILER_API_BASE_URL = 'https://retailer.airtel.lk/';\n}\nif(window.location.hostname == \"retailer.srilanka.airtel.itm\"){\n    RETAILER_API_BASE_URL = 'http://retailer.srilanka.airtel.itm:5443/';\n}\n\nif(window.location.hostname == \"125.16.74.160\"){\n    RETAILER_API_BASE_URL = 'http://125.16.74.160:30611/';\n}\n\n//RETAILER_API_BASE_URL = 'http://125.16.74.160:30611/';\n\n\nexport const RETAILER_REPORT_BASEAPI = RETAILER_API_BASE_URL + 'SLRetailer/reports/';\n\n//mansi api\nexport const SL_AD_LOGIN_URL = RETAILER_API_BASE_URL + 'SLRetailer/auth/portaLogin';\nexport const SL_AD_LOGOUT_URL = RETAILER_API_BASE_URL + 'SLRetailer/user/logout'; \n\n\nexport const RECHARGE_PACK_LISTING = RETAILER_API_BASE_URL + 'SLRetailer/recharges/getPrepaidPacks';\nexport const VERIFY_DOCS_LISTING = RETAILER_API_BASE_URL + 'SLRetailer/createCAF/prepaidAcqTxns';\n\nexport const SAVE_PACK= RETAILER_API_BASE_URL + 'SLRetailer/recharges/uploadPrepaidPack';\nexport const UPLAOD_PACK_IMAGE= RETAILER_API_BASE_URL + 'SLRetailer/recharges/uploadRechargeImage';\n\n\nexport const BASE_URL= RETAILER_API_BASE_URL+\"SLRetailer/recharges\"\n//Baneer \nexport const GET_ALL_BANNERS_DETAILS = RETAILER_API_BASE_URL + 'SLRetailer/banner/getBanner/portal';\nexport const SAVE_BANNER = RETAILER_API_BASE_URL + 'SLRetailer/banner/uploadBanner';\nexport const UPDATE_BANNER = RETAILER_API_BASE_URL + 'SLRetailer/banner/updateBanner';\n\n\n\nexport const UPLOAD_IMG_BANNER = RETAILER_API_BASE_URL + 'SLRetailer/recharges/uploadRechargeImage';\nexport const GET_ONE_BANNER = RETAILER_API_BASE_URL + 'SLRetailer/banner/getBannerById/portal';\n\n\n//arti api \nexport const SEARCH_BY_MOBILE_NO = RETAILER_API_BASE_URL + 'SLRetailer/createCAF/prepaidAcqTxnData';\nexport const VERIFY_DOCS_BY_ID = RETAILER_API_BASE_URL + 'SLRetailer/createCAF/prepaidAcqTxnData?role=AV';\nexport const VERIFICATION_STATIC_DATA = RETAILER_API_BASE_URL + 'SLRetailer/cms/data';\nexport const VERIFY_DOCS_APPROVE = RETAILER_API_BASE_URL + 'SLRetailer/createCAF/saveVerificationDetails';\nexport const VERIFY_DETAILS = RETAILER_API_BASE_URL + 'SLRetailer/createCAF/prepaidAcqTxnData?role=BOA';\nexport const DATAENTRY_DETAILS = RETAILER_API_BASE_URL + 'SLRetailer/createCAF/prepaidAcqTxnData?role=DE';\nexport const SAVE_DATAENTRY_DETAILS = RETAILER_API_BASE_URL + 'SLRetailer/createCAF/saveDataEntryDetails';\n\n//distributer\n//export const DISTRIBUTER_SEARCH = RETAILER_API_BASE_URL + 'SLRetailer/createCAF/validatePreActivation';\nexport const DISTRIBUTER_SEARCH = RETAILER_API_BASE_URL + 'SLRetailer/createCAF/submitPreActivation';\nexport const DISTRIBUTER_UPLOAD = RETAILER_API_BASE_URL + 'SLRetailer/createCAF/imageUpload';\n\n\nexport const UNLOCK_SKIP_VERIFICATION = RETAILER_API_BASE_URL + 'SLRetailer/cms/unlockSelection';\n\n\n//Retailer \nexport const RETAILER_ONBOARD = RETAILER_API_BASE_URL + 'SLRetailer/agent/add';\nexport const RETAILER_DELETE  = RETAILER_API_BASE_URL + 'SLRetailer/agent/delete';\nexport const RETAILER_SEARCH = RETAILER_API_BASE_URL + 'SLRetailer/agent/retrieve';\n\nexport const TESTAPI = RETAILER_API_BASE_URL + 'SLRetailer/commomService/getSMSParameters';\n\n\n","import axios from 'axios';\n\nimport AuthService from \"./AuthService\";\nimport {CIRCLE_API_BASE_URL, PORTAL_STORE_API_BASE_URL, STORE_API_BASE_URL,SL_AD_LOGIN_URL,SL_AD_LOGOUT_URL} from \"../../utils/config\";\n\nclass StoreService {\n\n    login(credentials, key) {\n\n     //   return axios.post(STORE_API_BASE_URL + '/auth/portal-login', credentials, { 'headers': { 'X-Server-Key': '8786gfhy' } });\n         // return axios.post(SL_AD_LOGIN_URL, credentials,  { 'headers': { 'MyServerKey': key }});\n          return axios.post(SL_AD_LOGIN_URL, credentials, '');\n\n    }\n    logout() {\n     //   return axios.post(STORE_API_BASE_URL + '/auth/portal-login', credentials, { 'headers': { 'X-Server-Key': '8786gfhy' } });\n          return axios.get(SL_AD_LOGOUT_URL, AuthService.getHeader());\n    }\n\n    fetchStoreById(storeId) {\n        return axios.get(PORTAL_STORE_API_BASE_URL + '/' + storeId, AuthService.getHeader());\n    }\n\n    listStore(){\n        return axios.get(PORTAL_STORE_API_BASE_URL + '?onlyActive=false', AuthService.getHeader());\n    }\n\n    updateStore(store) {\n        return axios.post(\"\" + PORTAL_STORE_API_BASE_URL, store, AuthService.getHeader());\n    }\n\n    markAttendance(attendance) {\n        return axios.post(STORE_API_BASE_URL + '/cro/attendance', attendance, AuthService.getHeader());\n    }\n\n    save(store) {\n        return axios.post(\"\" + PORTAL_STORE_API_BASE_URL, store, AuthService.getHeader());\n    }\n\n    listCircles() {\n        return axios.get(CIRCLE_API_BASE_URL + '/portal?onlyActive=true', AuthService.getHeader());\n    }\n\n}\n\nexport default new StoreService();\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport AirtellLogo from './airtellogo.png';\n\n\n\nconst style = {\n    flexGrow: 1\n}\n\n\nconst LoginNavBar = (props) => {\n    return (\n        <React.Fragment>\n            {/* <AppBar position=\"static\" style={{backgroundColor: '#f44336'}}/> */}\n            <AppBar position=\"static\">\n                <Toolbar>\n                <img  style={{width:\"100px\"}} src={ AirtellLogo } />\n\n                    <div style={{width:\"300px\"}}>\n                        <Typography variant=\"h6\" style={style}>\n                             &nbsp;&nbsp;  SL MITRA Retailer Portal\n                        </Typography>\n                    </div>              \n                    \n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n};\n\nexport default LoginNavBar;","import { toast } from 'react-toastify';\n\nclass Notify {\n\n    showError(msg) {\n        toast.error(msg, this.options());\n    }\n\n    showSuccess(msg) {\n        toast.success(msg , this.options());\n    }\n\n    showWarning(msg) {\n        toast.warn(msg , this.options());\n    }\n\n    options() {\n        return {\n            position: \"top-right\",\n            autoClose: 2000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true\n        }\n    }\n\n}\n\nexport default new Notify();","import AuthService from \"../components/service/AuthService\";\nimport Notify from \"./Notify\";\n\nexport function resolveResponse(response, msg) {\n   \n    let data = {};\n        if (response.status === 200) {\n            console.log(response,\"RESPONSE@@@@@@@@@@@\")\n            data = response.data;\n            if(data.status === 200 || data.status === 201) {\n                // if(data.message){\n                //     Notify.showSuccess(data.message);\n                // }\n            }else if(data.status === 400 || data.status === 401 || data.status === 403) {\n              //  Notify.showError(\"We need to authenticate you. Please login again.\");\n                localStorage.clear();\n                //return window.location.replace(\"/#/login\");\n\n                return Promise.reject(window.location.replace(\"/#/login\"));\n            }else {\n                console.log(data.message,\"XXXX\");\n                Notify.showError(data.message);\n                return Promise.reject(data.message);\n            }\n        }\n        // else {\n        //     Notify.showError(data.message);\n        //     return Promise.reject(data.message);\n        // }\n        return data;\n}","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport storeService from \"../service/StoreService\";\nimport LoginNavBar from \"../LoginNavbar\";\nimport {Container} from \"@material-ui/core\";\nimport { resolveResponse } from '../../utils/ResponseHandler';\nimport Notify from \"../../utils/Notify\";\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nimport base64 from 'react-native-base64'; \nimport CryptoJS  from 'crypto-js'; \nvar aes256 = require('aes256');\n\n\nclass LoginComponent extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: \"\",\n            password: \"\", \n            isDasable:false,\n            isError:false,\n            \n        };\n        this.login = this.login.bind(this);\n    }\n\n\n    render() {\n        var password = \"U*0elFh:\"; \n\n        return(\n            <React.Fragment>\n                <LoginNavBar/><br/><br/><br/>\n                <Container maxWidth=\"sm\">\n                    <Typography variant=\"h4\" style={styles.label}>Login</Typography>\n                    <form style={styles.formStyle}>\n                    {/* value={this.state.olmsId} */}\n                        <TextField type=\"text\"  required={true} label=\"Olms Id\" fullWidth margin=\"normal\" name=\"userName\" value={this.state.userName}  onChange={this.onChange}/>\n\n                        <TextField type=\"password\"  required={true} label=\"Password\" fullWidth margin=\"normal\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\n                        \n\n                        <Grid item  xs={12} sm={2}>\n                            <Button disabled={this.state.isDasable}  variant=\"contained\" color=\"primary\" onClick={this.login}>Login</Button>\n                        </Grid>\n\n\n                        <Grid item  xs={12} sm={10}>\n                             {this.state.isDasable ? <InputLabel variant=\"subtitle1\" style={styles.waitMessage}> Please wait...</InputLabel> :\"\"} \n                             {this.state.isError ? <InputLabel variant=\"subtitle1\" style={styles.errorMessage}> {this.state.isError} </InputLabel>: \"\"}  \n                        </Grid>\n\n                    </form>\n\n                    \n                </Container>\n            </React.Fragment>\n        )\n\n    }\n\n    componentDidMount() {\n      const token =   window.localStorage.getItem(\"token\"); \n\n      if(token){\n        const lastUrl = localStorage.getItem(\"lastUrl\"); \n        this.props.history.push('/'+lastUrl);\n      }\n        \n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n    login = (e) => {\n        e.preventDefault();\n        if(!this.state.userName || !this.state.password){\n            this.setState({ isError: \"Olms Id and password is required.\" });\n\n            // setTimeout(() => {\n            //     this.setState({ isError: \"\" });\n            // }, 3000);\n\n          //  Notify.showError(\"Olms Id and password is required.\");\n            return;\n        }\n         \n        this.setState({ isDasable: true });\n\n        var keynum = Math.floor(Math.random()*1E16);\n        var atualkey = (keynum * 69-99).toString(); \n        atualkey =  atualkey.substring(0, 15);\n\n       var encryptedPass = CryptoJS.AES.encrypt( this.state.password, atualkey).toString();\n        // console.log( keynum , encryptedPass);\n\n        const loginPayload = {\n            userName:  this.state.userName,\n            password: encryptedPass+keynum // this.state.password //\n\n        };\n        storeService.login(loginPayload)\n            .then(res => {\n              //  Notify.showError(\"Olms Id and password is required.\");\n            //  alert(JSON.stringify(res));\n\n              \n              this.setState({ isError: res.data.message });\n\n              //  let data = resolveResponse(res);\n                console.log(\"resolveResponse\",data); \n                // if(!data.result)\n                //     Notify.showError(\"Something Went worng...\");\n\n                var data = res.data; \n                this.setState({ isDasable: false });\n\n                // else\n                //     resolveResponse(res, \"Login success.\");\n\n                if(data.result){\n                    window.localStorage.setItem(\"userDetails\",JSON.stringify(data.result));\n                    window.localStorage.setItem(\"token\",data.result.token)\n                }\n               \n                // BO agent : BOA\n                // Data Entry : DE\n                // Admin : ADMIN\n                // Distributor : DIST\n\n                if(data.result && data.result.roleCode == \"BOA\")\n                this.props.history.push('/verify');\n\n                if(data.result && data.result.roleCode == \"DE\")\n                this.props.history.push('/dataentry');\n\n                if(data.result && data.result.roleCode == \"ADMIN\")\n                this.props.history.push('/welcome');\n\n                if((data.result && data.result.roleCode== \"DIST\") || (data.result &&  data.result.roleCode== \"FSE\"))\n                this.props.history.push('/distributor');\n                \n            });\n          \n            // setTimeout(() => {\n            //     this.setState({ isError: \"\" });\n            // }, 3000);\n\n\n           \n    }\n\n}\n\nconst styles ={\n    formStyle :{\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n    label: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    errorMessage:{\n        color:\"red\",\n        marginTop: '11px'\n    },\n    waitMessage:{\n        color:\"gray\",\n        marginTop: '11px'\n\n    }\n\n}\n\nexport default LoginComponent;","import axios from 'axios';\nimport AuthService from \"./AuthService\";\nimport  * as amsConstant from \"../../utils/config\";\n\nclass AdminService {\n\n    getStaticData(role){\n        return axios.get(amsConstant.VERIFICATION_STATIC_DATA + '?role=' + role, AuthService.getHeader());\n    }\n\n    uploadRetailer(formData){\n        return axios.post(amsConstant.RETAILER_ONBOARD, formData, AuthService.getHeader());\n    }\n\n    deleteRetailer(formData){\n        return axios.post(amsConstant.RETAILER_DELETE, formData, AuthService.getHeader());\n    }\n\n    searchRetailer(lapuNumber){\n        return axios.get(amsConstant.RETAILER_SEARCH+\"?laId=\" +lapuNumber , AuthService.getHeader());\n    }\n\n    sentReportToEmail(formData,api ){\n        return axios.post(amsConstant.RETAILER_REPORT_BASEAPI+api, formData, AuthService.getHeader());\n    }\n\n    // listActiveProduct(){lapuNumber\n    //     return axios.get(amsConstant.PRODUCT_API_BASE_URL, AuthService.getHeader());\n    // }\n\n\n    // deleteProduct(productId){\n    //     return axios.delete(amsConstant.PRODUCT_API_BASE_URL + '/' + productId, AuthService.getHeader());\n    // }\n\n\n}\n\n\n\nexport default new AdminService();\n","import axios from 'axios';\nimport AuthService from \"./AuthService\";\nimport  * as amsConstant from \"../../utils/config\";\n\nclass ActivationService {\n\n    \n    listDocs(data){\n        //return axios.post(amsConstant.VERIFY_DOCS_LISTING, data, { 'headers': { 'ContentType': 'application/json' } });\n      return axios.post(amsConstant.VERIFY_DOCS_LISTING,data, AuthService.getHeader() );\n    }\n\n    listActiveProduct(){\n        return axios.get(amsConstant.PRODUCT_API_BASE_URL, AuthService.getHeader());\n    }\n\n    getOneVerify(productId){\n        //return axios.get(amsConstant.VERIFY_DOCS_BY_ID + '&txnId=' + productId, AuthService.getHeader());\n        return axios.get(amsConstant.VERIFY_DETAILS + '&txnId=' + productId, AuthService.getHeader());\n    }\n\n    getOneDataEntry(productId){\n        return axios.get(amsConstant.DATAENTRY_DETAILS + '&txnId=' + productId, AuthService.getHeader());\n    }\n\n\n    saveDataEntry(postdata){\n        return axios.post(amsConstant.SAVE_DATAENTRY_DETAILS, postdata, AuthService.getHeader());\n    }\n\n    unlockTransectionsSkip(postdata){\n        return axios.post(amsConstant.UNLOCK_SKIP_VERIFICATION, postdata, AuthService.getHeader());\n    }\n    \n    getStaticData(role){\n        return axios.get(amsConstant.VERIFICATION_STATIC_DATA + '?role=' + role, AuthService.getHeader());\n    }\n\n    approveDocs(product) {\n        return axios.post(amsConstant.VERIFY_DOCS_APPROVE, product, AuthService.getHeader());\n    }\n\n    searchMobileNo(mobile) {\n        return axios.get(amsConstant.SEARCH_BY_MOBILE_NO+ '?role=DE&mobileNumber='+mobile, AuthService.getHeader());\n    }\n\n    deleteProduct(productId){\n        return axios.delete(amsConstant.PRODUCT_API_BASE_URL + '/' + productId, AuthService.getHeader());\n    }\n\n    searchDistributer(object){\n        return axios.post(amsConstant.DISTRIBUTER_SEARCH+'?mobileNumber='+object.mobileNumber+'&simNumber='+object.simNumber,  object,  AuthService.getHeader());\n    }\n\n    \n    uploadDistrubuter(formData){\n        return axios.post(amsConstant.DISTRIBUTER_UPLOAD, formData, AuthService.getHeader());\n    }\n\n    upload(formData){\n        return axios.post(amsConstant.STORE_API_BASE_URL + '/resource/upload', formData, AuthService.getHeader());\n    }\n\n    testApi(formData){\n        return axios.post(amsConstant.TESTAPI  , formData, AuthService.getHeader());\n    }\n\n\n    \n}\n\n\n\nexport default new ActivationService();\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport { Redirect } from 'react-router-dom'\nimport { Link } from \"react-router-dom\";\n\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport EditIcon from '@material-ui/icons/Edit';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\n\nimport storeService from \"./service/StoreService\";\n\n//import RouterComponent from '../RouterComponent'; \n\n// function appLogout(props) {\n//  // this.props.history.push('/dashboard');\n//  alert(\"ddd\")\n// }\n\n\n// class AppLogout extends  React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.logout = this.logout.bind(this);\n//   }\n  \n//   logout() {\n\n\n//     storeService.login(loginPayload)\n//     .then(res => {\n//     //  alert(JSON.stringify(res));\n\n  \n        \n//     });\n\n//    //alert(\"logout\")\n//    console.log(this.props); \n\n//    //const { history } = this.props;\n//    // history.push(\"/login\")\n\n//    //this.props.history.push('/login');\n//     //return  (<Redirect to='/login' /> ); \n  \n//   }\n\n//   render() {\n\n\n//     return (\n     \n      \n//       //  onClick={this.logout()} \n//     <ListItem button component=\"a\" href=\"/login\" >\n//         <ListItemIcon>\n//           <PowerSettingsNewIcon />\n//         </ListItemIcon>\n//         <ListItemText primary=\"Logout\" />\n//     </ListItem>\n//     );\n//   }\n\n\n// }\n\n\nexport const  BOAMenuList  = (\n\n  <div>\n    {/* selected */}\n   \n    <ListItem component='a' href={\"/#/verify\"} button>\n      <ListItemIcon>\n        <VerifiedUserIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Verify Docs\" />\n    </ListItem>\n    \n  </div>\n);\n\n\n\nexport const AdminMenuList = (\n  <div>\n    {/* <ListSubheader inset>Upload & Create</ListSubheader> */}\n   \n    <ListItem button component='a' href={\"/#/welcome\"} >  \n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Welcome\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/#/packs\"} >  \n      <ListItemIcon>\n        <LayersIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Pack Activation\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/#/offerupload\"} >\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Offer Upload\" />\n    </ListItem>\n\n    <ListItem button component='a' href={\"/#/banners\"} >\n      <ListItemIcon>\n        <AssignmentIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Upload Banner\" />\n    </ListItem>\n\n    \n    <ListItem button component='a' href={\"/#/backoffice\"} >\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"BO Agent\" />\n    </ListItem>\n\n\n    <ListItem button component='a' href={\"/#/role\"} >\n      <ListItemIcon>\n        <PeopleIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Role Management\" />\n    </ListItem>\n  \n    \n    <ListItem button component='a' href={\"/#/report\"}>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Reports\" />\n    </ListItem>\n  \n\n  </div>\n);\n\n\n\n\n\nexport const DISTMenuList = (\n  <div>\n    {/* <ListSubheader inset>Upload</ListSubheader> */}\n   \n    <ListItem component='a' href={\"/#/distributor\"} button>\n      <ListItemIcon>\n        <CloudUploadIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Upload Document\" />\n    </ListItem>   \n\n  </div>\n);\n\nexport const DEMenuList = (\n  <div>\n    {/* <ListSubheader inset>Update Acquisition</ListSubheader> */}\n   \n    <ListItem component='a' href={\"/#/dataentry\"} button>\n      <ListItemIcon>\n        <EditIcon />\n      </ListItemIcon>\n      <ListItemText primary=\"Data Entry\" />\n    </ListItem>   \n\n  </div>\n);\n\nfunction logoutPortal(){\n  //console.log(\"yo_man\")\n\n  storeService.logout()\n  .then(res => {\n   // {\"status\":200,\"message\":\"Success\",\"result\":{\"message\":\"User logged out successfully\"}}\n   console.log(res.data);\n   if(res.data &&  res.data.message == \"Success\"){\n    localStorage.clear();\n   }\n   window.location.replace(\"/#/login\");\n   return;\n \n  });\n //  window.localStorage.setItem(\"userDetails\", '' );\n}\n\nexport const LogoutMenu = (\n  <div>\n    <Link style={{textDecoration: \"none\"}} onClick={logoutPortal}>\n      <ListItem button>\n          <ListItemIcon><PowerSettingsNewIcon/></ListItemIcon><ListItemText primary=\"Logout\" />\n      </ListItem>\n    </Link>\n  </div>\n);\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { textAlign } from '@material-ui/system';\nimport * as Menu from './LeftMenuBar';\nimport AirtellLogo from './airtellogo.png';\n\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Badge from '@material-ui/core/Badge';\nimport Button from '@material-ui/core/Button';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n    },\n    endMenu: {\n        display: 'flex',\n        flexDirection: 'row reverse'\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        //backgroundColor: '#f44336'\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 8px',\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n}));\n\nexport default function PostLoginNavBar() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    function handleDrawerOpen() {\n        setOpen(true);\n    }\n\n    function handleDrawerClose() {\n        setOpen(false);\n    }\n\n    function handleClick(e) {\n        console.log(e.target.innerText)\n        //this.props.history.push('/login');\n    }\n    const mystyle = {\n        height: \"40px\",\n        width: \"30px\"\n    };\n\n    var userDetails = localStorage.getItem(\"userDetails\")\n    userDetails = userDetails && JSON.parse(userDetails);\n    // console.log(\"userDetails.roleCode\",userDetails.roleCode)\n    return (\n\n\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n\n            >\n                <Toolbar>\n\n\n\n\n\n                    <IconButton\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n\n                    >\n                        <MenuIcon />\n                    </IconButton>\n\n                    <div style={{ width: \"250px\" }}>\n                        <Typography variant=\"h6\" noWrap>\n                            SL MITRA Retailer Portal\n                    </Typography>\n                    </div>\n\n\n                    <Grid direction=\"row\" container  alignItems=\"flex-end\" style={{ paddingLeft: \"10px\", paddingRight: \"10px\"}}>\n\n                        <Grid item xs={12} sm={10} alignContent=\"flex-end\" justify=\"flex-end\"></Grid>\n                        <Grid item xs={12} sm={2} style={{textAlign:\"right\"}}>\n                            <Typography variant=\"p\" style={{ color: \"white\" }} noWrap>\n                               {userDetails && userDetails.loginName ? userDetails.loginName.toUpperCase() : null}\n                            </Typography> \n                        </Grid>\n                    </Grid>\n\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <img style={{ marginRight: \"73px\", width: \"100px\" }} src={AirtellLogo} />\n\n                    {/* <img width=\"40\" style={{ color: \"red\", marginRight:\"130px\"}} src={ 'https://www.pinclipart.com/picdir/middle/498-4988102_36-53k-airtel-logos-of-indian-companies-quiz.png'} /> */}\n\n                    <IconButton onClick={handleDrawerClose}  >\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon style={{ color: \"gray\" }} /> : <ChevronRightIcon style={{ color: \"gray\" }} />}\n                    </IconButton>\n                </div>\n\n\n\n                <Divider />\n                {userDetails && userDetails.roleCode == \"ADMIN\" ? <List>{Menu.AdminMenuList}</List> : null}\n                {userDetails && userDetails.roleCode == \"BOA\" ? <List>{Menu.BOAMenuList}</List> : null}\n                {userDetails && userDetails.roleCode == \"DE\" ? <List>{Menu.DEMenuList}</List> : null}\n                {userDetails && userDetails.roleCode == \"DIST\" ? <List>{Menu.DISTMenuList}</List> : null}\n\n                <Divider />\n                <List>{Menu.LogoutMenu}</List>\n            </Drawer>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.drawerHeader} />\n            </main>\n        </div>\n    );\n}\n\n\n// BO agent : BOA\n// Data Entry : DE\n// Admin : ADMIN\n// Distributor : DIST\n\n","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nfunction addMonths(date, months) {\n  var d = date.getDate();\n  date.setMonth(date.getMonth() + +months);\n  if (date.getDate() != d) {\n    date.setDate(0);\n  }\n  return date;\n}\n\n\n\nexport default function MaterialUIPickers(props) {\n\n  console.log(\"startDatestartDate,\",props ); \n  var requiredDate ='';\n  // The first commit of Material-UI\n  var [selectedStartDate, setSelectedStartDate] = React.useState(new Date());\n  var [selectedEndDate, setSelectedEndDate] = React.useState(new Date());\n  const handleStartDateChange = date => {\n    \n    setSelectedStartDate(date);\n\n\n\n    //console.log(\"6month later\", selectedStartDate.setMonth(selectedStartDate.getMonth() + 6))\n\n    props.callbackFromParent.myCallback(date,\"START_DATE\");\n  };\n  const handleEndDateChange = date => {\n    console.log(date,\"SELECTED_DATE\")\n    setSelectedEndDate(date);\n    props.callbackFromParent.myCallback(date,\"END_DATE\");\n  };\n\n  console.log(props)\n\n  // var date = new Date(); \n  // date.getMonth() - 6; \n\n  \n   var dateObj = new Date(selectedStartDate);\n\n  \n\n   var requiredDate = dateObj.setMonth(dateObj.getMonth() + 6);\n\n\n  var currDate = new Date();\n  var back18Month= currDate.setMonth(currDate.getMonth() - 18);\n  console.log(new Date(back18Month),\"back18Month\");\n\n  if(selectedStartDate <  back18Month){\n    selectedStartDate = back18Month;\n  }\n\n  if(selectedEndDate <  selectedStartDate){\n    selectedEndDate = requiredDate;\n  }\n\n  // if(requiredDate > new Date() ) {\n  //   requiredDate = new Date();\n  // }\n // var requiredDate = selectedStartDate.setMonth(selectedStartDate.getMonth() + 6)\n\n return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container justify=\"space-around\">\n     \n        <KeyboardDatePicker\n          margin=\"normal\"\n          //readOnly=\"true\"\n          // disabled=\"true\"\n          disableFuture=\"true\"\n          allowKeyboardControl=\"true\"\n          minDate={back18Month}\n          minDateMessage=\"Only 18 months back report can be fatch.\"\n          id=\"date-picker-dialog\"\n          label=\"Start Date\"\n          format=\"dd/MM/yyyy\"\n          value={selectedStartDate}\n          onChange={handleStartDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n        <KeyboardDatePicker\n      \n          disableFuture=\"true\"\n          maxDateMessage=\"Max allowed date range is 6 months.\"\n          minDateMessage=\"End date can't be less than start date.\"\n          minDate={selectedStartDate}\n          maxDate={requiredDate}\n          margin=\"normal\"\n          id=\"date-picker-dialog\"\n          label=\"End Date\"\n          format=\"dd/MM/yyyy\"\n          value={selectedEndDate}\n          onChange={handleEndDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n       \n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React, { useState } from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport Notify from \"../../utils/Notify\";\nimport Input from \"@material-ui/core/Input\";\nimport ActivationService from \"../service/ActivationService\";\n\n\nimport Title from './Title';\nimport TextField from '@material-ui/core/TextField';\n\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MaterialUIPickers from \"./MaterialUIPickers\";\n\nimport DoneSharpIcon from '@material-ui/icons/DoneSharp';\n import * as alasql from 'alasql';\n import json2csv from \"json2csv\";\n import { CSVLink } from \"react-csv\";\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\n \nclass Report extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          //  products: {\"status\":200,\"message\":\"ok\",\"result\":{\"data\":[{\"msisdn\":\"753651094\",\"simNumber\":\"00017\",\"customerPoiId\":\"801912575V\",\"activationDate\":\"15-01-2020 13:44:34\",\"zone\":\"West 1\",\"imageCount\":3,\"status\":\"av_pending\",\"submittedUserId\":\"9560210319\",\"submittedDate\":1582535180056,\"submittedDateStr\":null,\"rejectionReason\":null,\"comment\":null},{\"msisdn\":\"753651095\",\"simNumber\":\"00017\",\"customerPoiId\":\"801912575V\",\"activationDate\":\"15-01-2020 13:44:34\",\"zone\":\"West 1\",\"imageCount\":3,\"status\":\"av_pending\",\"submittedUserId\":\"9560210319\",\"submittedDate\":1582535180056,\"submittedDateStr\":null,\"rejectionReason\":null,\"comment\":null}]}},\n          products:'',\n          reporttype: '',\n            startDate: \"\",\n            endDate: \"\",\n            emails: \"\",\n            responseFlag: false,\n            responseFlagMsg:'',\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All',\n            reportName : \"Download Report\"\n        };\n        this.loadProductList = this.loadProductList.bind(this);\n        this.sendReportToEmail = this.sendReportToEmail.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.myCallback = this.myCallback.bind(this);\n\n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value});\n\n        if(e.target.value.includes(\"Select All\")){\n            this.setState({selectedZone: this.state.listofzones})\n            this.setState({selectAllzone: \"Remove All\"})\n        }\n    \n        if(e.target.value.includes(\"Remove All\")){\n            this.setState({selectedZone: []})\n            this.setState({selectAllzone: \"Select All\"})\n        }\n\n    }\n\n    componentDidMount() {\n        //this.loadProductList();\n        ActivationService.getStaticData('BOA').then(res => {\n            let data = resolveResponse(res);\n            this.setState({listofzones: data.result && data.result.zones}) \n        })\n    }\n\n    loadProductList() {\n        \n\n    }\n    onChange = e => {\n\n        if(e.target.value == 'zoneWiseDetailedReport'){\n            this.setState({ showZoneSelection: true });\n        }else{\n            this.setState({ showZoneSelection: false });\n\n        }\n        this.setState({ [e.target.name]: e.target.value });\n\n    } \n\n\n    sendReportToEmail() {\n\n        //if(this.state.reporttype)\n\n        if(!this.state.startDate){\n            this.state.startDate = new Date().getTime();\n        }\n      \n        if(!this.state.endDate){\n            this.state.endDate = new Date().getTime();\n        }\n\n    \n          \n        if(!this.state.reporttype){\n        Notify.showError(\"First select report type\");\n        return;\n        }\n\n      \n        var data = {\n            retrieveType: 'BY_FTA_DATE',\n            startDate: this.state.startDate,\n            endDate: this.state.endDate,\n            \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n\n        }\n       var api = this.state.reporttype; \n      // var api = \"distributorLastUploadedData\";\n    //   var data = {retrieveType: \"BY_FTA_DATE\", startDate: 1578998520000, endDate: 1582540933936}; \n\n    //    console.log(data); \n\n      this.setState({ responseFlag : false, responseFlagMsg : '', dataEntryData :false, reportName:\"Download Report\" });\n\n\n        AdminService.sentReportToEmail(data,api)\n            .then((res) => {\n\n                let data = resolveResponse(res);\n               // console.log(\"report data\",data.result.data);\n\n\n                if(api == \"agentStatusReport\" && data.result){\n\n                    if(data.result && data.result.verifications)\n                    this.setState({ products: data.result.verifications, responseFlag : true, reportName:\"Verification Report\" });\n                    if(data.result && data.result.dataEntry)\n                    this.setState({ dataEntryData: data.result.dataEntry});\n\n                }else if(data.result && data.result.data && data.result.data.length ){\n                    this.setState({ products: data.result.data, responseFlag : true});\n                }else{\n                    this.setState({ responseFlagMsg : \"No Records Found\" });\n                }\n\n                \n            });\n    }\n\n\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n            console.log(\"date\",date)\n            this.setState({ startDate: new Date(date).getTime() });\n        } else if (fromDate === \"END_DATE\") {\n            this.setState({ endDate: new Date(date).getTime() });\n        }\n    };\n\n\n\n    render() {\n\n        const dateParam = {\n            myCallback: this.myCallback,\n            startDate: '',\n            endDate: ''\n\n        }\n        return (\n\n            <React.Fragment>\n                <PostLoginNavBar />\n                <div style={{ padding: \"20px\" }}>\n                    <br />\n                    <Paper style={{ padding: \"40px\" }}>\n\n                        <Title>Report Download</Title>\n             \n                        <Grid syt container spacing={2} container\n                            direction=\"row\"\n                            justify=\"right\"\n                            alignItems=\"center\">\n                            <Grid item xs={12} sm={4} >\n                                <FormControl style={styles.multiselect}>\n                                    <InputLabel htmlFor=\"Active\" required={true}>Select type of report</InputLabel>\n                                    <Select name=\"reporttype\" value={this.state.reporttype} onChange={this.onChange}>\n                                        <MenuItem value=\"distributorLastUploadedData\">Distributor Last Uploaded Data</MenuItem>\n                                        <MenuItem value=\"detailedPendingReport\">Detailed Pending Report</MenuItem>\n                                        <MenuItem value=\"rejectReport\">Rejected Data</MenuItem>\n\n                                        <MenuItem value=\"agentStatusReport\">Agent Status Report</MenuItem>\n                                        <MenuItem value=\"backOfficeReceptionReport\">Back Office Reception Report</MenuItem>\n                                        <MenuItem value=\"agentWisePerformanceLog\">Agent Wise Performance Report</MenuItem>\n\n                                        <MenuItem value=\"agentAuditReport\">Agent Audit Report</MenuItem>\n                                        <MenuItem value=\"ipacsReadyReport\">IPACS Ready Report</MenuItem>\n                                        <MenuItem value=\"noneComplainceReport\">None Complaince Report</MenuItem>\n\n                                        <MenuItem value=\"omniTransferReport\">OMNI Transfer Report</MenuItem>\n                                        <MenuItem value=\"summaryReportForDistributor\">Summary Report For Distributor</MenuItem>\n\n                                        <MenuItem value=\"zoneWiseDetailedReport\">Zone Wise Detailed Report </MenuItem>\n\n\n                                    </Select>\n                                </FormControl>\n\n                            </Grid>\n\n                            {this.state.showZoneSelection ? \n\n                            <Grid item xs={12} sm={3} item alignItems='flex-end'>\n                                <FormControl style={styles.selectStyle}>\n                                    <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                    <Select\n                                    labelId=\"demo-mutiple-name-label\"\n                                    id=\"demo-mutiple-name\"\n                                    multiple\n                                    name=\"selectedZone\"\n                                    value={this.state.selectedZone}\n                                    onChange={this.zoneChange}\n                                    input={<Input />}\n                                    MenuProps={MenuProps}\n                                    >\n                                    <MenuItem key={this.state.selectAllzone} value={this.state.selectAllzone} >\n                                        <b> {this.state.selectAllzone}   </b>                                         \n                                    </MenuItem>\n                                    {this.state.listofzones ? this.state.listofzones.map(name => (\n                                        <MenuItem key={name} value={name} >\n                                            {name}\n                                        </MenuItem>\n                                    )): \"\"}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            :\"\"}\n\n                            <Grid item xs={12} sm={5} item alignItems='flex-end'>\n                                <MaterialUIPickers callbackFromParent={dateParam} />\n                            </Grid>\n\n\n\n                            </Grid>\n\n\n                            \n                            <Grid syt container spacing={2} container\n                            direction=\"row\"\n                            justify=\"right\"\n                            alignItems=\"center\">\n\n\n                            <Grid item xs={12} sm={2} item alignItems='flex-end'>\n                            <Button variant=\"contained\" color=\"Primary\" style={{ marginLeft: '20px' }} onClick={this.sendReportToEmail} >Generate Report</Button>\n\n                                {/* <Typography component=\"h2\" variant=\"h4\" color=\"primary\" gutterBottom>\n                                    <TextField type=\"text\" value={this.state.emails} label=\"You can type multiple emails by comma(,) seperated\" style={{ width: \"100%\" }} name=\"emails\" onChange={this.onChange} />\n                                </Typography> */}\n                            </Grid>\n                            <Grid item xs={12} sm={10} item alignItems='flex-end'  >\n                                {this.state.responseFlag ? \n                                <CSVLink data={this.state.products}\n                                    filename={this.state.reporttype+\".csv\"}\n                                    className=\"btn btn-primary\"\n                                    target=\"_blank\"\n                                    >\n                                    <Typography component=\"h2\" variant=\"h6\" style={{ color: 'green' }} gutterBottom>\n                                        {this.state.reportName}\n                                    </Typography>\n                                    </CSVLink> \n                                    \n                                :\"\"}\n\n                                {this.state.dataEntryData ? \n                                <CSVLink data={this.state.dataEntryData}\n                                    filename={\"dataEntry.csv\"}\n                                    className=\"btn btn-primary\"\n                                    target=\"_blank\"\n                                    >\n                                    <Typography component=\"h2\" variant=\"h6\" style={{ color: 'green' }} gutterBottom>\n                                        Data Entry Report\n                                    </Typography>\n                                    </CSVLink> \n                                    \n                                :\"\"}\n\n\n                                {/* {this.state.responseFlagMsg ?  <Typography component=\"h2\" variant=\"h6\" color=\"error\" gutterBottom>\n                                  No Records Found\n                                </Typography> : \"\" } */}\n\n                                <Typography component=\"h2\" variant=\"h6\" color=\"error\" gutterBottom>\n                                  {this.state.responseFlagMsg}\n                                </Typography> \n                            </Grid>\n                        </Grid>\n\n\n                        <Grid syt container spacing={2} container\n                            direction=\"row\"\n                            justify=\"right\"\n                            alignItems=\"center\">\n                            <Grid item xs={12} sm={4} item >\n\n                            </Grid>\n\n                            <Grid item xs={12} sm={4} item >\n                                <br />\n                                {/* {this.state.responseFlag ?\n                                    <Typography component=\"h2\" variant=\"h6\" style={{ color: 'green' }} gutterBottom>\n                                        <DoneSharpIcon />  Report have been sent to your email id(s).\n                                        </Typography>\n                                    : \"\"} */}\n                            </Grid>\n                            <Grid item xs={12} sm={4} item >\n\n                           \n\n                            {this.state.responseFlag ? \n                                <Table data={this.state.products}/>\n\n                            :\"\"}\n\n                            \n\n\n                            </Grid>\n\n                        </Grid>\n\n\n\n                    </Paper>\n                </div>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\n\nconst styles = {\n    tableStyle: {\n        display: 'flex',\n        justifyContent: 'left'\n    },\n    multiselect: {\n        minWidth: \"100%\",\n        marginBottom: \"12px\"\n    },\n    selectStyle:{\n        // minWidth: '100%',\n         marginBottom: '0px',\n          minWidth: 300,\n          maxWidth: 300,\n    }\n}\n\n\nexport default Report;","import React from 'react';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\n\n// Generate Sales Data\nfunction createData(time, amount) {\n  return { time, amount };\n}\n\nconst data = [\n  createData('00:00', 0),\n  createData('03:00', 300),\n  createData('06:00', 600),\n  createData('09:00', 800),\n  createData('12:00', 1500),\n  createData('15:00', 2000),\n  createData('18:00', 2400),\n  createData('21:00', 2400),\n  createData('24:00', undefined),\n];\n\nexport default function Chart() {\n  return (\n    <React.Fragment>\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis dataKey=\"time\" />\n          <YAxis>\n            <Label angle={270} position=\"left\" style={{ textAnchor: 'middle' }}>\n              Sales ($)\n            </Label>\n          </YAxis>\n          <Line type=\"monotone\" dataKey=\"amount\" stroke=\"#556CD6\" dot={false} />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n","/* eslint-disable no-script-url */\n\nimport React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Deposits() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Deposits</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        $3,024.00\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        on 15 March, 2019\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"javascript:;\">\n          View balance\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","/* eslint-disable no-script-url */\n\nimport React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n  return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n  createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n  createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n  createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n  createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n  createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nexport default function Orders() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Recent Orders</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Ship To</TableCell>\n            <TableCell>Payment Method</TableCell>\n            <TableCell align=\"right\">Sale Amount</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.id}>\n              <TableCell>{row.date}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.shipTo}</TableCell>\n              <TableCell>{row.paymentMethod}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"javascript:;\">\n          See more orders\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst columns = [\n  { id: 'Mobile', label: 'Mobile No.', minWidth: 170 },\n  { id: 'NIC', label: 'NIC', minWidth: 100 },\n  { id: 'Sim',label: 'Sim',minWidth: 170, },\n  { id: 'PEF_Count', label: 'PEF Count', minWidth: 170, align: 'right', },\n  { id: 'NIC_Count', label: 'NIC Count', minWidth: 170, align: 'right', },\n  { id: 'Distributor', label: 'Distributor', minWidth: 170, align: 'right', format: value => value.toFixed(2),},\n  { id: 'Zone', label: 'Zone', minWidth: 170, align: 'right', },\n  { id: 'FTA_Date', label: 'FTA Date', minWidth: 150, },\n  { id: 'Status', label: 'Status', minWidth: 170, align: 'right', },\n  { id: 'Resubmit',  label: 'Resubmit',minWidth: 170, align: 'right',  },\n  { id: 'Verify_Date', label: 'Verify Date', minWidth: 170, align: 'right',},\n  { id: 'Submit_Date', label: 'Submit Date', minWidth: 170, },\n  { id: 'Resubmit_Date', label: 'Resubmit Date', minWidth: 170, }\n];\n\nfunction createData(Mobile, NIC, Sim, PEF_Count, NIC_Count,Distributor,Zone,FTA_Date,Status,Resubmit,Verify_Date,Submit_Date,Resubmit_Date) {\n  const density = 100 / 2;\n  return { Mobile, NIC, Sim, PEF_Count, NIC_Count,Distributor,Zone,FTA_Date,Status,Resubmit,Verify_Date,Submit_Date,Resubmit_Date };\n}\n\nconst rows = [\n  createData('7204563432', '#908004', '8982982389DSF092834' , 1, 2,\"UGC_DIS001\", \"West\", \"14-10-2019\", \"Summited\",\"No\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\"),\n  createData('7204563432', '#908004', '8982982389DSF092834' , 1, 2,\"UGC_DIS001\", \"West\", \"14-10-2019\", \"Summited\",\"No\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\"),\n  createData('7204563432', '#908004', '8982982389DSF092834' , 1, 2,\"UGC_DIS001\", \"West\", \"14-10-2019\", \"Summited\",\"No\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\"),\n  createData('7204563432', '#908004', '8982982389DSF092834' , 1, 2,\"UGC_DIS001\", \"West\", \"14-10-2019\", \"Summited\",\"No\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\"),\n  createData('7204563432', '#908004', '8982982389DSF092834' , 1, 2,\"UGC_DIS001\", \"West\", \"14-10-2019\", \"Summited\",\"No\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\"),\n  createData('7204563432', '#908004', '8982982389DSF092834' , 1, 2,\"UGC_DIS001\", \"West\", \"14-10-2019\", \"Summited\",\"No\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\"),\n  createData('7204563432', '#908004', '8982982389DSF092834' , 1, 2,\"UGC_DIS001\", \"West\", \"14-10-2019\", \"Summited\",\"No\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\"),\n  createData('7204563432', '#908004', '8982982389DSF092834' , 1, 2,\"UGC_DIS001\", \"West\", \"14-10-2019\", \"Summited\",\"No\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\"),\n  createData('7204563432', '#908004', '8982982389DSF092834' , 1, 2,\"UGC_DIS001\", \"West\", \"14-10-2019\", \"Summited\",\"No\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\"),\n  createData('7204563432', '#908004', '8982982389DSF092834' , 1, 2,\"UGC_DIS001\", \"West\", \"14-10-2019\", \"Summited\",\"No\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\"),\n\n];\n\n\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  tableWrapper: {\n    maxHeight: 440,\n    overflow: 'auto',\n  },\n});\n\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                  {columns.map(column => {\n                    const value = row[column.id];\n                    return (\n                      \n                      <TableCell key={column.id} align={column.align}>\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </div>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        backIconButtonProps={{\n          'aria-label': 'previous page',\n        }}\n        nextIconButtonProps={{\n          'aria-label': 'next page',\n        }}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n","import axios from 'axios';\nimport AuthService from \"./AuthService\";\nimport  * as amsConstant from \"../../utils/config\";\n\nclass ProductService {\n\n    listProduct(){\n      //  return axios.get(amsConstant.PRODUCT_API_BASE_URL+ '?onlyActive=false', AuthService.getHeader());\n        return axios.post(amsConstant.PRODUCT_API_BASE_URL, { isFtr : false}, AuthService.getHeader());\n\n    }\n\n    listActiveProduct(){\n        return axios.get(amsConstant.PRODUCT_API_BASE_URL, AuthService.getHeader());\n    }\n\n    getOne(productId){\n        return axios.get(amsConstant.PRODUCT_API_BASE_URL + '/' + productId, AuthService.getHeader());\n    }\n\n    updateProduct(product) {\n        return axios.post(amsConstant.PRODUCT_API_BASE_URL, product, AuthService.getHeader());\n    }\n\n    addProduct(product) {\n        return axios.post(amsConstant.PRODUCT_API_BASE_URL, product, AuthService.getHeader());\n    }\n\n    deleteProduct(productId){\n        return axios.delete(amsConstant.PRODUCT_API_BASE_URL + '/' + productId, AuthService.getHeader());\n    }\n\n    upload(formData){\n        return axios.post(amsConstant.STORE_API_BASE_URL + '/resource/upload', formData, AuthService.getHeader());\n    }\n\n}\n\nexport default new ProductService();\n","import React, { useState }  from \"react\";\nimport productService from \"../service/ProductService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport CreateIcon from '@material-ui/icons/Create';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {Container} from \"@material-ui/core\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nclass ListProductComponent extends React.Component{\n\n\n\n\n    constructor(props) {\n        super(props);\n        this.state ={\n            products: []\n        };\n        this.loadProductList = this.loadProductList.bind(this);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadProductList();\n    }\n\n    loadProductList() {\n        productService.listProduct()\n            .then((res) => {\n                let data = resolveResponse(res);\n               // this.setState({products: data.result.elements})\n\n                data = [{\n                    productName: \"Vijay\",\n                    active:\"yes\",\n\n                },{\n                    productName: \"Vijay\",\n                    active:\"yes\",\n\n                },{\n                    productName: \"Vijay\",\n                    active:\"yes\",\n\n                }]\n\n               this.setState({products: data})\n            });\n    }\n\n    addProduct() {\n        this.props.history.push('/add-product');\n    }\n\n    editProduct(productId) {\n        window.localStorage.setItem(\"selectedProductId\", productId);\n        this.props.history.push('/edit-product');\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n\n  \n\n    render(){\n        return(\n           <>\n            <Typography variant=\"h5\" >Verify Docs</Typography>\n                    {/* <Button variant=\"contained\" color=\"primary\" onClick={() => this.addProduct()}>\n                        Add Product\n                    </Button> */}\n            <Table >\n                <TableHead style={{wordWrap: 'normal'}}>\n                    <TableRow>\n                        <TableCell align=\"center\">Product Name</TableCell>\n                        <TableCell align=\"center\">Display Name</TableCell>\n                        <TableCell align=\"center\">Active</TableCell>\n                        <TableCell align=\"center\">Serving Time (in Mins)</TableCell>\n                        <TableCell align=\"center\">Priority</TableCell>\n                        <TableCell align=\"center\">Icon Url</TableCell>\n                        <TableCell align=\"center\">Online Booking</TableCell>\n                        <TableCell align=\"center\">Show Recent</TableCell>\n                        <TableCell align=\"center\">Help Text</TableCell>\n                        <TableCell align=\"center\">Help Text Image</TableCell>\n                        <TableCell align=\"center\">Actions</TableCell>\n\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {this.state.products.map(row => (\n                        <TableRow key={row.productName}>\n                            <TableCell component=\"th\" scope=\"row\" className=\"hidden\">\n                                {row.productName}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.displayName}</TableCell>\n                            <TableCell align=\"center\">{row.active ? 'Yes' : 'No'}</TableCell>\n                            <TableCell align=\"center\">{row.servingTimeInMins}</TableCell>\n                            <TableCell align=\"center\">{row.priority}</TableCell>\n                            <TableCell align=\"center\">{row.iconUrl}</TableCell>\n                            <TableCell align=\"center\">{this.convertBool(row.onlineBooking)}</TableCell>\n                            <TableCell align=\"center\">{this.convertBool(row.showRecent)}</TableCell>\n                            {/* <TableCell align=\"right\">{row.tagUrl}</TableCell>*/}\n                            <TableCell align=\"center\">{row.helpText}</TableCell>\n                            <TableCell align=\"center\">{row.helpTextImage}</TableCell>\n                            <TableCell align=\"center\" onClick={() => this.editProduct(row.id)}><CreateIcon /></TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n           </>\n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'center'\n    }\n}\n\n\nexport default ListProductComponent;","import React from 'react';\nimport MaterialTable from 'material-table';\nimport productService from \"../service/ProductService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\n\nclass SimpleAction extends React.Component {\n\n    loadVerifyDocsList() {\n        productService.listDocs()\n            .then((res) => {\n                let data = resolveResponse(res);\n              // this.setState({products: data.result.elements})\n\n                data = [{\n                    productName: \"Vijay\",\n                    active:\"yes\",\n\n                },{\n                    productName: \"Vijay\",\n                    active:\"yes\",\n\n                },{\n                    productName: \"Vijay\",\n                    active:\"yes\",\n\n                }]\n\n              this.setState({products: data})\n            });\n    }\n\n    addProduct() {\n        this.props.history.push('/add-product');\n    }\n\n    editProduct(productId) {\n        window.localStorage.setItem(\"selectedProductId\", productId);\n        this.props.history.push('/edit-product');\n    }\n \n  render() {\n    return (\n    \n      <MaterialTable\n        title=\"Document Verify\"\n        columns={[\n          { title: 'Name', field: 'name' },\n          { title: 'Surname', field: 'surname' },\n          { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n          {\n            title: 'Birth Place',\n            field: 'birthCity',\n            lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n          },\n          { title: 'Name', field: 'name' },\n          { title: 'Surname', field: 'surname' },\n          { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n          {\n            title: 'Birth Place',\n            field: 'birthCity',\n            lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n          },{ title: 'Name', field: 'name' },\n          { title: 'Surname', field: 'surname' },\n          { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n          {\n            title: 'Birth Place',\n            field: 'birthCity',\n            lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n          },\n        ]}\n        data={[\n          { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\n          { name: 'Zerya Betül', surname: 'Baran', birthYear: 2017, birthCity: 34 },\n          { name: 'Zerya Betül', surname: 'Baran', birthYear: 2017, birthCity: 34 },\n          { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\n          { name: 'Zerya Betül', surname: 'Baran', birthYear: 2017, birthCity: 34 },\n          { name: 'Zerya Betül', surname: 'Baran', birthYear: 2017, birthCity: 34 },\n          { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\n          { name: 'Zerya Betül', surname: 'Baran', birthYear: 2017, birthCity: 34 },\n          { name: 'Zerya Betül', surname: 'Baran', birthYear: 2017, birthCity: 34 },\n          { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\n          { name: 'Zerya Betül', surname: 'Baran', birthYear: 2017, birthCity: 34 },\n          { name: 'Zerya Betül', surname: 'Baran', birthYear: 2017, birthCity: 34 },\n          { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\n          { name: 'Vijay', surname: 'Baran', birthYear: 2017, birthCity: 34 },\n          { name: 'Zerya Betül', surname: 'Baran', birthYear: 2017, birthCity: 34 },\n\n        ]}        \n        actions={[\n          {\n            icon: 'save',\n            tooltip: 'Save User',\n            onClick: (event, rowData) => alert(\"You saved \" + rowData.name)\n          }\n        ]}\n      />\n    )\n  }\n}\n\n\n\nexport default SimpleAction;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\n//import { mainListItems, secondaryListItems } from '../LeftMenuBar';\nimport Chart from './Chart';\nimport Deposits from './Deposits';\nimport Orders from './Orders';\nimport AirtellLogo from '../airtellogo.png';\nimport CopyRight from '../CopyRight';\n\nimport StickyHeadTable from './StickyHeadTable'; \nimport productService from \"../service/ProductService\";\nimport ListProductComponent from \"./ListProductComponent\";\n\nimport SimpleAction from \"./SimpleAction\";\n\n\n\n\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function VerifyDocs() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n          SL MITRA Retailer Portal\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={2} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n        <img style={{height:30, marginRight:\"73px\"}} src={ AirtellLogo } />\n\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        {/* <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List> */}\n      </Drawer>\n\n      \n\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n          {/* <h1> Verify Docs </h1> */}\n\n          {/* <StickyHeadTable/> \n          <ListProductComponent/> */}\n\n          <SimpleAction/>\n\n\n\n            {/* <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper}>\n                <Chart />\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper className={fixedHeightPaper}>\n                <Deposits />\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Orders />\n              </Paper>\n            </Grid> */}\n          </Grid>\n        </Container>\n        <CopyRight />\n      </main>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport AuthService from \"./AuthService\";\nimport  * as amsConstant from \"../../utils/config\";\n\nclass RetailerAdminService {\n\n    listPack(data){\n       // return axios.get(amsConstant.RECHARGE_PACK_LISTING , '');\n       return axios.post(amsConstant.RECHARGE_PACK_LISTING, data, AuthService.getHeader());\n\n    }\n\n\n    getAllBanner(data){\n        return axios.post(amsConstant.GET_ALL_BANNERS_DETAILS,data,  AuthService.getHeader());\n    }\n\n    getOne(productId){\n        return axios.get(amsConstant.PRODUCT_API_BASE_URL + '/' + productId, AuthService.getHeader());\n    }\n\n    updateProduct(product) {\n        return axios.post(amsConstant.PRODUCT_API_BASE_URL, product, AuthService.getHeader());\n    }\n\n    addProduct(product) {\n        return axios.post(amsConstant.PRODUCT_API_BASE_URL, product, AuthService.getHeader());\n    }\n\n    deleteProduct(productId){\n        return axios.delete(amsConstant.PRODUCT_API_BASE_URL + '/' + productId, AuthService.getHeader());\n    }\n\n    upload(formData){\n        return axios.post(amsConstant.STORE_API_BASE_URL + '/resource/upload', formData, AuthService.getHeader());\n    }\n\n}\n\nexport default new RetailerAdminService();\n","import axios from \"axios\";\nimport * as api  from \"../src/utils/config\"\nconst performServerAction = axios.create({\n    baseURL: api.BASE_URL\n  });\nexport default performServerAction;","import React from \"react\";\nimport RetailerAdminService from \"../service/RetailerAdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CreateIcon from '@material-ui/icons/Create';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport * as moment from 'moment';\n\nimport ActivationService from \"../service/ActivationService\";\n\nclass RechargePack extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        this.state = {\n            products: [],\n        }\n    }\n\n\n    componentDidMount() {\n        this.loadPackList();\n     //  this.props.setPackLoaded(); \n        localStorage.setItem(\"lastUrl\",\"packs\");\n\n    }\n\n    loadPackList() {\n\n        var data = { allPacks:true, portal: true}; \n        \n        RetailerAdminService.listPack(data)\n            .then((res) => {\n                let data = resolveResponse(res);\n              console.log(data);\n                if(data && data.result){\n                    this.setState({products: data.result})\n                }\n            });\n    }\n\n    addProduct=(e)=> {\n        console.log(this.props)\n        this.props.history.push('/packadd');\n    }\n\n    editProduct(productId) {\n        window.localStorage.removeItem(\"selectedProductId\");\n        window.localStorage.setItem(\"selectedProductId\", productId);\n        this.props.history.push('/editpacks');\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    dateFormat(date){ \n        return moment.utc(date).format('DD-MM-YYYY HH:mm:ss A');\n    }\n  \n\n    render(){\n        console.log(this.props,\"PROPS\")\n      return(\n        <React.Fragment>\n            <PostLoginNavBar/>\n\n\n\n            <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n            <Typography variant=\"h5\" style={{ flex: 0 }} >Recharge Pack</Typography>\n                <Grid  container spacing={24} container\n                direction=\"row\"\n                justify=\"flex-end\"\n                >\n                <Button variant=\"contained\" color=\"secondry\" onClick={() => this.addProduct()}>\n                    Add Pack\n                </Button>      \n                </Grid>\n\n            <Table  size=\"small\"   aria-label=\"sticky table\" >\n                <TableHead style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                    <TableRow variant=\"head\">\n                          {/* <TableCell align=\"center\">Edit</TableCell> */}\n\n                          <TableCell align=\"center\">Icon</TableCell>\n\n                        {/* <TableCell align=\"center\">ProductId</TableCell> */}\n                        <TableCell align=\"center\">Connection Type</TableCell>\n                        <TableCell align=\"center\">Pack Type</TableCell>\n                        <TableCell align=\"center\">Amount</TableCell>\n\n                        <TableCell align=\"center\">Status</TableCell>\n                        <TableCell align=\"center\">Validity Days</TableCell>\n                        <TableCell align=\"center\">Validity Type</TableCell>\n                        <TableCell align=\"center\">Description</TableCell>\n                        <TableCell align=\"center\">Comment</TableCell>\n\n                        <TableCell align=\"center\">Start Date/Time</TableCell>\n                        <TableCell align=\"center\">End Date/Time</TableCell>\n\n                        <TableCell align=\"center\">Display Type</TableCell>\n                      \n\n                    </TableRow>\n                </TableHead>\n                <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                \n                    { this.state.products ? this.state.products.map(row => (\n                        <TableRow key={row.productId} onClick={() => this.editProduct(row.productId)}>\n                           {/* <TableCell align=\"center\" onClick={() => this.editProduct(row.productId)}><CreateIcon /></TableCell> */}\n\n                           <TableCell align=\"center\"> <img style={{width:\"80px\", height:\"40px\"}} src={row.imageURL} /> </TableCell>\n\n                           {/* <TableCell align=\"center\">{row.productId}</TableCell> */}\n                            <TableCell component=\"th\" scope=\"row\" className=\"hidden\">\n                                {row.connectionType}\n                            </TableCell>\n                            \n                            <TableCell align=\"center\">{row.packType}</TableCell>\n                            <TableCell align=\"center\">{row.amount}</TableCell>\n\n                            <TableCell align=\"center\">{row.active ? 'Active' : 'Inactive'}</TableCell>\n                            <TableCell align=\"center\">{row.validityDays}</TableCell>\n                            <TableCell align=\"center\">{row.validityType}</TableCell>\n                            <TableCell align=\"center\">{row.description}</TableCell>\n                            <TableCell align=\"center\">{row.comment}</TableCell>\n\n                            {/* {row.startDate.substring(0, 10)} */}\n                            <TableCell align=\"center\">{this.dateFormat(row.startDate)}</TableCell>\n                            {/* <TableCell align=\"center\">{row.endDate.substring(0, 10)}</TableCell> */}\n\n                            <TableCell align=\"center\">{this.dateFormat(row.endDate)}</TableCell>\n\n                            <TableCell align=\"center\">{row.displayType}</TableCell>\n                            \n                        </TableRow>\n                    )):<Spinner/>}\n                </TableBody>\n            </Table>\n\n            </Paper>\n            </React.Fragment> \n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'center'\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\nexport default connect(mapStateToProps,{setPackLoaded})(RechargePack);\n","import * as actionTypes from \"./types\";\nimport performServerAction from \"../api\"\nimport AuthService from \"../components/service/AuthService\";\n\nexport const setPackLoaded = ()=> async dispatch=> {\n    var data = { allPacks:true, portal: true}; \n    const response = await performServerAction.post('getPrepaidPacks', data)\n    \n    dispatch( { type: actionTypes.SET_PACK_LOADED,payload:response });\n  };\n  export const getPackById = (id)=> async dispatch=> {\n    try{\n      const response = await performServerAction.post('/getPrepaidPacksById', { productId : id}, AuthService.getHeader());\n   \n      return  dispatch( { type: actionTypes.GET_PACK_INFO_BY_ID,payload:response });\n    }catch(err){\n      console.log(err,\"ERRRR\")\n    }\n   \n  };\n  export const editPackInfo = (updatedInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",updatedInfo);\n      updatedInfo.activationStatus =  String( updatedInfo.activationStatus );\n      updatedInfo.displayOrder =  String( updatedInfo.displayOrder );\n      updatedInfo.productId =  String( updatedInfo.productId );\n      updatedInfo.validityDays =  String( updatedInfo.validityDays );\n      updatedInfo.active =  String( updatedInfo.active );\n     // updatedInfo.ftr =  String( updatedInfo.ftr );\n      updatedInfo.isFtr =  String( updatedInfo.ftr );\n\n      \n\n\n      const response = await performServerAction.post('updatePrepaidPack',updatedInfo, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };\n  export const AddPackInfo = (packInfo)=> async dispatch=> {\n    try{\n      console.log(\"ERROR\",packInfo)\n      const response = await performServerAction.post('getPrepaidPacks',{packInfo}, AuthService.getHeader());\n      dispatch( { type: actionTypes.EDIT_PACK_INFO,payload:response });\n    }\n    catch(err){\n      console.log(err)\n    }\n  };","import axios from 'axios';\nimport AuthService from \"./AuthService\";\nimport  * as amsConstant from \"../../utils/config\";\n\nclass ProductService {\n\n    listProduct(){\n        return axios.get(amsConstant.PRODUCT_API_BASE_URL+ '?onlyActive=false', AuthService.getHeader());\n    }\n\n    listActiveProduct(){\n        return axios.get(amsConstant.PRODUCT_API_BASE_URL, AuthService.getHeader());\n    }\n\n    getOne(productId){\n        return axios.get(amsConstant.PRODUCT_API_BASE_URL + '/' + productId, AuthService.getHeader());\n    }\n\n    updateProduct(product) {\n        return axios.post(amsConstant.PRODUCT_API_BASE_URL, product, AuthService.getHeader());\n    }\n\n\n    uploadPackImage(formData) {\n        return axios.post(amsConstant.UPLAOD_PACK_IMAGE, formData, AuthService.getHeader());\n    }\n\n    addPack(pack) {\n        return axios.post(amsConstant.SAVE_PACK, pack, AuthService.getHeader());\n    }\n\n    addBanner(pack) {\n        return axios.post(amsConstant.SAVE_BANNER, pack, AuthService.getHeader());\n    }\n\n    updateBanner(pack) {\n        return axios.post(amsConstant.UPDATE_BANNER, pack, AuthService.getHeader());\n    }\n\n\n\n    getOneBanner(id) {\n        return axios.get(amsConstant.GET_ONE_BANNER+\"?bannerId=\"+id, AuthService.getHeader());\n\n    }\n    deleteProduct(productId){\n        return axios.delete(amsConstant.PRODUCT_API_BASE_URL + '/' + productId, AuthService.getHeader());\n    }\n\n    upload(formData){\n        return axios.post(amsConstant.STORE_API_BASE_URL + '/resource/upload', formData, AuthService.getHeader());\n    }\n\n}\n\nexport default new ProductService();\n","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Notify from \"../utils/Notify\";\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nexport default function MaterialUIPickers(props) {\n\n  console.log(\"startDatestartDate,\",props ); \n  var d = new Date(); \n  d.setHours(0,0,0,0);\n\n  // The first commit of Material-UI\n  var [selectedStartDate, setSelectedStartDate] = React.useState(d);\n  var [selectedEndDate, setSelectedEndDate] = React.useState(d);\n\n  const handleStartDateChange = date => {\n    setSelectedStartDate(date);\n    props.callbackFromParent.myCallback(date,\"START_DATE\");\n    var startDateMili = new Date(date).getTime(); \n    document.getElementById(\"startDateMili\").value = startDateMili; \n    var endDateMili = document.getElementById(\"endDateMili\").value; \n    if(startDateMili > endDateMili  ){\n      Notify.showError(\"Start date time can't be grater than end date.\");\n    }\n  };\n\n\n\n  const handleEndDateChange = date => {\n    setSelectedEndDate(date);\n    props.callbackFromParent.myCallback(date,\"END_DATE\");\n    var endDateMili = new Date(date).getTime(); \n    document.getElementById(\"endDateMili\").value = endDateMili; \n\n   var startDateMili = document.getElementById(\"startDateMili\").value; \n   if(endDateMili  < startDateMili){\n      Notify.showError(\"End Date time can't be less than start date.\");\n    }\n   \n  };\n\n  var selectedDate =  document.getElementById(\"startDateMili\") && document.getElementById(\"startDateMili\").value; \n  if(props.callbackFromParent && props.callbackFromParent.startDate){\n    selectedStartDate = new Date(props.callbackFromParent.startDate).getTime(); \n   // document.getElementById(\"startDateMili\").value = props.callbackFromParent.startDate;\n  }\n\n  var endDateMili =  document.getElementById(\"endDateMili\") && document.getElementById(\"endDateMili\").value; \n  //endDateMili ==''\n  if(props.callbackFromParent && props.callbackFromParent.endDate){\n    selectedEndDate = new Date(props.callbackFromParent.endDate).getTime();  \n    //document.getElementById(\"endDateMili\").value = props.callbackFromParent.endDate;\n\n  }\n\n\n console.log(\"propes\", props)\n return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container justify=\"space-around\">\n     \n        <KeyboardDatePicker\n          disablePast=\"true\"\n          margin=\"normal\"\n          required={true}\n          id=\"date-picker-dialog\"\n          label={props.callbackFromParent.firstLavel}\n          format=\"dd-MM-yyyy\"\n          value={selectedStartDate}\n          onChange={handleStartDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n         <KeyboardTimePicker\n          margin=\"normal\"\n          id=\"time-picker\"\n          label=\"Start Time\"\n          value={selectedStartDate}\n          onChange={handleStartDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change time',\n          }}\n        />\n        \n        <KeyboardDatePicker\n          disablePast=\"true\"\n          margin=\"normal\"\n          required={true}\n          id=\"date-picker-dialog\"\n          label={props.callbackFromParent.secondLavel}\n          format=\"dd-MM-yyyy\"\n          value={selectedEndDate}\n          onChange={handleEndDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n       \n       <KeyboardTimePicker\n          margin=\"normal\"\n          id=\"time-picker\"\n          label=\"End Time\"\n          value={selectedEndDate}\n          onChange={handleEndDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change time',\n          }}\n        />\n        \n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport pack from \"../service/PackService\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container, Paper } from \"@material-ui/core\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Notify from \"../../utils/Notify\";\n//import MaterialUIPickers from \"./MaterialUIPickers\";\nimport MaterialUIPickers from \"../../utils/MaterialUIPickers\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\n\nclass RechargePackAdd extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        activationStatus: \"\",\n        amount: \"\",\n        comment: \"\",\n        connectionType: \"\",\n        dataDay: \"\",\n        dataDayType: \"\",\n        description: \"\",\n        displayOrder: \"\",\n        displayType: \"\",\n        endDate: new Date(),\n        imageURL: \"\",\n        isFtr: \"\",\n        nightDay: \"\",\n        nightDayType: \"\",\n        packType: \"\",\n        startDate: new Date(),\n        userCategory: \"\",\n        validityDays: \"\",\n        validityType: \"\",\n        file: null,\n        packtypevalue: [], \n        packTypeitem:''\n    };\n    this.savePack = this.savePack.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onChangePack = this.onChangePack.bind(this);\n    this.myCallback = this.myCallback.bind(this);\n  }\n  myCallback = (date, fromDate) => {\n    if (fromDate === \"START_DATE\") {\n      this.setState({ startDate: new Date(date).getTime() });\n    } else if (fromDate === \"END_DATE\") {\n      this.setState({ endDate: new Date(date).getTime() });\n    }\n  };\n\n\n  componentDidMount() {\n    localStorage.setItem(\"lastUrl\",\"packadd\");\n  }\n\n  render() {\n\n    const dateParam = {\n      myCallback: this.myCallback,\n      startDate: '',\n      endDate:'', \n      firstLavel : \"Start Date\", \n      secondLavel : \"End Date\"\n\n    }\n    \n    console.log(this.state, \"STATE_MATTERS\");\n    return (\n      <React.Fragment>\n        <PostLoginNavBar />\n        <Container maxWidth=\"sm\">\n          <Paper style={{ padding: \"20px\" }}>\n            <Typography variant=\"h5\" style={styles.textStyle}>\n              Add Recharge Pack\n            </Typography>\n            <form style={styles.formContainer}>\n             \n            <Grid container spacing={2} direction=\"row\" justify=\"flex-end\" >\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Amount\"\n                  required={true}\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"99999\"\n                  fullWidth\n                  name=\"amount\"\n                  value={this.state.amount}\n                  onChange={this.onChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n              <TextField\n                label=\"Pack Name\"\n                type=\"\"\n                rows={2}\n                fullWidth\n                margin=\"none\"\n                min=\"1\"\n                max=\"15\"\n                name=\"comment\"\n                value={this.state.comment}\n                onChange={this.onChange} />\n                </Grid>\n\n              </Grid>\n\n\n              <Grid container direction=\"row\" justify=\"flex-end\" >\n\n\n              <TextField\n                label=\"Description\"\n                fullWidth\n                multiline \n                variyant \n                rows={2} \n                margin=\"normal\"\n                name=\"description\"\n                value={this.state.description}\n                onChange={this.onChange}\n              />\n            \n             </Grid>\n\n             <Grid container spacing={2} direction=\"row\" justify=\"flex-end\" >\n\n\n             <Grid item xs={12} sm={6}>\n\n\n            <FormControl style={styles.multiselect}>\n              <InputLabel htmlFor=\"Connection Type\" required={true}>\n                Connection Type\n              </InputLabel>\n              <Select\n                name=\"connectionType\"\n                value={this.state.connectionType}\n                onChange={this.onChange}\n              >\n                <MenuItem value=\"prepaid\">Prepaid</MenuItem>\n                <MenuItem value=\"postpaid\">Postpaid</MenuItem>\n              </Select>\n            </FormControl>\n            </Grid>\n              \n              <Grid item xs={12} sm={6}>\n              \n                <TextField\n                  label=\"Display Order\"\n                  required={true}\n                  fullWidth\n                  type=\"number\"\n                  margin=\"none\"\n                  name=\"displayOrder\"\n                  value={this.state.displayOrder}\n                  onChange={this.onChange}\n                />\n\n                \n              </Grid>\n\n            \n              \n              </Grid>\n              <MaterialUIPickers callbackFromParent={dateParam} />\n              <input type=\"hidden\" id=\"startDateMili\" /> \n              <input type=\"hidden\" id=\"endDateMili\" /> \n\n              <Grid container spacing={2} direction=\"row\" justify=\"flex-end\" >\n\n              <Grid item xs={12} sm={6}>\n                <FormControl style={styles.multiselect}>\n                  <InputLabel htmlFor=\"Pack Type\" >\n                    Pack \n                  </InputLabel>\n                  <Select\n                    name=\"packType\"\n                    value={this.state.packType}\n                    onChange={this.onChangePack}\n                  >\n                    <MenuItem value=\"Data\">Data</MenuItem>\n                    <MenuItem value=\"Voice\">Voice</MenuItem>\n                    <MenuItem value=\"Combo\">Combo</MenuItem>\n                    <MenuItem value=\"IDD\">IDD</MenuItem>\n                    <MenuItem value=\"SMS\">SMS</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n             \n              <Grid item xs={12} sm={6}>\n                <FormControl style={styles.multiselect}>\n                  <InputLabel htmlFor=\"Pack Type\" >\n                    Pack Type\n                  </InputLabel>\n                  <Select\n                    name=\"packTypeitem\"\n                    value={this.state.packTypeitem}\n                    onChange={this.onChange}\n                  >\n\n                  {this.state.packtypevalue ? this.state.packtypevalue.map(name => (\n                      <MenuItem key={name} value={name} >\n                          {name}\n                      </MenuItem>\n                  )): \"\"}\n                    \n                  </Select>\n                </FormControl>\n              </Grid>\n            \n              </Grid>\n             \n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Data Day\"\n                  // required={true}\n                  // type=\"number\"\n                  min=\"1\"\n                  max=\"99999\"\n                  fullWidth\n                  name=\"dataDay\"\n                  value={this.state.dataDay}\n                  onChange={this.onChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n              <TextField\n              label=\"Type\"\n              style={{\n                marginLeft: \"18px\"\n              }}\n              // required={true}\n              fullWidth\n              margin=\"none\"\n              name=\"dataDayType\"\n              value={this.state.dataDayType}\n              onChange={this.onChange}\n            />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Data Night\"\n                  // required={true}\n                 // type=\"number\"\n                  min=\"1\"\n                  max=\"99999\"\n                  fullWidth\n                  name=\"nightDay\"\n                  value={this.state.nightDay}\n                  onChange={this.onChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                label=\"Type\"\n                style={{\n                  marginLeft: \"18px\"\n                }}\n                // required={true}\n                fullWidth\n                margin=\"none\"\n                name=\"nightDayType\"\n                value={this.state.nightDayType}\n                onChange={this.onChange}\n              />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Validity Days\"\n                  \n                  type=\"number\"\n                  min=\"1\"\n                  max=\"99999\"\n                  fullWidth\n                  name=\"validityDays\"\n                  value={this.state.validityDays}\n                  onChange={this.onChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Validity Type\"\n                  style={{\n                    marginLeft: \"18px\"\n                  }}\n                  \n                  fullWidth\n                  margin=\"none\"\n                  name=\"validityType\"\n                  value={this.state.validityType}\n                  onChange={this.onChange}\n                />\n              </Grid>\n             \n\n              <Grid item xs={12} sm={6}>\n                <FormControl style={styles.multiselect}>\n                  <InputLabel htmlFor=\"Activation status\" required={true}>\n                    Status\n                  </InputLabel>\n                  <Select\n                    name=\"activationStatus\"\n                    value={this.state.activationStatus}\n                    onChange={this.onChange}\n                  >\n                    <MenuItem value=\"true\">Active</MenuItem>\n                    <MenuItem value=\"false\">In Active</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl style={styles.multiselect}>\n                  <InputLabel htmlFor=\"Activation status\" required={true}>\n                    FTR or Normal\n                  </InputLabel>\n                  <Select\n                    name=\"isFtr\"\n                    value={this.state.isFtr}\n                    onChange={this.onChange}\n                  >\n                    <MenuItem value=\"true\">FTR(First Time Recharge)</MenuItem>\n                    <MenuItem value=\"false\">Normal</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid\n                container\n                spacing={24}\n                container\n                direction=\"row\"\n                justify=\"flex-end\"\n              >\n                <Grid item xs={12} sm={6}>\n                  <FormControl style={styles.multiselect}>\n                    <InputLabel htmlFor=\"display-type\" required={true}>\n                      Display Type\n                    </InputLabel>\n                    <Select\n                      name=\"displayType\"\n                      value={this.state.displayType}\n                      onChange={this.onChange}\n                    >\n                      <MenuItem value=\"details\">Details</MenuItem>\n                      <MenuItem value=\"detailsWithImage\">\n                        Details with Image\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <FormControl style={styles.multiselect}>\n                    <input\n                      style={{\n                        marginTop: \"31px\",\n                        marginLeft: \"18px\"\n                      }}\n                      type=\"file\"\n                      name=\"file\"\n                     // onChange={this.onChangeHandler}\n                      onChange={this.onChangeFileUpload}\n                    />\n                  </FormControl>\n                  \n                </Grid>\n              </Grid>\n             \n\n              \n\n\n\n                     \n<Grid container spacing={2} container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\">\n                   <br />  <br /> <br />\n                   <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.savePack}\n              >\n                Save\n              </Button>\n\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ marginLeft: \"150px\" }}\n                onClick={this.cancel}\n              >\n                Cancel\n              </Button>\n            </Grid>\n\n           \n            </form>\n          </Paper>\n        </Container>\n      </React.Fragment>\n    );\n  }\n\n  savePack = e => {\n    \n    e.preventDefault();\n    if(!this.state.amount || !this.state.displayOrder || !this.state.startDate || !this.state.endDate || !this.state.packType  ){\n        Notify.showError(\"Missing required fields\");\n        return;\n    }\n    if(this.state.displayType == \"detailsWithImage\" && !this.state.file){\n      Notify.showError(\"Details With Image required to upload images\");\n      return;\n    }\n\n    if(!this.state.startDate){\n      this.state.startDate = new Date().getTime();\n    }\n\n    if(!this.state.endDate){\n      this.state.endDate = new Date().getTime();\n    }\n\n    // const packs = {\n    //   amount: this.state.amount,\n    //   displayOrder: this.state.displayOrder,\n    //   comment: this.state.comment,\n    //   startDate: this.state.startDate,\n    //   endDate:this.state.endDate,\n    //   pack: this.state.packType,\n    //   packType: this.state.packTypeitem,\n    //   dataDay: this.state.dataDay,\n    //   dataDayType: this.dataDayType,\n    //   nightDay: this.state.nightDay,\n    //   nightDayType: this.state.nightDayType,\n    //   validityDays: this.state.validityDays,\n    //   validityType: this.state.validityType,\n    //   connectionType: this.state.connectionType,\n    //   displayType: this.state.displayType,\n    //   imageURL: this.state.imageURL,\n    //   description: this.state.description,\n    //   activationStatus: this.state.activationStatus,\n    //   isFtr: this.state.isFtr,\n\n    // };\n\n    let startDatetime = new Date(this.state.startDate).getTime()\n    let endDatetime = new Date(this.state.endDate).getTime()\n    if(startDatetime == endDatetime){\n      Notify.showError(\"Start and end date time should not be same\");\n      return;\n    }\n\n    const formData = new FormData();\n\n    if(this.state.displayType===\"detailsWithImage\" && this.state.file){\n      formData.append('file',this.state.file);\n    }\n\n    new Date(this.state.startDate).getTime()\n\n    formData.append('amount', this.state.amount);\n    formData.append('displayOrder', this.state.displayOrder);\n    formData.append('startDate',startDatetime);\n    formData.append('endDate', endDatetime);\n    formData.append('pack', this.state.pack);\n    formData.append('packType', this.state.packType);\n    formData.append('dataDay', this.state.dataDay);\n    formData.append('dataDayType', this.state.dataDayType);\n    formData.append('nightDay', this.state.nightDay);\n    formData.append('nightDayType', this.state.nightDayType);\n    formData.append('validityDays', this.state.validityDays);\n    formData.append('validityType', this.state.validityType);\n    formData.append('connectionType', this.state.connectionType);\n    formData.append('displayType', this.state.displayType);\n    formData.append('description', this.state.description);\n    formData.append('activationStatus', this.state.activationStatus);\n    formData.append('comment', this.state.comment);\n    formData.append('isFtr', this.state.isFtr);\n\n\n   // console.log(packs, \"PACKS\");\n    pack.addPack(formData).then(res => {\n      resolveResponse(res, \"Product saved successfully.\");\n      this.props.history.push(\"/packs\");\n    });\n  };\n\n  cancel = e => {\n    this.props.history.push(\"/packs\");\n  };\n\n\n\n\n\n  onChangeFileUpload = e => this.setState({\n    //  file:e.target.files[0]\n      [e.target.name]: e.target.files[0]\n  })\n\n\n\n  onChangeHandler = event => {\n    const formData = new FormData();\n    formData.append('file',event.target.files[0]);\n    // const config = {\n    //     headers: {\n    //         'content-type': 'multipart/form-data'\n    //     }\n    // };\n\n    // pack.uploadPackImage(formData).then(res => {\n     \n    //  var data =  resolveResponse(res, \"Product saved successfully.\");\n\n    //   this.setState({\n    //        imageURL: data.result,\n    //    });\n\n    // });\n\n\n    //http://125.16.74.160:30611\n    // axios.post(\"/SLRetailer/recharges/uploadRechargeImage\",formData,config)\n    //     .then((response) => {\n    // this.setState({\n    //     imageURL: response.data.result,\n    // });\n    //     }).catch((error) => {\n    //         console.log(error,\"ERROR\")\n    // });\n   \n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n\n  onChangePack = e =>  {\n    this.setState({ [e.target.name]: e.target.value });\n    \n    var voicetype = ['Type Rs', 'Minutes', 'Seconds']; \n    var datatype = ['Anytime (Type MB, GB)', 'Nighttime (Type MB, GB)']; \n    var combotype = ['Combo']; \n    var iddsmstype = ['Type Rs', \"SMS\"]; \n\n\n    if( e.target.value == \"Voice\"){\n      this.setState({packtypevalue:  voicetype});\n    }\n    if( e.target.value == \"Data\"){\n      this.setState({packtypevalue:  datatype});\n    }\n    if( e.target.value == \"Combo\"){\n      this.setState({packtypevalue:  combotype});\n    }\n    if( e.target.value == \"IDD\" || e.target.value == \"SMS\" ){\n      this.setState({packtypevalue:  iddsmstype});\n    }\n\n  }\n}\n\nconst styles = {\n  formContainer: {\n    display: \"flex\",\n    flexFlow: \"row wrap\"\n  },\n\n  textStyle: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  input: {\n    display: \"none\"\n  },\n\n  textStyle: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  multiselect: {\n    minWidth: \"100%\",\n    marginBottom: \"10px\"\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  chip: {\n    margin: 3\n  }\n  \n};\n\nexport default RechargePackAdd;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport pack from \"../service/PackService\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container, Paper } from \"@material-ui/core\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport ActivationService from \"../service/ActivationService\";\nimport Input from \"@material-ui/core/Input\";\n\n\nimport Notify from \"../../utils/Notify\";\n//import MaterialUIPickers from \"./MaterialUIPickers\";\nimport MaterialUIPickers from \"../../utils/MaterialUIPickers\";\n\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport  * as amsConstant from \"../../utils/config\";\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\n\nclass BannerAdd extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        title: '',\n        order: '',\n        active: \"\",\n        bannerType:'',\n        section:'', \n        categoryType:'', \n        category:'',\n        forAndroid:'',\n        forIos:'', \n        forWindows:'', \n        validityDays:\"\",\n        updateTime:'',\n        publishDay:'',\n        expireDay: \"\",\n        updateBy:'', \n        imageURL:'', \n        file: null,\n        link:'',\n        listofzones:[],\n        selectedZone:[],\n        zone:'',\n        selectAllzone:'Select All'\n    };\n    this.savePack = this.savePack.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.myCallback = this.myCallback.bind(this);\n    this.zoneChange = this.zoneChange.bind(this);\n\n  }\n  myCallback = (date, fromDate) => {\n    if (fromDate === \"START_DATE\") {\n      this.setState({ publishDay: new Date(date).getTime() });\n    } else if (fromDate === \"END_DATE\") {\n      this.setState({ expireDay: new Date(date).getTime()  });\n    }\n  };\n\n  zoneChange = (e) =>{\n    this.setState({[e.target.name]: e.target.value})\n    \n    if(e.target.value.includes(\"Select All\")){\n      this.setState({selectedZone: this.state.listofzones})\n      this.setState({selectAllzone: \"Remove All\"})\n    }\n\n    if(e.target.value.includes(\"Remove All\")){\n      this.setState({selectedZone: []})\n      this.setState({selectAllzone: \"Select All\"})\n    }\n\n  }\n  \n  componentDidMount() {\n    localStorage.setItem(\"lastUrl\",\"add-banner\");\n\n    ActivationService.getStaticData('BOA').then(res => {\n      let data = resolveResponse(res);\n      this.setState({listofzones: data.result && data.result.zones}) \n  })\n\n  }\n\n  render() {\n    const dateParam = {\n      myCallback: this.myCallback,\n      startDate: '',\n      endDate:'', \n      firstLavel : \"Publish Date\", \n      secondLavel : \"End Date\"\n    }\n    console.log(this.state, \"STATE_MATTERS\");\n    return (\n      <React.Fragment>\n        <PostLoginNavBar />\n        \n\n                <Container maxWidth=\"sm\">\n                  <br />\n                    <Paper style={{padding:\"10px\"}}>\n                    <Typography variant=\"h5\" style={styles.textStyle}> Banner Details</Typography>\n                    <form style={styles.formContainer}>\n                    \t\t\t\n                        <TextField label=\"Banner Title\" required={true} value={this.state.title} fullWidth name=\"title\"  onChange={this.onChange}/>\n \n                        <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel htmlFor=\"Connection Type\" required={true}>Type of Banner</InputLabel>\n                                <Select name=\"bannerType\" value={this.state.bannerType} onChange={this.onChange}>\n                                    <MenuItem value=\"prepaid\">Prepaid</MenuItem>\n                                    <MenuItem value=\"postpaid\">Postpaid</MenuItem>\n                                </Select>\n                            </FormControl>                    \n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel  required={true}>Order</InputLabel>\n                                <Select name=\"order\" value={this.state.order} onChange={this.onChange}>\n                                    <MenuItem value=\"1\">1</MenuItem>\n                                    <MenuItem value=\"2\">2</MenuItem>\n                                    <MenuItem value=\"3\">3</MenuItem>\n                                    <MenuItem value=\"4\">4</MenuItem>\n                                    <MenuItem value=\"5\">5</MenuItem>\n                                </Select>\n                            </FormControl>                        \n                        </Grid>\n                      \n\n                         {/* <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel htmlFor=\"Active\" required={true}>Section</InputLabel>\n                                <Select name=\"section\" value={this.state.section} onChange={this.onChange}>\n                                    <MenuItem value=\"Section1\">Section1</MenuItem>\n                                    <MenuItem value=\"Section2\">Section2</MenuItem>\n                                    <MenuItem value=\"Section3\">Section3</MenuItem>\n                                    <MenuItem value=\"Section4\">Section4</MenuItem>\n\n                                </Select>\n                            </FormControl>                        \n                        </Grid> */}\n\n\n\n                        <Grid item xs={12} sm={6}>\n                          <FormControl style={styles.multiselect}>\n                              <InputLabel htmlFor=\"Connection Type\" required={true}>Category Type</InputLabel>\n                              <Select name=\"categoryType\" value={this.state.categoryType} onChange={this.onChange}>\n                                  <MenuItem value=\"Recharge\">Recharge</MenuItem>\n                                  <MenuItem value=\"Other\"> Other </MenuItem>\n                              </Select>\n                          </FormControl>                   \n                        </Grid>\n\n\n                        {/* <Grid item xs={12} sm={6}>\n                          <FormControl style={styles.multiselect}>\n                              <InputLabel htmlFor=\"\" required={true}>Category</InputLabel>\n                              <Select name=\"category\" value={this.state.category} onChange={this.onChange}>\n                                  <MenuItem value=\"bonus\">Bonus</MenuItem>\n                                  <MenuItem value=\"Bonus\">Other</MenuItem>\n                              </Select>\n                          </FormControl>\n                        </Grid> */}\n                        \n                        <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel htmlFor=\"Active\" required={true}>Status</InputLabel>\n                                <Select name=\"active\" value={this.state.active} onChange={this.onChange}>\n                                    <MenuItem value=\"true\">Active</MenuItem>\n                                    <MenuItem value=\"false\">In Active</MenuItem>\n                                </Select>\n                            </FormControl>                        \n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <TextField label=\"Banner Link\" name=\"link\" value={this.state.link} fullWidth  onChange={this.onChange}/>\n                        </Grid>\n\n                        <Grid item xs={10} sm={6}> \n                                <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                        <Select\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        multiple\n                                        name=\"selectedZone\"\n                                        value={this.state.selectedZone}\n                                        onChange={this.zoneChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                          <MenuItem key={this.state.selectAllzone} value={this.state.selectAllzone} >\n                                            <b> {this.state.selectAllzone}   </b>                                         \n                                          </MenuItem>\n\n                                        {this.state.listofzones ? this.state.listofzones.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                        </Select>\n                                    </FormControl>\n                            </Grid>\n\n                        {/* <Grid item xs={12} sm={12}>\n                            <InputLabel htmlFor=\"\" required={true}> Select the Devices</InputLabel> \n                            <FormControlLabel control=\n                                {<Checkbox checked={this.state.forAndroid} name=\"forAndroid\" onChange={this.handleChange('forAndroid')}\n                                            value={this.state.forAndroid} /> } label=\"Android\" color=\"primary\"/>\n                            <FormControlLabel control=\n                                {<Checkbox checked={this.state.forIos} name=\"forIos\" onChange={this.handleChange('forIos')}\n                                            value={this.state.forIos}/> }  label=\"IOS\" />\n                            <FormControlLabel control=\n                                {<Checkbox checked={this.state.forWindows} name=\"forWindows\" onChange={this.handleChange('forWindows')}\n                                            value={this.state.forWindows}/> }  label=\"Windows\" />\n\n                        </Grid> */}\n\n\n                        {/* <TextField label=\"Publish Day\" type=\"number\" multiline rows={1} fullWidth margin=\"none\" min=\"1\" max=\"999\" name=\"priority\" value={this.state.priority} onChange={this.onChangePriority}/> */}\n\n                        {/* <input accept=\"image/*\" style={styles.input} id=\"contained-button-file\" type=\"file\" onChange={this.onProductIconFileChange} /> */}\n                        {/* <label htmlFor=\"contained-button-file\" style={{margin: '15px 20px 0 0', }}>\n                            <Button variant=\"contained\" size=\"large\" component=\"span\">\n                                Upload Product Icon\n                                <CloudUploadIcon />\n                            </Button>\n                        </label> */}\n\n                        {/* <Grid item xs={12} sm={6}>\n                                 <TextField label=\"Validity Days\" required={true} type=\"number\" min=\"1\" max=\"999\" fullWidth name=\"validityDays\" value={this.state.validityDays} onChange={this.onChange}/>\n                        </Grid> */}\n\n                      \n\n{/*                         \n                        <Grid item xs={12} sm={6}>\n                                 <TextField label=\"Expire Days\" required={true} type=\"number\" min=\"1\" max=\"999\" fullWidth name=\"servingTimeInMins\" value={this.state.servingTimeInMins} onChange={this.onChangeServingTime}/>\n                        </Grid> */}\n\n                        \n                      <MaterialUIPickers callbackFromParent={dateParam} />\n                        <input type=\"hidden\" id=\"startDateMili\" /> \n                        <input type=\"hidden\" id=\"endDateMili\" /> \n\n\n                        <Grid  container spacing={1} container direction=\"row\" justify=\"flex-end\">\n\n                            <Grid item xs={12} sm={3}>\n                              <FormControl style={styles.multiselect}>\n                                  <InputLabel htmlFor=\"display-type\" required={true}>Upload Banner</InputLabel>\n                              </FormControl>\n                            </Grid>\n\n                            <Grid item xs={12} sm={9}>\n                                <FormControl style={styles.multiselect}>\n                                  <input\n                                    style={{\n                                      marginTop: \"31px\",\n                                      marginLeft: \"18px\"\n                                    }}\n                                    type=\"file\"\n                                    name=\"file\"\n                                    // onChange={this.onChangeHandler}\n                                    onChange={this.onChangeFileUpload}\n                                  />\n                                </FormControl>\n                            </Grid>\n                            \n                    </Grid>\n                    \n\n                    {/* <TextField label=\"Comment\" fullWidth margin=\"normal\" name=\"helpTextImage\" value={this.state.helpTextImage} onChange={this.onChange}/> */}\n                    <Grid  container spacing={24} container\n                        direction=\"row\"\n                        justify=\"center\">\n                          \n                      <Button variant=\"contained\" color=\"primary\"   onClick={this.savePack}>Save</Button>\n                      <Button variant=\"contained\" color=\"secondary\" style={{marginLeft: '150px'}} onClick={this.cancel}>Cancel</Button>\n                    </Grid>\n                    \n                  </form>\n                    </Paper>\n                </Container>\n\n\n\n      </React.Fragment>\n    );\n  }\n\n  savePack = e => {\n\n    \n    e.preventDefault();\n   // if(!this.state.title ||!this.state.bannerType || !this.state.order || !this.state.section || !this.state.categoryType || !this.state.category || !this.state.publishDay || !this.state.expireDay || !this.state.active ){\n    if(!this.state.title ||!this.state.bannerType || !this.state.order   ){\n      Notify.showError(\"Missing required fields\");\n        return;\n    }\n\n    var startDateMili =  document.getElementById(\"startDateMili\").value; \n    var endDateMili = document.getElementById(\"endDateMili\").value; \n    if(startDateMili > endDateMili  ){\n      Notify.showError(\"Start date time can't be grater than end date.\");\n      return;\n    }\n\n   if(endDateMili  < startDateMili){\n      Notify.showError(\"End Date time can't be less than start date.\");\n      return;\n    }\n    \n   \n    if(!this.state.file){\n      Notify.showError(\"Missing required image upload\");\n      return;\n    }\n\n    \n    var userDetails = localStorage.getItem(\"userDetails\")\n    userDetails = userDetails && JSON.parse(userDetails);\n\n\n    const formData = new FormData();\n    formData.append('file',this.state.file);\n    formData.append('title', this.state.title);\n    formData.append('order', this.state.order);\n\n    formData.append('active', this.state.active);\n    formData.append('bannerType', this.state.bannerType);\n    // formData.append('section', this.state.section);\n    // formData.append('forAndroid', this.state.forAndroid);\n    // formData.append('forIos', this.state.forIos);\n    // formData.append('forWindows', this.state.forWindows);\n\n    // formData.append('section', '');\n    // formData.append('forAndroid', '');\n    // formData.append('forIos', '');\n    // formData.append('forWindows', '');\n    //formData.append('category', this.state.category);\n\n    formData.append('link', this.state.link);\n    formData.append('zones',this.state.selectedZone.length ? this.state.selectedZone : null);\n\n    if(!this.state.publishDay){\n      this.state.publishDay = new Date().getTime();\n    }\n\n    if(!this.state.expireDay){\n      this.state.expireDay = new Date().getTime();\n    }\n\n    formData.append('publishDay', this.state.publishDay);\n    formData.append('expireDay', this.state.expireDay);\n    formData.append('categoryType', this.state.categoryType);\n    \n\n    formData.append('updateBy', userDetails && userDetails.loginId);\n\n    pack.addBanner(formData).then(res => {\n      var data = resolveResponse(res, \"Baneer saved successfully.\");\n     // Notify.showSuccess(\"Baneer saved successfully.\");\n      console.log(\"Banner Response:\", data); \n      this.props.history.push(\"/banners\");\n\n    });\n  };\n\n  cancel = e => {\n    this.props.history.push(\"/banners\");\n  };\n\n\n\n  handleChange = name => event => {\n    this.setState({ ...this.state, [name]: event.target.checked });\n  };\n\n\n\n\n  onChangeFileUpload = e => this.setState({\n    //  file:e.target.files[0]\n      [e.target.name]: e.target.files[0]\n  })\n\n\n\n  onChangeHandler = event => {\n    const formData = new FormData();\n    formData.append('file',event.target.files[0]);\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    };\n    axios.post(amsConstant.UPLOAD_IMG_BANNER,formData,config)\n        .then((response) => {\n    this.setState({\n        imageURL: response.data.result,\n    });\n        }).catch((error) => {\n            console.log(error,\"ERROR\")\n    });\n   \n  };\n\nonChange = e => this.setState({ [e.target.name]: e.target.value });\n}\n\nconst styles = {\n  formContainer: {\n    display: \"flex\",\n    flexFlow: \"row wrap\"\n  },\n\n  textStyle: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  input: {\n    display: \"none\"\n  },\n\n  textStyle: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  multiselect: {\n    minWidth: \"100%\",\n    marginBottom: \"10px\"\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  chip: {\n    margin: 3\n  },\n  selectStyle:{\n   //  minWidth: '100%',\n     marginBottom: '0px',\n      minWidth: 255,\n      maxWidth: 255,\n}\n  \n};\n\nexport default BannerAdd;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport pack from \"../service/PackService\";\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container, Paper } from \"@material-ui/core\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport Notify from \"../../utils/Notify\";\n//import MaterialUIPickers from \"./MaterialUIPickers\";\nimport MaterialUIPickers from \"../../utils/MaterialUIPickers\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport  * as amsConstant from \"../../utils/config\";\nimport Input from \"@material-ui/core/Input\";\n\nimport ActivationService from \"../service/ActivationService\";\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\nclass BannerEdit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        title: '',\n        order: '',\n        active: \"\",\n        bannerType:'',\n        section:'', \n        categoryType:'', \n        category:'',\n        forAndroid:'',\n        forIos:'', \n        forWindows:'', \n        validityDays:\"\",\n        updateTime:'',\n        updateBy:'', \n        imageURL:'', \n        file: null,\n        link:'',\n        listofzones:[],\n        selectedZone:[],\n        zone:''\n\n    };\n    this.savePack = this.savePack.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.myCallback = this.myCallback.bind(this);\n    this.zoneChange = this.zoneChange.bind(this);\n\n  }\n  zoneChange = (e) =>{\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  myCallback = (date, fromDate) => {\n    if (fromDate === \"START_DATE\") {\n      this.setState({ publishDay: new Date(date).getTime() });\n    } else if (fromDate === \"END_DATE\") {\n      this.setState({ expireDay: new Date(date).getTime() });\n    }\n  };\n\n  \n\n        \n  getInitialData = async ()=>{\n    const id = localStorage.getItem('selectedBannerId');\n    this.setState({loading:true})\n    // const packRes = await  this.props.getPackById(id);\n    // console.log(packRes)\n    // if(packRes.type){\n    //     this.setState(packRes.payload.data.result);\n    // }\n    // this.setState({loading:false})\n    // this.setState({activationStatus:this.state.active})\n\n    pack.getOneBanner(id).then(res => {\n      resolveResponse(res, \"Baneer saved successfully.\");\n     // this.props.history.push(\"/banners\");\n\n     let data = resolveResponse(res);\n     if(data.status == 200 && data.message == \"ok\"){\n\n         var selectedData = data.result; \n         this.setState({   \n         title: selectedData.title,\n         order: selectedData.order,\n         active: selectedData.active,\n         bannerType:selectedData.bannerType,\n         section:selectedData.section, \n         categoryType:selectedData.categoryType, \n         category:selectedData.category,\n         forAndroid:selectedData.forAndroid,\n         forIos:selectedData.forIos, \n         forWindows:selectedData.forWindows, \n         publishDay:selectedData.publishDay,\n         expireDay: selectedData.expireDay,\n         updateTime:selectedData.updateTime,\n         imageURL:selectedData.imageURL, \n         bannerId : selectedData.bannerId, \n         link:selectedData.link, \n         selectedZone :selectedData.zones.split(\",\")\n         });\n\n     }\n\n\n    });\n\n\n    ActivationService.getStaticData('BOA').then(res => {\n      let data = resolveResponse(res);\n      this.setState({listofzones: data.result && data.result.zones}) \n  })\n\n  }\n    componentDidMount() {\n      this.getInitialData();\n      localStorage.setItem(\"lastUrl\",\"banner-edit\");\n\n    }\n      \n\n  render() {\n\n    const dateParam = {\n      myCallback: this.myCallback,\n      startDate: this.state.publishDay,\n      endDate:this.state.expireDay,\n      firstLavel : \"Publish Date\", \n      secondLavel : \"End Date\"\n    }\n    console.log(this.state, \"STATE_MATTERS\");\n    return (\n      <React.Fragment>\n        <PostLoginNavBar />\n        \n                <Container maxWidth=\"sm\" style={{padding:\"10px\"}}>\n                  \n                    <Paper style={{padding:\"10px\"}}>\n                    <Typography variant=\"h5\" style={styles.textStyle}> Update Banner Details</Typography>\n                    <form style={styles.formContainer}>\n                    \t\t\t\n                        <TextField label=\"Banner Title\" required={true} value={this.state.title} fullWidth name=\"title\"  onChange={this.onChange}/>\n \n                        <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel htmlFor=\"Connection Type\" required={true}>Type of Baneer</InputLabel>\n                                <Select name=\"bannerType\" value={this.state.bannerType} onChange={this.onChange}>\n                                    <MenuItem value=\"prepaid\">Prepaid</MenuItem>\n                                    <MenuItem value=\"postpaid\">Postpaid</MenuItem>\n                                </Select>\n                            </FormControl>                    \n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel  required={true}>Order</InputLabel>\n                                <Select name=\"order\" value={this.state.order} onChange={this.onChange}>\n                                    <MenuItem value=\"1\">1</MenuItem>\n                                    <MenuItem value=\"2\">2</MenuItem>\n                                    <MenuItem value=\"3\">3</MenuItem>\n                                    <MenuItem value=\"4\">4</MenuItem>\n                                    <MenuItem value=\"5\">5</MenuItem>\n                                </Select>\n                            </FormControl>                        \n                        </Grid>\n                      \n\n                         {/* <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel htmlFor=\"Active\" required={true}>Section</InputLabel>\n                                <Select name=\"section\" value={this.state.section} onChange={this.onChange}>\n                                    <MenuItem value=\"Section1\">Section1</MenuItem>\n                                    <MenuItem value=\"Section2\">Section2</MenuItem>\n                                    <MenuItem value=\"Section3\">Section3</MenuItem>\n                                    <MenuItem value=\"Section4\">Section4</MenuItem>\n\n                                </Select>\n                            </FormControl>                        \n                        </Grid> */}\n\n\n                        <Grid item xs={12} sm={6}>\n                          <FormControl style={styles.multiselect}>\n                              <InputLabel htmlFor=\"Connection Type\" required={true}>Category Type</InputLabel>\n                              <Select name=\"categoryType\" value={this.state.categoryType} onChange={this.onChange}>\n                                  <MenuItem value=\"Recharge\">Recharge</MenuItem>\n                                  <MenuItem value=\"Other\"> Other </MenuItem>\n                              </Select>\n                          </FormControl>                   \n                        </Grid>\n\n\n                        {/* <Grid item xs={12} sm={6}>\n                          <FormControl style={styles.multiselect}>\n                              <InputLabel htmlFor=\"\" required={true}>Category</InputLabel>\n                              <Select name=\"category\" value={this.state.category} onChange={this.onChange}>\n                                  <MenuItem value=\"bonus\">Bonus</MenuItem>\n                                  <MenuItem value=\"Bonus\">Other</MenuItem>\n                              </Select>\n                          </FormControl>\n                        </Grid> */}\n                        <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel htmlFor=\"Active\" required={true}>Status</InputLabel>\n                                <Select name=\"active\" value={this.state.active} onChange={this.onChange}>\n                                    <MenuItem value=\"true\">Active</MenuItem>\n                                    <MenuItem value=\"false\">In Active</MenuItem>\n                                </Select>\n                            </FormControl>                        \n                        </Grid>\n                        \n                        <Grid item  xs={12} sm={6}>\n                            <TextField label=\"Banner Link\" name=\"link\"  value={this.state.link} fullWidth  onChange={this.onChange}/>\n                        </Grid>\n                              <Grid item xs={10} sm={6}> \n                                <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                        <Select\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        multiple\n                                        name=\"selectedZone\"\n                                        value={this.state.selectedZone}\n                                        onChange={this.zoneChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        {this.state.listofzones ? this.state.listofzones.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                        </Select>\n                                    </FormControl>\n                            </Grid>\n\n\n                        {/* <Grid item xs={12} sm={12}>\n                            <InputLabel htmlFor=\"\" required={true}> Select the Devices</InputLabel> \n                            <FormControlLabel control=\n                                {<Checkbox checked={this.state.forAndroid} name=\"forAndroid\" onChange={this.handleChange('forAndroid')}\n                                            value={this.state.forAndroid} /> } label=\"Android\" color=\"primary\"/>\n                            <FormControlLabel control=\n                                {<Checkbox checked={this.state.forIos} name=\"forIos\" onChange={this.handleChange('forIos')}\n                                            value={this.state.forIos}/> }  label=\"IOS\" />\n                            <FormControlLabel control=\n                                {<Checkbox checked={this.state.forWindows} name=\"forWindows\" onChange={this.handleChange('forWindows')}\n                                            value={this.state.forWindows}/> }  label=\"Windows\" />\n\n                        </Grid> */}\n\n\n                        {/* <TextField label=\"Publish Day\" type=\"number\" multiline rows={1} fullWidth margin=\"none\" min=\"1\" max=\"999\" name=\"priority\" value={this.state.priority} onChange={this.onChangePriority}/> */}\n\n                        {/* <input accept=\"image/*\" style={styles.input} id=\"contained-button-file\" type=\"file\" onChange={this.onProductIconFileChange} /> */}\n                        {/* <label htmlFor=\"contained-button-file\" style={{margin: '15px 20px 0 0', }}>\n                            <Button variant=\"contained\" size=\"large\" component=\"span\">\n                                Upload Product Icon\n                                <CloudUploadIcon />\n                            </Button>\n                        </label> */}\n\n                        {/* <Grid item xs={12} sm={6}>\n                                 <TextField label=\"Validity Days\" required={true} type=\"number\" min=\"1\" max=\"999\" fullWidth name=\"validityDays\" value={this.state.validityDays} onChange={this.onChange}/>\n                        </Grid> */}\n\n                        <MaterialUIPickers callbackFromParent={dateParam} />\n                        {/* <input type=\"\" id=\"startDateMili\" /> \n                        <input type=\"\" id=\"endDateMili\" />  */}\n                        <TextField id=\"startDateMili\" label=\"\" type=\"hidden\" value={dateParam.startDate} />\n                        <TextField id=\"endDateMili\" label=\"\" type=\"hidden\" value={dateParam.endDate} />\n\n                       \n\n                        {/*                         \n                        <Grid item xs={12} sm={6}>\n                                 <TextField label=\"Expire Days\" required={true} type=\"number\" min=\"1\" max=\"999\" fullWidth name=\"servingTimeInMins\" value={this.state.servingTimeInMins} onChange={this.onChangeServingTime}/>\n                        </Grid> */}\n\n              <Grid\n                container\n                spacing={24}\n                container\n                direction=\"row\"\n                justify=\"flex-end\"\n              >\n                <Grid item xs={12} sm={6}>\n                <FormControl style={styles.multiselect}>\n                        <InputLabel htmlFor=\"display-type\" required={true}>Upload Banner</InputLabel>\n                </FormControl>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <FormControl style={styles.multiselect}>\n                      <input\n                        style={{\n                          marginTop: \"31px\",\n                          marginLeft: \"18px\"\n                        }}\n                        type=\"file\"\n                        name=\"file\"\n                        // onChange={this.onChangeHandler}\n                        onChange={this.onChangeFileUpload}\n                      />\n                  </FormControl>\n                  \n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                    <img style={{width:\"200px\", height:\"100px\"}} src={this.state.imageURL} />\n                </Grid>\n                \n              </Grid>\n\n\n              \n\n             \n                    {/* <TextField label=\"Comment\" fullWidth margin=\"normal\" name=\"helpTextImage\" value={this.state.helpTextImage} onChange={this.onChange}/> */}\n                    <Grid  container spacing={24} container\n                        direction=\"row\"\n                        justify=\"center\">\n                          \n                      <Button variant=\"contained\" color=\"primary\"   onClick={this.savePack}>Update</Button>\n                      <Button variant=\"contained\" color=\"secondary\" style={{marginLeft: '150px'}} onClick={this.cancel}>Cancel</Button>\n                    </Grid>\n                    \n                  </form>\n                    </Paper>\n                </Container>\n\n\n        \n\n      </React.Fragment>\n    );\n  }\n\n  savePack = e => {\n\n  \n    e.preventDefault();\n    // if(!this.state.title ||!this.state.bannerType || !this.state.order || !this.state.section || !this.state.categoryType || !this.state.category || !this.state.validityDays || !this.state.active ){\n    //     Notify.showError(\"Missing required fields\");\n    //     return;\n    // }\n   \n    // if(!this.state.file){\n    //   Notify.showError(\"Missing required image upload\");\n    //   return;\n    // }\n\n    var userDetails = localStorage.getItem(\"userDetails\")\n    userDetails = userDetails && JSON.parse(userDetails);\n    \n\n    const formData = new FormData();\n    formData.append('file',this.state.file);\n    formData.append('title', this.state.title);\n    formData.append('order', this.state.order);\n\n    formData.append('active', this.state.active);\n    formData.append('bannerType', this.state.bannerType);\n    // formData.append('section', this.state.section);\n    // formData.append('forAndroid', this.state.forAndroid);\n    // formData.append('forIos', this.state.forIos);\n   // formData.append('forWindows', this.state.forWindows);\n    formData.append('publishDay', this.state.publishDay);\n    formData.append('expireDay', this.state.expireDay); \n\n    formData.append('link', this.state.link);\n    formData.append('zones',this.state.selectedZone.length ? this.state.selectedZone : null);\n\n\n    //formData.append('validityDays', this.state.validityDays);\n    formData.append('updateBy', userDetails && userDetails.loginName);\n  \n    formData.append('categoryType', this.state.categoryType);\n    formData.append('category', this.state.category);\n\n    formData.append('bannerId', this.state.bannerId);\n    \n    pack.updateBanner(formData).then(res => {\n     var data = resolveResponse(res, \"Banner saved successfully.\");\n     if(data.status == 200 && data.message == \"Success\"){\n        Notify.showSuccess(\"Banner saved successfully.\")\n     }else{\n      Notify.showError(data);\n\n     }\n      this.props.history.push(\"/banners\");\n    });\n\n  };\n\n  cancel = e => {\n    this.props.history.push(\"/banners\");\n  };\n\n\n\n  handleChange = name => event => {\n    this.setState({ ...this.state, [name]: event.target.checked });\n  };\n\n\n\n\n  onChangeFileUpload = e => this.setState({\n    //  file:e.target.files[0]\n      [e.target.name]: e.target.files[0]\n  })\n\n\n\n  onChangeHandler = event => {\n    const formData = new FormData();\n    formData.append('file',event.target.files[0]);\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    };\n    axios.post(amsConstant.UPLOAD_IMG_BANNER,formData,config)\n        .then((response) => {\n    this.setState({\n        imageURL: response.data.result,\n    });\n        }).catch((error) => {\n            console.log(error,\"ERROR\")\n    });\n   \n  };\n\nonChange = e => this.setState({ [e.target.name]: e.target.value });\n}\n\nconst styles = {\n  formContainer: {\n    display: \"flex\",\n    flexFlow: \"row wrap\"\n  },\n\n  textStyle: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  input: {\n    display: \"none\"\n  },\n\n  textStyle: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  multiselect: {\n    minWidth: \"100%\",\n    marginBottom: \"10px\"\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  chip: {\n    margin: 3\n  },\n  selectStyle:{\n   //  minWidth: '100%',\n     marginBottom: '0px',\n      minWidth: 270,\n      maxWidth: 270,\n}\n  \n};\n\nexport default BannerEdit;\n","import React from 'react';\nimport axios from \"axios\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {Container,Paper} from \"@material-ui/core\";\n//import MaterialUIPickers from \"./MaterialUIPickers\";\nimport MaterialUIPickers from \"../../utils/MaterialUIPickers\";\nimport pack from \"../service/PackService\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\n\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport {editPackInfo,getPackById} from \"../../action\"\nimport {connect} from \"react-redux\";\nimport Notify from \"../../utils/Notify\";\n\nclass RechargePackAdd extends React.Component {\n   \n    constructor(props) {\n        super(props);\n        this.state = {\n            activationStatus:\"\",\n            amount: \"\",\n            comment: \"\",\n            connectionType: \"\",\n            dataDay: \"\",\n            dataDayType: \"\",\n            description: \"\",\n            displayOrder: \"\",\n            displayType: \"\",\n            endDate: \"\",\n            imageURL: \"\",\n            ftr: \"\",\n            nightDay: \"\",\n            nightDayType: \"\",\n            pack: \"\",\n            packType:'',\n            startDate: \"\",\n            validityDays: \"\",\n            validityType: \"\",\n            packvalue: []\n            \n        }\n        this.savePack = this.savePack.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.myCallback = this.myCallback.bind(this);\n        this.onChangePack = this.onChangePack.bind(this);\n        this.addPackTpe = this.addPackTpe.bind(this);\n\n        \n\n    }\n    \n    \n\n  onChangeFileUpload = e => this.setState({\n    //  file:e.target.files[0]\n      [e.target.name]: e.target.files[0]\n  })\n\n    \n    getInitialData = async ()=>{\n        const id = localStorage.getItem('selectedProductId');\n        this.setState({loading:true})\n        const packRes = await  this.props.getPackById(id);\n        console.log(\"packRes:\", packRes); \n        if(packRes.payload && packRes.payload.data && packRes.payload.data.result){\n            this.setState(packRes.payload.data.result);\n        }\n        this.setState({loading:false})\n        this.setState({activationStatus:this.state.active})\n\n        this.addPackTpe(this.state.pack); \n    }\n\n    componentDidMount() {\n       this.getInitialData();\n       localStorage.setItem(\"lastUrl\",\"editpacks\");\n      \n    }\n     \n    \n    myCallback = (date,fromDate) => {\n        if(fromDate ===\"START_DATE\"){\n            this.setState({startDate:new Date(date).getTime()})\n        }else if(fromDate===\"END_DATE\"){\n            this.setState({endDate:new Date(date).getTime()})\n        }\n       \n    }\n  render() {\n      const dateParam = {\n        myCallback: this.myCallback,\n        startDate: this.state.startDate,\n        endDate: this.state.endDate,\n        firstLavel : \"Start Date\", \n        secondLavel : \"End Date\"\n      }\n      console.log(\"dateparam\",dateParam);\n      if(this.state.loading){\n          return <div>Laoding</div>\n      }\n       return(\n        \n        <React.Fragment>\n        <PostLoginNavBar />\n        <Container maxWidth=\"sm\">\n          <Paper style={{ padding: \"20px\" }}>\n            <Typography variant=\"h5\" style={styles.textStyle}>\n              Edit Recharge Pack\n            </Typography>\n            <form style={styles.formContainer}>\n              {/* <TextField\n                label=\"Product Id\"\n                required={true}\n                fullWidth\n                margin=\"none\"\n                name=\"productId\"\n                value={this.state.productId}\n                ref={this.input}\n                onChange={this.onChange}\n              /> */}\n\n            <Grid container spacing={2} direction=\"row\" justify=\"flex-end\" >\n\n             <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Amount\"\n                  required={true}\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"99999\"\n                  fullWidth\n                  name=\"amount\"\n                  value={this.state.amount}\n                  onChange={this.onChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n              <TextField\n                label=\"Pack Name\"\n                type=\"\"\n                rows={2}\n                fullWidth\n                margin=\"none\"\n                min=\"1\"\n                max=\"15\"\n                name=\"comment\"\n                value={this.state.comment}\n                onChange={this.onChange}\n              />\n\n\n              </Grid>\n\n              </Grid>\n\n\n              \n              <Grid container direction=\"row\" justify=\"flex-end\" >\n            \n              <TextField\n                label=\"Description\"\n                fullWidth\n                multiline \n                variyant \n                rows={2} \n                margin=\"normal\"\n                name=\"description\"\n                value={this.state.description}\n                onChange={this.onChange}\n              />\n\n              </Grid>\n            \n\n              <Grid container spacing={2} direction=\"row\" justify=\"flex-end\" >\n\n              <Grid item xs={12} sm={6}>\n\n\n              <FormControl style={styles.multiselect}>\n                <InputLabel htmlFor=\"Connection Type\" required={true}>\n                  Connection Type\n                </InputLabel>\n                <Select\n                  name=\"connectionType\"\n                  value={this.state.connectionType}\n                  onChange={this.onChange}\n                >\n                  <MenuItem value=\"prepaid\">Prepaid</MenuItem>\n                  <MenuItem value=\"postpaid\">Postpaid</MenuItem>\n                </Select>\n              </FormControl>\n\n              </Grid>\n\n              <Grid item xs={12} sm={6}>\n              <TextField\n                  label=\"Display Order\"\n                  required={true}\n                  fullWidth\n                  margin=\"none\"\n                  name=\"displayOrder\"\n                  value={this.state.displayOrder}\n                  onChange={this.onChange}\n                />\n            \n            </Grid>\n\n\n            </Grid>\n              \n              \n              <MaterialUIPickers callbackFromParent={dateParam} />\n              <input type=\"hidden\" id=\"startDateMili\" value={dateParam.startDate}/> \n              <input type=\"hidden\" id=\"endDateMili\" value={dateParam.endDate} /> \n              <Grid item xs={12} sm={6}>\n                <FormControl style={styles.multiselect}>\n                  <InputLabel htmlFor=\"Pack Type\" >\n                    Pack Type\n                  </InputLabel>\n                  <Select\n                    name=\"pack\"\n                    value={this.state.pack}\n                    onChange={this.onChangePack}\n                  >\n                    <MenuItem value=\"Data\">Data</MenuItem>\n                    <MenuItem value=\"Voice\">Voice</MenuItem>\n                    <MenuItem value=\"Combo\">Combo</MenuItem>\n                    <MenuItem value=\"IDD\">IDD</MenuItem>\n                    <MenuItem value=\"SMS\">SMS</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n             \n              <Grid item xs={12} sm={6}>\n                <FormControl style={styles.multiselect}>\n                  <InputLabel htmlFor=\"Pack Type\" >\n                    Pack Type\n                  </InputLabel>\n                  <Select\n                    name=\"packType\"\n                    value={this.state.packType}\n                    onChange={this.onChange}\n                  >\n\n                  {this.state.packvalue ? this.state.packvalue.map(name => (\n                      <MenuItem key={name} value={name} >\n                          {name}\n                      </MenuItem>\n                  )): \"\"}\n                    \n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Data Day\"\n                  // required={true}\n                  // type=\"number\"\n                  min=\"1\"\n                  max=\"99999\"\n                  fullWidth\n                  name=\"dataDay\"\n                  value={this.state.dataDay}\n                  onChange={this.onChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n              <TextField\n              label=\"Type\"\n              style={{\n                marginLeft: \"18px\"\n              }}\n              // required={true}\n              fullWidth\n              margin=\"none\"\n              name=\"dataDayType\"\n              value={this.state.dataDayType}\n              onChange={this.onChange}\n            />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Data Night\"\n                  // required={true}\n                  // type=\"number\"\n                  min=\"1\"\n                  max=\"99999\"\n                  fullWidth\n                  name=\"nightDay\"\n                  value={this.state.nightDay}\n                  onChange={this.onChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                label=\"Type\"\n                style={{\n                  marginLeft: \"18px\"\n                }}\n                // required={true}\n                fullWidth\n                margin=\"none\"\n                name=\"nightDayType\"\n                value={this.state.nightDayType}\n                onChange={this.onChange}\n              />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Validity Days\"\n                  \n                  type=\"number\"\n                  min=\"1\"\n                  max=\"99999\"\n                  fullWidth\n                  name=\"validityDays\"\n                  value={this.state.validityDays}\n                  onChange={this.onChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  label=\"Validity Type\"\n                  style={{\n                    marginLeft: \"18px\"\n                  }}\n                  \n                  fullWidth\n                  margin=\"none\"\n                  name=\"validityType\"\n                  value={this.state.validityType}\n                  onChange={this.onChange}\n                />\n              </Grid>\n             \n\n              <Grid item xs={12} sm={6}>\n                <FormControl style={styles.multiselect}>\n                  <InputLabel htmlFor=\"Activation status\" required={true}>\n                    Status\n                  </InputLabel>\n                  <Select\n                    name=\"activationStatus\"\n                    value={this.state.activationStatus}\n                    onChange={this.onChange}\n                  >\n                    <MenuItem value=\"true\">Active</MenuItem>\n                    <MenuItem value=\"false\">In Active</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n\n              <Grid item xs={12} sm={6}>\n                <FormControl style={styles.multiselect}>\n                  <InputLabel htmlFor=\"Activation status\" required={true}>\n                    FTR or Normal\n                  </InputLabel>\n                  <Select\n                    name=\"ftr\"\n                    value={this.state.ftr}\n                    onChange={this.onChange}\n                  >\n                    <MenuItem value=\"true\">FTR(First Time Recharge)</MenuItem>\n                    <MenuItem value=\"false\">Normal</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid\n                container\n                spacing={24}\n                container\n                direction=\"row\"\n                justify=\"flex-end\"\n              >\n                <Grid item xs={12} sm={6}>\n                  <FormControl style={styles.multiselect}>\n                    <InputLabel htmlFor=\"display-type\" required={true}>\n                      Display Type\n                    </InputLabel>\n                    <Select\n                      name=\"displayType\"\n                      value={this.state.displayType}\n                      onChange={this.onChange}\n                    >\n                      <MenuItem value=\"details\">Details</MenuItem>\n                      <MenuItem value=\"detailsWithImage\">\n                        Details with Image\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <FormControl style={styles.multiselect}>\n                    <input\n                      style={{\n                        marginTop: \"31px\",\n                        marginLeft: \"18px\"\n                      }}\n                      type=\"file\"\n                      name=\"file\"\n                    //  onChange={this.onChangeHandler}\n                    onChange={this.onChangeFileUpload}\n                    \n                    />\n                  </FormControl>\n                  \n                </Grid>\n                <Grid item xs={12} sm={5}>\n                <img style={{width:\"100px\", height:\"50px\"}} src={this.state.imageURL} />\n               </Grid>\n              </Grid>\n              {/* <TextField\n                label=\"comment\"\n                type=\"\"\n                multiline\n                rows={2}\n                fullWidth\n                margin=\"none\"\n                min=\"1\"\n                max=\"15\"\n                name=\"comment\"\n                value={this.state.comment}\n                onChange={this.onChange}\n              /> */}\n             \n\n                     \n            <Grid container spacing={2} container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\">\n                   <br />  <br /> <br />\n                       <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={this.savePack}\n                      >\n                        Save\n                      </Button>\n\n                      <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ marginLeft: \"150px\" }}\n                        onClick={this.cancel}\n                      >\n                        Cancel\n                      </Button>\n            </Grid>\n\n\n             \n            </form>\n          </Paper>\n        </Container>\n      </React.Fragment>\n     )\n    }\n\n    savePack = (e) => {\n        e.preventDefault();\n        \n      \n      //   if(this.state.displayType===\"detailsWithImage\"){\n      //       if(!this.state.imageURL){\n      //       Notify.showError(\"Missing required fields\");\n      //       return;\n      //       }\n\n      //   }\n       \n      //  this.props.editPackInfo(this.state);\n      //  this.props.history.push('/packs');\n\n\n      // if(!this.state.amount || !this.state.displayOrder || !this.state.comment || !this.state.startDate || !this.state.endDate || !this.state.packType  ){\n      //   Notify.showError(\"Missing required fields\");\n      //   return;\n      // }\n      // if(this.state.displayType == \"detailsWithImage\" && !this.state.file){\n      //   Notify.showError(\"Details With Image required to upload images\");\n      //   return;\n      // }\n\n   \n\n      // const packs = {\n      //   amount: this.state.amount,\n      //   displayOrder: this.state.displayOrder,\n      //   comment: this.state.comment,\n      //   startDate: this.state.startDate,\n      //   endDate:this.state.endDate,\n      //   pack: this.state.packType,\n      //   packType: this.state.packTypeitem,\n      //   dataDay: this.state.dataDay,\n      //   dataDayType: this.dataDayType,\n      //   nightDay: this.state.nightDay,\n      //   nightDayType: this.state.nightDayType,\n      //   validityDays: this.state.validityDays,\n      //   validityType: this.state.validityType,\n      //   connectionType: this.state.connectionType,\n      //   displayType: this.state.displayType,\n      //   imageURL: this.state.imageURL,\n      //   description: this.state.description,\n      //   activationStatus: this.state.activationStatus,\n      //   isFtr: this.state.isFtr,\n\n      // };\n\n      if(!this.state.startDate){\n        this.state.startDate = new Date().getTime();\n      }\n\n      if(!this.state.endDate){\n        this.state.endDate = new Date().getTime();\n      }\n\n      let startDatetime = new Date(this.state.startDate).getTime()\n      let endDatetime = new Date(this.state.endDate).getTime()\n      if(startDatetime == endDatetime){\n        Notify.showError(\"Start and end date time should not be same\");\n        return;\n      }\n\n      const formData = new FormData();\n\n      if(this.state.displayType===\"detailsWithImage\" && this.state.file){\n        formData.append('file',this.state.file);\n      }\n\n      const id = localStorage.getItem('selectedProductId');\n\n      formData.append('ProductId', id);\n\n      \n      formData.append('amount', this.state.amount);\n      formData.append('displayOrder', this.state.displayOrder);\n      formData.append('startDate',startDatetime);\n      formData.append('endDate', endDatetime);\n      formData.append('pack', this.state.pack);\n      formData.append('packType', this.state.packType);\n      formData.append('dataDay', this.state.dataDay);\n      formData.append('dataDayType', this.state.dataDayType);\n      formData.append('nightDay', this.state.nightDay);\n      formData.append('nightDayType', this.state.nightDayType);\n      formData.append('validityDays', this.state.validityDays);\n      formData.append('validityType', this.state.validityType);\n      formData.append('connectionType', this.state.connectionType);\n      formData.append('displayType', this.state.displayType);\n      formData.append('description', this.state.description);\n      formData.append('activationStatus', this.state.activationStatus);\n      formData.append('comment', this.state.comment);\n      formData.append('isFtr', this.state.ftr);\n\n\n    // console.log(packs, \"PACKS\");\n      pack.addPack(formData).then(res => {\n        resolveResponse(res, \"Product saved successfully.\");\n        this.props.history.push(\"/packs\");\n      });\n     \n    };\n\n   cancel = (e) => {\n        this.props.history.push('/packs');\n    };\n\n   \n    onChangeHandler = event => {\n        const formData = new FormData();\n        formData.append('file',event.target.files[0]);\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        };\n        //http://125.16.74.160:30611/\n        axios.post(\"/SLRetailer/recharges/uploadRechargeImage\",formData,config)\n            .then((response) => {\n        this.setState({\n            imageURL: response.data.result,\n        });\n            }).catch((error) => {\n                console.log(error,\"ERROR\")\n        });\n       \n      };\n      \n      addPackTpe = value => {\n\n        var voicetype = ['Type Rs', 'Minutes', 'Seconds']; \n        var datatype = ['Anytime (Type MB, GB)', 'Nighttime (Type MB, GB)']; \n        var combotype = ['Combo']; \n        var iddsmstype = ['Type Rs', \"SMS\"]; \n\n        if(value == \"Voice\"){\n          this.setState({packvalue:  voicetype});\n        }\n        if( value == \"Data\"){\n          this.setState({packvalue:  datatype});\n        }\n        if( value== \"Combo\"){\n          this.setState({packvalue:  combotype});\n        }\n        if( value == \"IDD\" || value == \"SMS\" ){\n          this.setState({packvalue:  iddsmstype});\n        }\n      }\n    \n      onChangePack = e =>  {\n        this.setState({ [e.target.name]: e.target.value });\n        \n        // var voicetype = ['Type Rs', 'Minutes', 'Seconds']; \n        // var datatype = ['Anytime (Type MB, GB)', 'Nighttime (Type MB, GB)']; \n        // var combotype = ['Combo']; \n        // var iddsmstype = ['Type Rs', \"SMS\"]; \n    \n        // if( e.target.value == \"Voice\"){\n        //   this.setState({packvalue:  voicetype});\n        // }\n        // if( e.target.value == \"Data\"){\n        //   this.setState({packvalue:  datatype});\n        // }\n        // if( e.target.value == \"Combo\"){\n        //   this.setState({packvalue:  combotype});\n        // }\n        // if( e.target.value == \"IDD\" || e.target.value == \"SMS\" ){\n        //   this.setState({packvalue:  iddsmstype});\n        // }\n\n        this.addPackTpe(e.target.value); \n    \n      }\n\n\n    onChange = (e) =>\n        this.setState({ [e.target.name]: e.target.value });\n\n}\n\nconst styles ={\n\n    formContainer : {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle :{\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    input: {\n        display: 'none'\n    },\n\n    textStyle :{\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    multiselect: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: 3,\n    }\n};\n\nconst mapStateToProps=(state)=>{\n   return {pack:state.packs.pack.data};\n}\nexport default connect(mapStateToProps,{editPackInfo,getPackById})(RechargePackAdd);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\n\nconst columns = [\n  { id: 'mobileNumber', label: 'Mobile No.', minWidth: 170 },\n  { id: 'nic', label: 'NIC', minWidth: 100 },\n  { id: 'sim',label: 'Sim',minWidth: 170, },\n  { id: 'pefCount', label: 'PEF Count', minWidth: 170, align: 'right', },\n  { id: 'nicCount', label: 'NIC Count', minWidth: 170, align: 'right', },\n  { id: 'distributer', label: 'Distributor', minWidth: 170, align: 'right', format: value => value.toFixed(2),},\n  { id: 'zone', label: 'Zone', minWidth: 170, align: 'right', },\n  { id: 'ftaDate', label: 'FTA Date', minWidth: 150, },\n  { id: 'status', label: 'Status', minWidth: 170, align: 'right', },\n  { id: 'resubmit',  label: 'Resubmit',minWidth: 170, align: 'right',  },\n  { id: 'verifiedDate', label: 'Verify Date', minWidth: 170, align: 'right',},\n  { id: 'submitDate', label: 'Submit Date', minWidth: 170, },\n  { id: 'resubmitDate', label: 'Resubmit Date', minWidth: 170, }\n];\n\n// function createData(Mobile, NIC, Sim, PEF_Count, NIC_Count,Distributor,Zone,FTA_Date,Status,Resubmit,Verify_Date,Submit_Date,Resubmit_Date) {\n//   const density = 100 / 2;\n//   return { Mobile, NIC, Sim, PEF_Count, NIC_Count,Distributor,Zone,FTA_Date,Status,Resubmit,Verify_Date,Submit_Date,Resubmit_Date };\n// }\n\n// const rows = [\n//   createData('7204563432', '#908004', '8982982389DSF092834' , 1, 2,\"UGC_DIS001\", \"West\", \"14-10-2019\", \"Summited\",\"No\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\"),\n//   createData('7204563432', '#908004', '8982982389DSF092834' , 1, 2,\"UGC_DIS001\", \"West\", \"14-10-2019\", \"Summited\",\"No\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\"),\n//   createData('7204563432', '#908004', '8982982389DSF092834' , 1, 2,\"UGC_DIS001\", \"West\", \"14-10-2019\", \"Summited\",\"No\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\"),\n//   createData('7204563432', '#908004', '8982982389DSF092834' , 1, 2,\"UGC_DIS001\", \"West\", \"14-10-2019\", \"Summited\",\"No\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\"),\n//   createData('7204563432', '#908004', '8982982389DSF092834' , 1, 2,\"UGC_DIS001\", \"West\", \"14-10-2019\", \"Summited\",\"No\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\"),\n//   createData('7204563432', '#908004', '8982982389DSF092834' , 1, 2,\"UGC_DIS001\", \"West\", \"14-10-2019\", \"Summited\",\"No\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\"),\n//   createData('7204563432', '#908004', '8982982389DSF092834' , 1, 2,\"UGC_DIS001\", \"West\", \"14-10-2019\", \"Summited\",\"No\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\"),\n//   createData('7204563432', '#908004', '8982982389DSF092834' , 1, 2,\"UGC_DIS001\", \"West\", \"14-10-2019\", \"Summited\",\"No\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\"),\n//   createData('7204563432', '#908004', '8982982389DSF092834' , 1, 2,\"UGC_DIS001\", \"West\", \"14-10-2019\", \"Summited\",\"No\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\"),\n//   createData('7204563432', '#908004', '8982982389DSF092834' , 1, 2,\"UGC_DIS001\", \"West\", \"14-10-2019\", \"Summited\",\"No\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\", \"14-10-2019 10:30:50\"),\n\n// ];\n//console.log(\"Row\", rows);\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  tableWrapper: {\n    maxHeight: 440,\n    overflow: 'auto',\n  },\n});\n\nexport default function StickyHeadTable(props) {\n\n\n  if(props.products)\n  console.log(\"Vijay products\",props);\n\n\n  const rows = props.products; \n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n\n  // const editProduct = (productId) => {\n  //   window.localStorage.setItem(\"selectedProductId\", productId);\n  //  // props.history.push('/edit-doc');\n  // };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n\n\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return (\n                <>\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                       \n                  {columns.map(column => {\n                    const value = row[column.id];\n                    return (\n                      \n                      <TableCell  onClick={() => props.someAction()} key={column.id} align={column.align}>\n                        \n                        {/* <VisibilityIcon/> */}\n                        \n                        {column.format && typeof value === 'number' ? column.format(value) : value}\n\n\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n\n                </>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </div>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        backIconButtonProps={{\n          'aria-label': 'previous page',\n        }}\n        nextIconButtonProps={{\n          'aria-label': 'next page',\n        }}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\n  createData('KitKat', 518, 26.0, 65, 7.0),\n  createData('Lollipop', 392, 0.2, 98, 0.0),\n  createData('Marshmallow', 318, 0, 81, 2.0),\n  createData('Nougat', 360, 19.0, 9, 37.0),\n  createData('Oreo', 437, 18.0, 63, 4.0),\n];\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Mobile' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Nic' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Sim' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Distributer' },\n  { id: 'protein', numeric: true, disablePadding: false, label: ' Status' },\n];\n\nfunction EnhancedTableHead(props) {\n\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable(props) {\n\n  if(props.products.length)\n  console.log(\"Vijay products\",props.products[0].distributer);\n\n\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'previous page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'next page',\n          }}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n","import React, { useState }  from \"react\";\nimport ActivationService from \"../service/ActivationService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from '@material-ui/core/TextField';\nimport Notify from \"../../utils/Notify\";\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\n\nimport Grid from '@material-ui/core/Grid';\n\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {Container} from \"@material-ui/core\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\n import \"./Verify.css\";\n\nimport StickyHeadTable from '../verify/StickyHeadTable';\n\nimport TablePagination from '@material-ui/core/TablePagination';\nimport MaterialUIPickers from \"./MaterialUIPickers\";\n\n\nimport EnhancedTable from './EnhancedTable';\n\n const handleChangePage = (event, newPage) => {\n   //  this.setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n   \n   // this.setRowsPerPage(parseInt(event.target.value, 10));\n  // this.setPage(0);\n  };\n\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass VerifyList extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state ={\n            products: [],\n            searchedproducts:'',\n            searchby:'',\n            listofzones:[],\n            selectedZone:[],\n            zone:''\n        };\n        this.loadProductList = this.loadProductList.bind(this);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.zoneChange = this.zoneChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadProductList(\"\");\n        localStorage.setItem(\"lastUrl\",\"verify\");\n    }\n\n    searchOnDB(mobileNumber) {\n        \n        this.loadProductList(mobileNumber) ;\n\n        // ActivationService.searchMobileNo(mobileNumber).then(res => {\n        //     let data = resolveResponse(res);\n        //     const selectedProduct = data.result;            \n\n        //     if(selectedProduct && selectedProduct.transactionId){\n        //         window.localStorage.setItem(\"selectedProductId\", selectedProduct.transactionId);\n        //         //window.localStorage.setItem(\"selectedSim\", '');\n        \n        //         this.props.history.push('/verify-edit');\n        //         // this.setState({\n        //         //     });\n        //     }\n        //     // else{\n        //     //     Notify.showError(\"Not Found or already processed\");\n        //     // }\n           \n        // })\n    }\n  \n    \n    loadProductList(mobileNumber) {\n        var d = new Date();\n        var endTime = d.getTime();\n\n        var startTime = endTime - 172800000; \n\n        var  data =  {\n            \"endDate\": endTime,\n            \"mobileNumber\": mobileNumber ? mobileNumber : null,\n            \"noOfRecords\": 20,\n            \"role\": \"BOA\",\n            \"startDate\": 0,\n            \"txnId\": 0,\n            \"type\": \"next\",\n            \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n          }\n        \n        document.getElementById('showMessage').innerHTML = \"Please Wait Loading...\";\n\n        ActivationService.listDocs(data)\n            .then((res) => {\n                let data = resolveResponse(res);\n                var activationList = data && data.result && data.result.activationList; \n                this.setState({products: activationList})\n                this.setState({searchedproducts: activationList})\n                var listingIds = activationList && activationList.map(function(val, index){\n                return val.txnId\n                });\n\n                if(document.getElementById('showMessage')){\n                    if(activationList == null){\n                        document.getElementById('showMessage').innerHTML = \"No new documents for verification\";\n                    }else{\n                        document.getElementById('showMessage').innerHTML = \"\";\n                    }    \n                }\n                \n                localStorage.setItem(\"verifyListingTxn\",listingIds);  \n            });\n\n        setTimeout(() => {\n            if(this.state.searchedproducts && this.state.searchedproducts.length ==0){\n                document.getElementById('showMessage').innerHTML = \"Server taking time to response please reload again and check\";\n            }\n        }, 7000);\n\n\n        ActivationService.getStaticData('BOA').then(res => {\n            let data = resolveResponse(res);\n            this.setState({listofzones: data && data.result && data.result.zones}) \n        })\n\n        // ActivationService.testApi('BOA').then(res => {\n        //     let data = resolveResponse(res);\n        //     this.setState({listofzones: data.result && data.result.zones}) \n        // })\n        \n    }\n\n    onChange = (e) => {\n\n        const re = /^[0-9\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n            this.setState({searchby: e.target.value})\n        }\n       \n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    addProduct() {\n        this.props.history.push('/add-product');\n    }\n\n    someAction() {\n      alert(\"action happed in other commpornt\"); \n    }\n\n   \n\n\n    editProduct(productId,sim) {\n        console.log(\"productid, row.sim\",productId, sim  )\n        \n        window.localStorage.setItem(\"selectedProductId\", productId);\n        window.localStorage.setItem(\"selectedSim\", sim);\n\n        this.props.history.push('/verify-edit');\n\n        // this.props.history.push({\n        //     pathname: '/edit-doc',\n        //     search: '?query=abc',\n        //     state: { rowdata: productId }\n        //   })\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n\n      \n\n    render(){\n   \n        return(\n\n            <React.Fragment>\n                <PostLoginNavBar/>\n                \n                <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n               \n                    <Grid syt  container spacing={3}  direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={12} sm={6} >\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                    Document Verification  \n                                </Typography> \n                            </Grid>\n                            <Grid item xs={10} sm={3}> \n                                <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                        <Select\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        multiple\n                                        name=\"selectedZone\"\n                                        value={this.state.selectedZone}\n                                        onChange={this.zoneChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        {this.state.listofzones ? this.state.listofzones.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                        </Select>\n                                    </FormControl>\n                            </Grid>\n\n                            <Grid item xs={2} sm={2}  > \n                                 {/* InputLabelProps={{ shrink: true }} */}\n                                <TextField  value={this.state.searchby}  label=\"Search by Mobile No.\"  style={{width:\"100%\"}} name=\"Search by Mobile No.\" name=\"searchby\" onChange={this.onChange} />\n                            </Grid>\n                            <Grid item xs={2} sm={1} alignItems=\"left\"> \n                                <Button type=\"submit\"  onClick={() => this.searchOnDB( this.state.searchby )} variant=\"contained\"  style={{marginLeft: '20px'}} >Search</Button>\n                            </Grid>\n                            \n                </Grid>\n\n                        \n\n                {/* <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Document Verification   \n                     <input value=\"2019-10-27\" type=\"date\"/> To <input value=\"2019-10-30\" type=\"date\"/> \n                </Typography>\n                \n                <input align=\"center\" type=\"text\" name=\"searchby\" onChange={this.onChange}  />  */}\n\n                \n\n                {/* <MaterialUIPickers/> */}\n\n                \n\n\n              \n\n\n                <div style={{padding:\"10px\", overflow:\"auto\", height:\"550px\"}} >\n\n\n                {/* <Container  > */}\n                    {/* <EnhancedTable products={this.state.products}/> */}\n\n                    {/* <StickyHeadTable products={this.state.products} someAction={this.someAction}/>\n                     */}\n\n                     \n                    {/* <Typography variant=\"h5\" style={styles.tableStyle}>&nbsp;Document Verification</Typography> */}\n                    {/* <Button variant=\"contained\" color=\"primary\" onClick={() => this.addProduct()}>\n                        Add Product\n                    </Button> */}\n\n                    {/* style={{whiteSpace: \"nowrap\"}}   stickyHeader aria-label=\"sticky table\"*/}\n                    <Table size=\"small\"   aria-label=\"sticky table\">\n                        <TableHead >\n                            <TableRow style={{width:\"170px\",whiteSpace: \"nowrap\"}}>\n                                <TableCell align=\"\">View</TableCell>\n                                <TableCell align=\"\">Mobile Number</TableCell>\n                                <TableCell align=\"\">NIC</TableCell>\n                                <TableCell align=\"\">SIM</TableCell>\n                                <TableCell align=\"\">PEF Count</TableCell>\n                                <TableCell align=\"\">NIC Count</TableCell>\n                                <TableCell align=\"\">Distributor</TableCell>\n                                <TableCell align=\"\">Zone</TableCell>\n                                <TableCell align=\"\">FTA Date</TableCell>\n                                {/* <TableCell align=\"\">Status</TableCell> */}\n                                <TableCell align=\"\">Resubmit</TableCell>\n                                <TableCell align=\"\">Verified Date</TableCell>\n                                <TableCell align=\"\">Submit Date</TableCell>\n                                <TableCell align=\"\">Resubmit Date</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{ whiteSpace: \"nowrap\"}}>\n                            {this.state.searchedproducts ? this.state.searchedproducts.map(row => (\n                                <TableRow hover   key={row.txnId} >\n                                    <TableCell  align=\"center\" onClick={() => this.editProduct(row.txnId,row.sim)}><VisibilityIcon style={{cursor:\"hand\"}} /></TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className=\"hidden\">\n                                        {row.mobileNumber}\n                                    </TableCell>\n                                    <TableCell align=\"center\" >{row.nic}</TableCell>\n                                    <TableCell align=\"center\">{row.sim}</TableCell>\n                                    <TableCell align=\"center\">{row.pefCount}</TableCell>\n                                    <TableCell align=\"center\">{row.nicCount}</TableCell>\n                                    <TableCell align=\"center\">{row.distributer}</TableCell>\n                                    <TableCell align=\"center\">{row.zone}</TableCell>\n                                    <TableCell align=\"center\">{row.ftaDate.substring(0, 10)}</TableCell>\n                                    {/* <TableCell align=\"center\">{row.status ? 'YES' : 'NO'}</TableCell> */}\n                                    <TableCell align=\"center\">{row.resubmit}</TableCell>\n                                    <TableCell align=\"center\">{row.verifiedDate ? row.verifiedDate.substring(0, 10) : \"none\"}</TableCell>\n                                    <TableCell align=\"center\">{row.submitDate ? row.submitDate.substring(0, 10) : \"none\"}</TableCell>\n                                    <TableCell align=\"center\">{row.resubmitDate ? row.resubmitDate.substring(0, 10) : \"none\"}</TableCell>\n\n\n                                    {/* <TableCell align=\"center\">{this.convertBool(row.showRecent)}</TableCell> */}\n                                  \n\n                                </TableRow>\n                            )):  \"\"}\n                        </TableBody>\n                    </Table>\n\n                    <div style={{color:\"gray\", fontSize:\"15px\", textAlign:\"center\"}}> <br/> <span id=\"showMessage\"> </span></div>\n     \n                \n                {/* </Container> */}\n\n                </div>\n                {/* <TablePagination\n                        rowsPerPageOptions={[10, 25, 100]}\n                        component=\"div\"\n                        count={10}\n                        rowsPerPage={10}\n                        page={1}\n                        backIconButtonProps={{\n                        'aria-label': 'previous page',\n                        }}\n                        nextIconButtonProps={{\n                        'aria-label': 'next page',\n                        }}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                    /> */}\n                </Paper>\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'left'\n    },\n    tableRow: {\n        hover: {\n            \"&:hover\": {\n                background: 'green !important',\n            },\n        },\n\n    },\n    \n    selectStyle:{\n        // minWidth: '100%',\n         marginBottom: '0px',\n          minWidth: 340,\n          maxWidth: 340,\n    }\n}\n\n\n\nexport default VerifyList;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 545,\n  },\n  media: {\n    height: 170,\n    width: 240,\n  },\n});\n\nexport default function MediaCard(props) {\n  const classes = useStyles();\n\n  const imageDetails = props.imageDetails; \n\n  console.log(\"details\",imageDetails)\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={imageDetails.img}\n          title={imageDetails.title}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"body2\" component=\"span\">\n          {imageDetails.title}\n          </Typography>\n          {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n            across all continents except Antarctica\n          </Typography> */}\n        </CardContent>\n      </CardActionArea>\n      {/* <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions> */}\n    </Card>\n  );\n}","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\n//import Lightbox from \"react-image-lightbox\";\n//import Lightbox from \"react-image-lightbox-rotate-fixed\";\n\nimport Lightbox from \"rhino-react-image-lightbox-rotate\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nimport $ from 'jquery';\n\n//import \"react-image-lightbox/style.css\";\n\n\nimport RecipeReviewCard from './RecipeReviewCard'; \n\nclass ImageGalary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      photoIndex: 0,\n      isOpen: false\n    };\n\n    this.openImageGalary = this.openImageGalary.bind(this);\n\n  }\n\n  openImageGalary = (index) => {\n\n    console.log(\"index\", index); \n    this.setState({\n      isOpen: true,\n      photoIndex:index\n      // mainSrc:'https://pbs.twimg.com/media/Bpbm1DXCAAA5vk4?format=jpg&name=900x900'\n    });\n    \n    $('.MuiToolbar-root').hide();   \n  }\n\n\n  render() {\n\n\n\n  const styles = {\n    imgTextStyle : {\n      textAlign: 'center',\n      position: 'relative',\n      marginBottom: '-24px',\n      fontSize: 'inherit',\n      color:\"white\", \n      fontWeight:\"bold\"\n    }, \n    topImgStyle:{\n      width:\"100%\", \n      height:\"290px\", \n      cursor:\"zoom-in\", \n      borderRadius:\"3px\"\n    },\n    buttomImgSyle: {\n      width:\"100%\", \n      height:\"240px\", \n      cursor:\"zoom-in\", \n      borderRadius:\"3px\"\n    },\n    displayBlock:{\n      display:'block', \n    },\n    displayNone:{\n      display:'none', \n    }\n\n  };\n\n    const { photoIndex, isOpen } = this.state;\n    const imageDetails = this.props.imageDetails;\n    \n      var images = []; \n      const topImgItem = []\n      const buttomImgItem = []\n\n\n      // topImg: topImg,\n      // bottomImg :bottomImg\n\n      var  topImg = this.props.imageDetails;\n\n      topImg.map((data,i)=>{\n        images.push(topImg[i].img); \n\n        if(data.title == \"POI Front Image\" || data.title == \"POI Back Image\"){\n          topImgItem.push(\n            <Grid item xs={12} sm={6} >\n              <div style={styles.imgTextStyle}> {data.title} </div> \n              <img onClick={() => this.openImageGalary(i)} src={data.img}  style={styles.topImgStyle} />\n            </Grid>\n            ); \n        }else{\n          buttomImgItem.push(\n            <Grid item xs={12} sm={4} onClick={() => this.openImageGalary(i)}>\n             <div style={styles.imgTextStyle}> {data.title} </div>\n             <img onClick={() => this.openImageGalary(i)}  src={data.img}  style={styles.buttomImgSyle} />\n           </Grid>\n            ); \n        }\n      })\n   \n\n \n    \n    return (\n       \n      <div style={{justifyContent:\"center\"}}>\n\n            <Grid container  spacing={1}  direction=\"row\" justify=\"center\" alignItems=\"center\">\n            {topImgItem}\n              {/* <Grid style={images[0] ? styles.displayBlock : styles.displayNone} item xs={12} sm={6}  onClick={() => this.openImageGalary(0)} >\n                <div style={styles.imgTextStyle}> {imageDetails[0].title} </div>\n                <img onClick={() => this.openImageGalary(0)}  src={images[0]}  style={styles.topImgStyle} />\n              </Grid>\n\n              <Grid style={images[1] ? styles.displayBlock : styles.displayNone}  item xs={12} sm={6}  onClick={() => this.openImageGalary(1)} >\n                <div style={styles.imgTextStyle}> {imageDetails[1].title} </div>\n                <img onClick={() => this.openImageGalary(1)}  src={images[1]}  style={styles.topImgStyle} />\n              </Grid> */}\n\n              \n            </Grid>\n\n            <Grid container  spacing={1} direction=\"row\" justify=\"center\" alignItems=\"center\">\n            {buttomImgItem}\n              {/* <Grid style={images[2] ? styles.displayBlock : styles.displayNone}  item xs={12} sm={4} onClick={() => this.openImageGalary(2)}>\n                <div style={styles.imgTextStyle}> {imageDetails[2].title} </div>\n                <img onClick={() => this.openImageGalary(2)}  src={images[2]}  style={styles.buttomImgSyle} />\n              </Grid>\n\n               <Grid style={images[3] ? styles.displayBlock : styles.displayNone}  item xs={12} sm={4} onClick={() => this.openImageGalary(3)}>\n                <div style={styles.imgTextStyle}> {imageDetails[3].title} </div>\n                <img onClick={() => this.openImageGalary(3)}  src={images[3]}  style={styles.buttomImgSyle} />\n              </Grid>\n\n               <Grid style={images[4] ? styles.displayBlock : styles.displayNone}  item xs={12} sm={4} onClick={() => this.openImageGalary(4)}>\n                <div style={styles.imgTextStyle}> {imageDetails[4].title} </div>\n                <img onClick={() => this.openImageGalary(4)}  src={images[4]}  style={styles.buttomImgSyle} />\n              </Grid> */}\n            </Grid>\n\n      \n        {/* <table cellSpacing=\"0\">\n          <tr> \n            <td style={{textAlign:\"center\"}}><img style={styles.imageFormat} style={{width:\"100%\", height:\"300px\", cursor:\"zoom-in\", borderRadius:\"3px\"}}   onClick={() => this.openImageGalary(0)}   src={images[0]}/><br />{imageDetails[0].title}  </td> \n            <td  colSpan=\"2\" style={{textAlign:\"center\"}}><img style={styles.imageFormat}  style={{width:\"100%\", height:\"300px\", cursor:\"zoom-in\", borderRadius:\"3px\"}}   onClick={() => this.openImageGalary(1)}  src={images[1]} /><br/>{imageDetails[1].title}</td> \n          </tr> \n          <tr> \n            <td style={{textAlign:\"center\"}}> <img style={styles.imageFormat}  style={{width:\"100%\", height:\"200px\", cursor:\"zoom-in\", borderRadius:\"3px\"}} onClick={() => this.openImageGalary(2)}  src={images[2]}/><br />{imageDetails[2].title}</td> \n            <td style={{textAlign:\"center\"}}><img  style={styles.imageFormat}  style={{width:\"100%\", height:\"200px\", cursor:\"zoom-in\", borderRadius:\"3px\"}}  onClick={() => this.openImageGalary(3)}  src={images[3]}/><br />{imageDetails[3].title} </td> \n            <td style={{textAlign:\"center\"}}><img  style={styles.imageFormat}  style={{width:\"100%\", height:\"200px\", borderRadius:\"3px\"}} onClick={() => this.openImageGalary(2)}  src={images[3]}/><br />{imageDetails[3].title} </td> \n          </tr> \n        </table>  */}\n\n        {isOpen && (\n          <Lightbox\n            mainSrc={images[photoIndex]}\n            nextSrc={images[(photoIndex + 1) % images.length]}\n            prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n            onCloseRequest={() => {this.setState({ isOpen: false }); $('.MuiToolbar-root').show(); }}\n            onMovePrevRequest={() =>{\n                this.setState({\n                  photoIndex: (photoIndex + images.length - 1) % images.length\n                })\n              }\n              \n            }\n            onMoveNextRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + 1) % images.length\n              })\n            }\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ImageGalary; ","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\n//import Lightbox from \"react-image-lightbox\";\n//import Lightbox from \"react-image-lightbox-rotate-fixed\";\n\nimport Lightbox from \"rhino-react-image-lightbox-rotate\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nimport $ from 'jquery';\n\nimport \"react-image-lightbox/style.css\";\n\nimport RecipeReviewCard from './RecipeReviewCard'; \n\n// const images = [\n//   \"https://www.motoroids.com/wp-content/uploads/2019/03/Current-Driver-license-front-side-1200x675.jpg\",\n//   \"https://cdn.hpm.io/wp-content/uploads/2015/01/04114540/texas-roadside-assistance2-1000x750.jpg\", \n//   \"https://www.graphic.com.gh/images/2017/july/july18/signature.png\",\n//   \"https://pbs.twimg.com/media/Bpbm1DXCAAA5vk4?format=jpg&name=900x900\"\n// ];\n\nclass ImageGalary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      photoIndex: 0,\n      isOpen: false\n    };\n\n    this.openImageGalary = this.openImageGalary.bind(this);\n\n  }\n\n\n\n  openImageGalary = (index) => {\n\n\n    console.log(\"index\", index); \n    this.setState({\n      isOpen: true,\n      photoIndex:index\n      // mainSrc:'https://pbs.twimg.com/media/Bpbm1DXCAAA5vk4?format=jpg&name=900x900'\n    });\n\n\n\n\n    \n    $('.MuiToolbar-root').hide();\n   \n  }\n\n\n  render() {\n    const { photoIndex, isOpen } = this.state;\n\n    const imageDetails = this.props.imageDetails; \n\n    \n    \n      var images = []; \n      const imageItems = []\n\n     if(this.props.imageDetails){\n        for(var i=0; i<imageDetails.length; i++){\n          images.push(imageDetails[i].img); \n          imageItems.push(<Grid item xs={4}><RecipeReviewCard onClick={() => this.openImageGalary(i)}   imageDetails={imageDetails[i] }  /> </Grid>)\n        }\n     }\n\n     \n\n\n      const styles = {\n        imageFormat : {\n            cursor: 'zoom-in',\n            borderRadius: 5\n        },\n      };\n\n      // const elements = ['one', 'two', 'three'];\n\n      // const items = []\n\n      // for (const [index, value] of elements.entries()) {\n      //   items.push(<RecipeReviewCard imageDetails={imageDetails[0]}/>)\n      // }\n\n   \n    \n    return (\n      <div style={{justifyContent:\"center\"}}>\n\n\n           {/* <Grid container  spacing={24} \n                            direction=\"row\"\n                            justify=\"center\"\n                            alignItems=\"center\">\n          <div style={{padding:\"20px\"}}>\n          {imageItems}\n\n          </div>\n\n            </Grid>\n */}\n\n         {/* <table cellSpacing=\"20\"> \n          <tr> \n            <td> <RecipeReviewCard imageDetails={imageDetails[0]}/>  </td> \n            <td> <RecipeReviewCard imageDetails={imageDetails[1]} /> </td> \n          </tr> \n        </table> */}\n\n        {/* <Grid container  spacing={24}  direction=\"row\" justify=\"center\" alignItems=\"center\">\n          {imageItems}\n        </Grid> */}\n\n\n        <table cellSpacing=\"20\"> \n          <tr> \n            <td style={{textAlign:\"center\"}}> {imageDetails[0].title} <img style={styles.imageFormat} width=\"250\" height=\"200\"  onClick={() => this.openImageGalary(0)}   src={images[0]}/>  </td> \n          </tr> \n          \n        </table>\n\n\n        {/* <Button size=\"small\" variant=\"contained\" color=\"default\"  onClick={() => {this.setState({ isOpen: true }); $('.MuiToolbar-root').hide();} }>\n          Open in Galary\n        </Button> */}\n\n          {/* <Button size=\"small\" variant=\"contained\" color=\"default\" onClick={this.openImageGalary }>\n          Open in Galary\n        \n          </Button> */}\n\n        {isOpen && (\n          <Lightbox\n            mainSrc={images[photoIndex]}\n            nextSrc={images[(photoIndex + 1) % images.length]}\n            prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n            onCloseRequest={() => {this.setState({ isOpen: false }); $('.MuiToolbar-root').show(); }}\n            onMovePrevRequest={() =>{\n              this.setState({\n                photoIndex: (photoIndex + images.length - 1) % images.length\n              })\n             \n            }\n              \n            }\n            onMoveNextRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + 1) % images.length\n              })\n            }\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ImageGalary; \n\n\n// render(<App />, document.getElementById(\"root\"));\n","import React, { Component } from \"react\";\nimport { Fade,Slide,Zoom } from 'react-slideshow-image';\nimport Grid from '@material-ui/core/Grid';\nimport $ from 'jquery';\nimport Lightbox from \"rhino-react-image-lightbox-rotate\";\nimport ReactPanZoom from \"react-image-pan-zoom-rotate\";\n\n\nconst fadeProperties = {\n  duration: 1000,\n  transitionDuration: 500,\n  infinite: false,\n  indicators: true,\n  arrows: true,\n  scale: 0.5,\n  autoplay:false,\n  onChange: (oldIndex, newIndex) => {\n    console.log(`fade transition from ${oldIndex} to ${newIndex}`);\n  }\n}\n\n\nvar degree = 90, scale=1;\nfunction rotate(){\n   \n   $(\"#imageCon\").css({'transform': 'rotate('+degree+'deg)'});\n degree += 90; \n console.log(\"rotete called \"); \n}\n\nfunction zoomIn(){\n   scale += 0.25;\n $(\"#imageCon\").css({'transform': 'scale('+scale+')'});\n console.log(\"zoom in\"); \n\n}\n\n\nfunction zoomOut(){\n   scale -= 0.25;\n $(\"#imageCon\").css({'transform': 'scale('+scale+')'});\n console.log(\"zoom out\"); \n\n}\n\n\n\nclass SlideSlowGalary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      photoIndex: 0,\n      isOpen: false,\n      scale:0\n    };\n\n    this.openImageGalary = this.openImageGalary.bind(this);\n\n  }\n\n\n  componentDidMount() {\n    // document.addEventListener(\"keypress\", function(t) {\n    //   console.log(\"t.keyCode\",t.keyCode)\n    //   if(43 === t.keyCode || 61 === t.keyCode){\n    //     zoomIn();\n    //   }else if(45 === t.keyCode){\n    //     zoomOut();\n    //   }else if(17 == t.keyCode ){\n    //     rotate();\n    //   }\n    // });\n}\n\n\n  openImageGalary = (index) => {\n\n    console.log(\"index\", index); \n    this.setState({\n      isOpen: true,\n      photoIndex:index\n      // mainSrc:'https://pbs.twimg.com/media/Bpbm1DXCAAA5vk4?format=jpg&name=900x900'\n    });\n    \n    $('.MuiToolbar-root').hide();   \n  }\n\n\n  render() {\n\n  const styles = {\n    imgTextStyle : {\n      textAlign: 'center',\n      position: 'relative',\n      // marginBottom: '-24px',\n      fontSize: 'inherit',\n      color:\"white\",\n      fontWeight:\"bold\"\n    }, \n    topImgStyle:{\n    //  width:\"100%\", \n    //  height:\"525px\", \n      cursor:\"zoom-in\", \n      borderRadius:\"3px\"\n    },\n    buttomImgSyle: {\n      width:\"100%\", \n      height:\"240px\", \n      cursor:\"zoom-in\", \n      borderRadius:\"3px\"\n    },\n    displayBlock:{\n      display:'block', \n    },\n    displayNone:{\n      display:'none', \n    }\n\n  };\n\n    const { photoIndex, isOpen } = this.state;\n    var  topImg = this.props.imageDetails;\n    \n        \n      var images = []; \n      const topImgItem = []\n          topImg.map((data,i)=>{\n            images.push(topImg[i].img); \n              topImgItem.push(\n\n                <Grid item xs={12} sm={12} >  \n                  <div className=\"each-fade\" style={{verticalAlign:\"middle !important\"}}>\n                        <div className=\"image-container\"  style={{height:'70vh'}}> \n                        <div style={{textAlign:\"center\"}}> {data.title} </div> \n\n                          {/* <img  id=\"imageCon\" src={data.img} /> */}\n                          <ReactPanZoom image={data.img} alt={data.title}/>\n                        </div>\n                        \n                      </div>\n                </Grid>\n                ); \n\n          })\n      \n \n    \n    return (\n       \n      <div style={{justifyContent:\"center\"}}>\n\n\n          <div className=\"slide-container\">\n                {/* <Fade {...fadeProperties}>\n                 {topImgItem}\n              </Fade> */}\n\n               <Slide {...fadeProperties}>\n                  {topImgItem}\n               </Slide>\n\n              {/* <Zoom {...fadeProperties}>\n                 {topImgItem}\n              </Zoom> */}\n              \n         </div>\n\n        {/* {isOpen && (\n          <Lightbox\n            mainSrc={images[photoIndex]}\n            nextSrc={images[(photoIndex + 1) % images.length]}\n            prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n            onCloseRequest={() => {this.setState({ isOpen: false }); $('.MuiToolbar-root').show(); }}\n            onMovePrevRequest={() =>{\n                this.setState({\n                  photoIndex: (photoIndex + images.length - 1) % images.length\n                })\n              }\n              \n            }\n            onMoveNextRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + 1) % images.length\n              })\n            }\n          />\n        )} */}\n      </div>\n    );\n  }\n}\n\n\nexport default SlideSlowGalary;\n\n\n\n//functional style \n// class SimpleAction extends React.Component {\n\n//   render() {\n//     return (\n//       <div style={{height:\"400px\"}}>\n//           <Slideshow />\n//       </div>\n     \n//     )\n//   }\n// }\n\n// const style={\n//   setWH :{\n//   height:\"300px\", \n//   width:\"500px\"\n  \n\n//   }\n// }\n\n// const Slideshow = (props) => {\n\n//   console.log(\"props\", props); \n//   var  topImg = props.imageDetails;\n\n//   var images = []; \n//   const topImgItem = []\n//   const buttomImgItem = []\n//       topImg.map((data,i)=>{\n//         images.push(topImg[i].img); \n//           topImgItem.push(\n//             <Grid item xs={12} sm={12} >\n//               <div className=\"each-fade\">\n//                     <div className=\"image-container\">\n//                     <img onClick={() => this.openImageGalary(i)} src={data.img}  style={styles.topImgStyle} />\n//                     </div>\n//                     <div style={styles.imgTextStyle}> {data.title} </div> \n//                   </div>\n//             </Grid>\n//             ); \n\n//       })\n   \n\n//   console.log(\"props\", props); \n//   return (\n//     <div className=\"slide-container\">\n//       <Fade {...fadeProperties}>\n//         {topImgItem}\n//       </Fade>\n//     </div>\n//   )\n// }\n\n// const styles = {\n//   imgTextStyle : {\n//     textAlign: 'center',\n//     position: 'relative',\n//     marginBottom: '-24px',\n//     fontSize: 'inherit',\n//     color:\"white\",\n//     fontWeight:\"bold\"\n//   }, \n//   topImgStyle:{\n//     width:\"100%\", \n//     height:\"390px\", \n//     cursor:\"zoom-in\", \n//     borderRadius:\"3px\"\n//   },\n//   buttomImgSyle: {\n//     width:\"100%\", \n//     height:\"240px\", \n//     cursor:\"zoom-in\", \n//     borderRadius:\"3px\"\n//   },\n//   displayBlock:{\n//     display:'block', \n//   },\n//   displayNone:{\n//     display:'none', \n//   }\n\n// };\n\n// export default Slideshow;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport ActivationService from \"../service/ActivationService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport Notify from \"../../utils/Notify\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport ImageGalary from \"./ImageGalary\";\nimport ImageGalaryPEF from \"./ImageGalaryPEF\";\nimport SlideShowGalary from \"../../utils/SlideShowGalary\";\n\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport \"./Verify.css\";\nimport ReactPanZoom from \"react-image-pan-zoom-rotate\";\n\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport DoneSharpIcon from '@material-ui/icons/DoneSharp';\nimport { red } from '@material-ui/core/colors';\n\nclass VerifyEdit extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n                address1: \"\",\n                address2: null,\n                address3: null,\n                altContactNumber: \"\",\n                customerImageUrl: null,\n                customerSignatureUrl: null,\n                deDateTime: null,\n                deUser: null,\n                dob: \"\",\n                firstName: \"\",\n                gender: \"\",\n                lastName: null,\n                middleName: null,\n                mobileNumber: \"\",\n                pefImageUrl: null,\n                poiBackImageUrl: null,\n                poiFrontImageUrl: null,\n                poiNumber: \"\",\n                poiType: null,\n                status: \"\",\n                submittedBy:'',\n                title: \"\",\n                rejectedReasons:'',\n                transactionId: '',\n                selectedReasons: {},\n                sim : '',\n                loader:false,\n                approveLoader:false,\n                approveDone:false,\n                approveButton:true,\n                rejectLoader:false,\n                rejectDone: false,\n                rejectButton:true,\n                loginId:'',\n                emailid:'',\n                presentAddress:'',\n                comments:\"\"\n\n\n            }\n        this.onChange = this.onChange.bind(this);\n        this.approveEV = this.approveEV.bind(this);\n        this.rejectEV = this.rejectEV.bind(this);\n        this.loadOneTransection = this.loadOneTransection.bind(this);\n        this.onlockTransectionOnSkip = this.onlockTransectionOnSkip.bind(this);\n\n\n\n\n    }\n\n    loadOneTransection(){\n\n\n\n        const selectedProductId = localStorage.getItem(\"selectedProductId\");\n       // console.log( \"selectedProductId\",  selectedProductId);\n\n        if(selectedProductId == null) {\n           // alert(\"Please select a product to edit.\");\n            this.props.history.push('/verify');\n        }else {\n            ActivationService.getOneVerify(selectedProductId).then(res => {\n                let data = resolveResponse(res);\n                const selectedProduct = data.result;\n                var objectReason = '';\n                if(selectedProduct && selectedProduct.rejectedReasons){\n                    var listReasons = selectedProduct.rejectedReasons && selectedProduct.rejectedReasons.split(\"|\");\n                    objectReason = listReasons.reduce(function(result, item, index, array) {\n                        result[item] = true;\n                        return result;\n                      }, {}) ;\n                }\n\n\n                if(selectedProduct){\n                    this.setState({\n                        address1: selectedProduct.address1,\n                        address2: selectedProduct.address2,\n                        address3: selectedProduct.address3,\n                        presentAddress:selectedProduct.presentAddress,\n                        altContactNumber: selectedProduct.altContactNumber,\n                        comments: selectedProduct.comments,\n                        customerImageUrl: selectedProduct.customerImageUrl,\n                        customerSignatureUrl: selectedProduct.customerSignatureUrl,\n                        deDateTime: selectedProduct.deDateTime,\n                        deUser: selectedProduct.deUser,\n                        emailid: selectedProduct.emailid,\n                        alternateNumber:selectedProduct.alternateNumber,\n                        firstName: selectedProduct.firstName,\n                        gender: selectedProduct.gender,\n                        lastName: selectedProduct.lastName,\n                        middleName: selectedProduct.middleName,\n                        mobileNumber: selectedProduct.mobileNumber,\n                        pefImageUrl: selectedProduct.pefImageUrl,\n                        poiBackImageUrl: selectedProduct.poiBackImageUrl,\n                        poiFrontImageUrl: selectedProduct.poiFrontImageUrl,\n                        retailerSignatureUrl : selectedProduct.retailerSignatureUrl,\n                        poiNumber: selectedProduct.poiNumber,\n                        poiType: selectedProduct.poiType,\n                        status: selectedProduct.status,\n                        submittedBy:  selectedProduct.submittedBy,\n                        title: selectedProduct.title,\n                        transactionId: selectedProduct.transactionId,\n                        selectedReasons: objectReason,   //{\"One\":true, Two: true}\n                        sim : selectedProduct.simNumber,\n                        submittedDate: selectedProduct.submittedDate,\n                        submittedDateStr: selectedProduct.submittedDateStr,\n                        resubmittedDate : selectedProduct.resubmittedDate,\n                        resubmittedDateStr : selectedProduct.resubmittedDateStr,\n                        ftaDate : selectedProduct.ftaDate,\n                        prevRejectedImgs : selectedProduct.prevData\n                        });\n\n                        const userDetails = JSON.parse(localStorage.getItem(\"userDetails\"));\n                        console.log(\"Role\", userDetails.roleCode);\n\n                        if(userDetails && userDetails.roleCode){\n                            ActivationService.getStaticData(userDetails.roleCode).then(res => {\n                                console.log(\"reason:\", res);\n                                let data = resolveResponse(res);\n                                var rejectedReasons = '';\n                                if(this.state.submittedBy != 'RETAILER'){\n                                    rejectedReasons = data.result && data.result.eActivatedRejectionReasons;\n                                }else {\n                                    rejectedReasons = data.result && data.result.preActivatedRejectionReasons; \n                                }\n                                this.setState({ rejectedReasons: rejectedReasons});\n                            })\n                        }\n\n                        this.setState({ loader: true,  loginId : userDetails.loginId });\n\n                }else{\n                    Notify.showError(JSON.stringify(data));\n                }\n\n            })\n\n\n\n        }\n    }\n\n    componentDidMount() {\n        this.loadOneTransection();\n        localStorage.setItem(\"lastUrl\",\"verify-edit\");\n    }\n    render() {\n\n        // reasonList.push(<div style={{color:\"red\"}}> <FormControlLabel  color=\"primary\"  control={<Checkbox  onChange={this.handleChange(rejectedReasons[i].exemptReason)} checked={this.state.selectedReasons[rejectedReasons[i].exemptReason] ? true: false} /> } label={rejectedReasons[i].exemptReason} /> </div>)\n        // reasonList.push(<div> <FormControlLabel  control={<Checkbox   onChange={this.handleChange(rejectedReasons[i].exemptReason)} checked={this.state.selectedReasons[rejectedReasons[i].exemptReason] ? true: false} color=\"primary\"/> } label={rejectedReasons[i].exemptReason} /> </div>)\n\n\n        var rejectedReasons =  this.state.rejectedReasons;\n        var reasonList = [];\n        if(rejectedReasons){\n            for(var i=0; i < rejectedReasons.length; i++){\n                if(rejectedReasons[i].isMandatory == 1)\n                    reasonList.push(<div> <label style={{color:\"red\"}}><input type=\"checkbox\"  onChange={this.handleChange(rejectedReasons[i].exemptReason)} checked={this.state.selectedReasons[rejectedReasons[i].exemptReason] ? true: false} /> {rejectedReasons[i].exemptReason} </label></div>)\n                else\n                     reasonList.push(<div> <label> <input type=\"checkbox\"  onChange={this.handleChange(rejectedReasons[i].exemptReason)} checked={this.state.selectedReasons[rejectedReasons[i].exemptReason] ? true: false} /> {rejectedReasons[i].exemptReason} </label></div>)\n\n            }\n        }\n\n          var imageDetails = []; var baseUrl= ''; //https://retailer.airtel.lk';\n          if(this.state.poiFrontImageUrl){\n            imageDetails.push({\n                img: baseUrl+ this.state.poiFrontImageUrl,\n                title: 'POI Front Image',\n                author: 'Front Image',\n                featured: true,\n              });\n          }\n          if(this.state.poiBackImageUrl){\n            imageDetails.push({\n                img:  baseUrl+  this.state.poiBackImageUrl,\n                title: 'POI Back Image',\n                author: 'Back Image',\n                featured: true,\n              });\n          }\n          if(this.state.customerImageUrl){\n            imageDetails.push({\n                img:  baseUrl+  this.state.customerImageUrl,\n                title: 'Customer Image',\n                author: 'Customer Image',\n                featured: true,\n              });\n          }\n\n          if(this.state.customerSignatureUrl){\n            imageDetails.push({\n                img:  baseUrl+  this.state.customerSignatureUrl,\n                title: 'Customer Signature',\n                author: 'Customer Signature',\n                featured: true,\n              });\n          }\n\n          if(this.state.retailerSignatureUrl){\n            imageDetails.push({\n                img:  baseUrl+  this.state.retailerSignatureUrl,\n                title: 'Retailer Signature',\n                author: 'Retailer Signature',\n                featured: true,\n              });\n          }\n          console.log(\"imageDetails.len\",imageDetails.length)\n\n\n          \n\n          var prevImageDetails = [];\n          if(this.state.prevRejectedImgs && this.state.prevRejectedImgs.poiFrontImageUrl){\n            prevImageDetails.push({\n                img: this.state.prevRejectedImgs.poiFrontImageUrl,\n                title: 'POI Front Image',\n                author: 'Front Image',\n                featured: true,\n              });\n          }\n          if(this.state.prevRejectedImgs && this.state.prevRejectedImgs.poiBackImageUrl){\n            prevImageDetails.push({\n                img:  this.state.prevRejectedImgs.poiBackImageUrl,\n                title: 'POI Back Image',\n                author: 'Back Image',\n                featured: true,\n              });\n          }\n          if(this.state.prevRejectedImgs && this.state.prevRejectedImgs.customerImageUrl){\n            prevImageDetails.push({\n                img:  this.state.prevRejectedImgs.customerImageUrl,\n                title: 'Customer Image',\n                author: 'Customer Image',\n                featured: true,\n              });\n          }\n\n          if(this.state.prevRejectedImgs && this.state.prevRejectedImgs.customerSignatureUrl){\n            prevImageDetails.push({\n                img:  this.state.prevRejectedImgs.customerSignatureUrl,\n                title: 'Customer Signature',\n                author: 'Customer Signature',\n                featured: true,\n              });\n          }\n\n          if(this.state.prevRejectedImgs && this.state.prevRejectedImgs.retailerSignatureUrl){\n            prevImageDetails.push({\n                img:  this.state.prevRejectedImgs.retailerSignatureUrl,\n                title: 'Retailer Signature Image',\n                author: 'Retailer Signature Image',\n                featured: true,\n              });\n          }\n\n          if(this.state.prevRejectedImgs && this.state.prevRejectedImgs.pefImageUrl){\n            prevImageDetails.push({\n                img:  this.state.prevRejectedImgs.pefImageUrl,\n                title: 'Pef Image',\n                author: 'Pef Image',\n                featured: true,\n              });\n          }\n\n        var pefcontainer = 2, doccontaiter = 7, datacontainer=3;\n        if(this.state.submittedBy !='RETAILER') {\n            pefcontainer = 5; \n            doccontaiter = 5;\n            datacontainer = 2\n        }\n        \n        return(\n\n            <React.Fragment>\n            <PostLoginNavBar/>\n            {/* <h2  style={styles.textStyle}> View and Verify Document </h2> */}\n           \n            <Typography variant=\"h6\" style={styles.textStyleHeading} >View and Verify Document</Typography>\n\n            <Grid  direction=\"row\" container className=\"flexGrow\" spacing={1}  style={{paddingLeft:\"10px\",paddingRight:\"10px\"}}>\n\n                <Grid item xs={12} sm={pefcontainer}>\n                    <Paper style={{overflow:\"scroll\", height:\"78vh\"}}>\n                     {this.state.loader ?  this.state.submittedBy=='RETAILER' ?    <SubmitedByRetailer cafdetails={this.state} /> : <SubmitedByDistributer pefImageUrl={this.state.pefImageUrl} /> : \"\"}\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12} sm={doccontaiter}>\n                     <Paper style={{overflow:\"scroll\", height:\"78vh\"}}>\n                           {this.state.status==\"image_uploading\"? <Typography variant=\"h6\" style={{color:\"gray\",textAlign:\"center\"}} ><br /><br /> <br /> <br /> <br /> <br /> <br />No documents are uploaded yet</Typography> : null}\n\n                           {/* {this.state.status==\"av_pending\"? <ImageGalary imageDetails={imageDetails} /> : null} */}\n                           {/* {imageDetails.length ? <Typography variant=\"h6\">Customer Documents</Typography> : null } */}\n                           {this.state.status==\"av_pending\"? <SlideShowGalary imageDetails={imageDetails} /> : null}\n                            <br />\n                           {prevImageDetails.length ? <Typography variant=\"h6\">Previous Rejected Documents</Typography> : null }\n                           {/* {prevImageDetails.length ? <ImageGalary imageDetails={prevImageDetails} /> : null } */}\n                           {prevImageDetails.length ? <SlideShowGalary imageDetails={prevImageDetails} /> : null }\n\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={12} sm={datacontainer}>\n                    <Paper style={{padding:\"10px\"}}>\n                    <Typography variant=\"h6\" style={styles.textStyle}>Verify or Reject</Typography>\n                    <form style={styles.formContainer}>\n                        {/* <Typography variant=\"h6\" component=\"h3\">Mobile : {this.state.mobileNumber}   </Typography> */}\n                        <TextField label=\"Mobile No\" required={true} fullWidth name=\"productName\" value={this.state.mobileNumber} />\n                        <TextField label=\"NIC\" required={true} fullWidth name=\"displayName\" value={this.state.poiNumber} />\n                        <TextField label=\"SIM\" required={true} fullWidth name=\"displayName\" value={this.state.sim} />\n\n                         <Grid item xs={12} sm={12}  >\n                            <Typography variant=\"p\">Select Reasons</Typography>\n                         </Grid>\n                        <div>\n                            {reasonList}\n                        </div>\n                        <TextField multiline rows={2} label=\"Comments\" fullWidth margin=\"none\" name=\"comments\" value={this.state.comments} onChange={this.onChange}/>\n                    </form>\n                    </Paper>\n                </Grid>\n\n            </Grid>\n\n            <br />\n\n            {this.state.loader ?\n            <div style={styles.footerButton}><Grid container spacing={2} container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\">\n                        {this.state.approveLoader ? <CircularProgress />: \"\"}\n                        {this.state.approveDone ? <Button variant=\"outlined\" color=\"primary\" style={{marginLeft: \"20px\"}}> <DoneSharpIcon color=\"primary\"/> Approved and Loading Next</Button> : \"\"}\n                        {this.state.approveButton ? (this.state.status==\"image_uploading\" ?  <Button disabled variant=\"contained\" color=\"primary\" style={{marginLeft: '20px'}} onClick={this.approveEV}>Approve</Button>: <Button variant=\"contained\" color=\"primary\" style={{marginLeft: '20px'}} onClick={this.approveEV}>Approve</Button>): \"\"}\n\n                        {this.state.rejectLoader ? <CircularProgress />: \"\"}\n                        {this.state.rejectDone ?  <Button variant=\"outlined\" color=\"primary\" style={{marginLeft: \"20px\"}}> <DoneSharpIcon color=\"primary\"/> Rejected and Loading Next</Button> : \"\"}\n                        {this.state.rejectButton ? <Button variant=\"contained\" color=\"secondary\" style={{marginLeft: '20px'}} onClick={this.rejectEV}>Reject</Button>: \"\"}\n\n                        <Button variant=\"contained\" color=\"secondary\" style={{marginLeft: '20px', backgroundColor:\"#33691e\"}} onClick={this.skipThisVerify}> SKIP </Button>\n                        <Button variant=\"contained\" color=\"default\" style={{marginLeft: '20px'}} onClick={this.cancel}>Back to Listing</Button>\n            </Grid></div>: \"\"}\n\n\n\n\n            <div>\n        </div>\n\n            </React.Fragment>\n        )\n    }\n\n    handleChange = name => event => {\n        this.setState({ ...this.state, selectedReasons: {...this.state.selectedReasons, [name]: event.target.checked } });\n    };\n\n\n    updateLocalActList = (txn) =>{\n        var activationList = localStorage.getItem(\"activationList\") && JSON.parse(localStorage.getItem(\"activationList\"));\n            var index = -1;\n            for(var i=0; i < activationList.length; i++ ){\n                if(activationList[i].txnId == txn){\n                    index =i;\n                    break;\n                }\n            }\n            if (index > -1) {\n                activationList.splice(index, 1);\n            }\n        localStorage.setItem(\"activationList\",JSON.stringify(activationList));\n    }\n\n    onlockTransectionOnSkip = (txn) =>{\n        var transactionsIds = {\n            transactionsIds : [txn]\n        }\n        ActivationService.unlockTransectionsSkip( transactionsIds ).then(res => {\n            let data = resolveResponse(res);\n            if(data.message != 'ok'){\n                Notify.showError(\"Server Error\"+data.message);\n            }\n       });\n    }\n\n\n    skipThisVerify = (e) => {\n        console.log(\"here\")\n      //  e.preventDefault();\n        var selectedProductId = localStorage.getItem(\"selectedProductId\");\n        var verifyListingTxn = localStorage.getItem(\"verifyListingTxn\");\n        verifyListingTxn =  verifyListingTxn && verifyListingTxn.split(',');\n        var nextid = '';\n        for(var i=0; i < verifyListingTxn.length; i++ ){\n            if(selectedProductId == parseInt(verifyListingTxn[i])){\n                nextid =  parseInt(verifyListingTxn[i+1]);\n                break;\n            }\n        }\n\n       // this.updateLocalActList(selectedProductId);\n        this.onlockTransectionOnSkip(selectedProductId);\n        console.log(\"next id\",nextid );\n\n        if(nextid){\n            localStorage.setItem(\"selectedProductId\", nextid);\n           // Notify.showSuccess(\"Acquisition skipped successfully and Lodding next...\");\n\n            this.loadOneTransection();\n            this.setState({ approveLoader: false});\n            this.setState({ approveDone: false});\n            this.setState({ approveButton: true});\n\n            this.setState({ rejectDone: false});\n            this.setState({ rejectButton: true});\n\n\n        }else{\n        //    Notify.showError(\"No item available\");\n            this.props.history.push('/verify');\n        }\n    };\n\n    approveEV = (e) => {\n        e.preventDefault();\n\n       \n\n        console.log(\"approve data\",this.state);\n        var selectVal =  Object.values(this.state.selectedReasons)\n        var isselelctedAny = selectVal.find(function(val){\n                                return val == true;\n                            });\n\n        if(isselelctedAny){\n            Notify.showError(\"Remove reason selections to approve\");\n            return;\n        }\n\n        this.setState({ approveLoader: true});\n        this.setState({ approveButton: false});\n        \n        const product =  {\n            \"rejectedReasons\":null,\n            \"comments\": this.state.comments,\n            \"isPOIRejected\": this.state.isPOIRejected,\n            \"isCumtomerPhotoRejected\":0,\n            \"verificationDateTime\": new Date(),\n            \"verificationUser\": this.state.loginId,\n            \"isRejected\": 0,\n            \"transactionId\":this.state.transactionId\n        }\n\n\n        ActivationService.approveDocs(product)\n        .then(res => {\n          var data =  resolveResponse(res, \"Acquisition Verified successfully and Lodding next acquisition to verify...\");\n        //this.props.history.push('/verify');\n        this.setState({ approveLoader: false});\n        this.setState({ approveDone: true});\n\n\n        console.log(data);\n\n        //    var second = 5 ;\n        //    var showSeconds = setInterval(function(){\n        //         Notify.showSuccess(\"Wait for \"+second+\" Second\");\n        //         second--;\n        //         if(second == 0)\n        //         clearInterval(showSeconds);\n        //     }, 1000)\n\n        //   Notify.showSuccess(\"Lodding next acquisition to verify...\");\n\n         //   this.updateLocalActList(this.state.transactionId);\n\n          // this.skipThisVerify();\n            setTimeout(() => {\n                this.skipThisVerify();\n            }, 2000);\n        });\n    };\n\n    rejectEV = (e) => {\n\n\n       //alert(\"this.state.selectedReasons[i].includes\");\n\n        console.log(\"Reject Data\",this.state);\n\n        var selectVal =  Object.values(this.state.selectedReasons)\n        var isselelctedAny = selectVal.find(  function(val){\n                                return val == true;\n                            });\n\n        if(!isselelctedAny){\n            Notify.showError(\"Select reason(s) to reject!\");\n            return;\n        }\n\n        this.setState({ rejectLoader: true});\n        this.setState({ rejectButton: false});\n\n\n        const selectedReasons =  Object.keys(this.state.selectedReasons).join(\"|\");\n\n        var keyList = Object.keys(this.state.selectedReasons);\n\n        var isPOIRejected = 0;\n        for(var i=0; i < keyList.length; i++){\n            if(keyList[i].includes(\"POI\")){\n                isPOIRejected =1;\n                break;\n            }\n\n        }\n\n\n        const rejectData =  {\n            \"rejectedReasons\":selectedReasons,\n            \"comments\": this.state.comments,\n            \"isPOIRejected\": isPOIRejected,\n            \"isCumtomerPhotoRejected\":0,\n            \"verificationDateTime\": new Date(),\n            \"verificationUser\":this.state.loginId,\n            \"isRejected\": 1,\n            \"transactionId\":this.state.transactionId\n        }\n\n        ActivationService.approveDocs(rejectData)\n        .then(res => {\n           var resdata =  resolveResponse(res, \"Acquisition Rejected successfully and Lodding next acquisition to verify...\");\n            //this.props.history.push('/verify');\n          //  this.updateLocalActList(this.state.transactionId);\n          this.setState({ rejectLoader: false});\n          this.setState({ rejectDone: true});\n         \n\n            setTimeout(() => {\n                this.skipThisVerify();\n            }, 2000);\n        });\n\n    };\n\n    cancel = (e) => {\n        this.props.history.push('/verify');\n    };\n\n    onChange = (e) => {\n        var data =  e.target.value.trim();\n        var test = !data.includes(\"@\") && !data.includes(\"$\") && !data.includes(\"&\") ; \n        if(test){\n            this.setState({[e.target.name]: e.target.value});\n        }\n      //  this.setState({[e.target.name]: e.target.value});\n\n    }\n\n}\n\nconst styles ={\n    formContainer : {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle :{\n        display: 'flex',\n        justifyContent: 'center', \n    },\n    textStyleHeading:{\n        display: 'flex',\n        justifyContent: 'center', \n        // marginTop:\"5px\",\n\n    },\n    mainDivAdjustment:{\n        padding:0,\n        backgroundColor:\"red\", \n     \n    },\n\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'center'\n    }\n\n    \n\n};\n\n\n\n\n\n\n\nclass SubmitedByRetailer extends React.Component {\n\n\n    render() {\n        return(\n            <div className=\"mainDivAdjustment\">\n\n\n             <List component=\"nav\" aria-label=\"main mailbox folders\">\n                  \n                    <Typography variant=\"h6\" style={styles.textStyle}> Acquisition Details</Typography>\n                    <div style={{padding:\"10px\"}}> \n                        <b> Title : </b> {this.props.cafdetails.title} {this.props.cafdetails.firstName} {this.props.cafdetails.middleName} {this.props.cafdetails.lastName} \n                        <br /> \n                       <b> Gender : </b>  {this.props.cafdetails.gender} \n                        <br /> \n                       <b> Address : </b>  {this.props.cafdetails.presentAddress}   \n                        <br /> \n                      <b> Alternate  No. :</b>   {this.props.cafdetails.alternateNumber}   \n                        <br /> \n                      <b>  Email : </b> {this.props.cafdetails.emailid} \n                        <br /> \n                       <b> FTA Date :</b>  {this.props.cafdetails.ftaDate ? this.props.cafdetails.ftaDate.substring(0, 10) : \"none\"} \n                        <br /> \n                       <b>Submit Date :  </b> {this.props.cafdetails.submittedDateStr ? this.props.cafdetails.submittedDateStr.substring(0, 10) : \"none\"}\n                        <br /> \n                       <b>Resubmit Date :  </b> {this.props.cafdetails.resubmittedDateStr ? this.props.cafdetails.resubmittedDateStr.substring(0, 10) : \"Not yet resubmitted\"} \n\n\n                    </div>\n\n                    {/* <ListItem divider button>\n                        <Typography variant=\"body1\" style={styles.textStyle}>Name :  {this.props.cafdetails.title} {this.props.cafdetails.firstName} {this.props.cafdetails.middleName} {this.props.cafdetails.lastName}  </Typography>\n\n                    </ListItem>\n                    <ListItem divider button>\n                        <Typography variant=\"body1\" component=\"h3\">Gender : {this.props.cafdetails.gender}   </Typography>\n                    </ListItem>\n                    <ListItem divider button>\n\n                        <Typography  variant=\"body1\" component=\"h3\">Address :  {this.props.cafdetails.address1} {this.props.cafdetails.address2} {this.props.cafdetails.address3}     </Typography>\n                   </ListItem>\n                    <ListItem divider button>\n                        <Typography  variant=\"body1\" component=\"h3\">Alternet  No. : {this.props.cafdetails.altContactNumber}   </Typography>\n                    </ListItem>\n                    <ListItem  divider button>\n                        <Typography variant=\"body1\" component=\"h3\">DOB : {this.props.cafdetails.dob} </Typography>\n                    </ListItem>\n\n                    <ListItem divider button>\n                     <Typography variant=\"body1\" component=\"h3\">FTA Date : {this.props.cafdetails.ftaDate ? this.props.cafdetails.ftaDate.substring(0, 10) : \"none\"}  </Typography>\n                    </ListItem>\n\n\n                     <ListItem divider button>\n                     <Typography variant=\"body1\" component=\"h3\">Submit Date : {this.props.cafdetails.submittedDate ? this.props.cafdetails.submittedDate.substring(0, 10) : \"none\"}  </Typography>\n                    </ListItem>\n\n                    <ListItem  divider button>\n                    <Typography variant=\"body1\" component=\"h3\">Resubmit Date : {this.props.cafdetails.resubmittedDate ? this.props.cafdetails.resubmittedDate.substring(0, 10) : \"Not yet resubmitted\"}  </Typography>\n                    </ListItem> */}\n\n\n            </List>\n            </div>\n        )\n    }\n}\n\nclass SubmitedByDistributer extends React.Component {\n    render() {\n\n        //this.state.customerImageUrl\n        var pefdetails = {\n            img: this.props.pefImageUrl,\n            title: 'Customer Application Form',\n            author: 'Customer Application Form',\n            featured: true,\n          };\n\n          var data = []; \n\n          if(this.props.pefImageUrl){\n            data.push({\n                img:  this.props.pefImageUrl,\n                title: 'Customer Application Form',\n                author: 'Customer Application Form',\n                featured: true,\n              });\n          }\n         \n        return(\n            <>\n         \n                <Typography  style={styles.textStyle} variant=\"body2\"> Customer Application Form </Typography>\n                {/* <SlideShowGalary imageDetails={data} />  */}\n                \n                <ReactPanZoom  image={pefdetails.img} alt={pefdetails.title}/>\n\n                {/* <iframe style={{width: \"100%\", height:\"527px\"}}  frameBorder=\"0\" src=\"https://pbs.twimg.com/media/Bpbm1DXCAAA5vk4?format=jpg&name=900x900\"> </iframe> */}\n                {/* <img style={{width: \"555px\", height:\"555px\"}} src={\"https://pbs.twimg.com/media/Bpbm1DXCAAA5vk4?format=jpg&name=900x900\"}/> */}\n\n\n            {/* <ImageGalaryPEF imageDetails={PEFData} /> */}\n\n            </>\n        )\n    }\n}\n\n\n\n\n\n\nexport default VerifyEdit;\n","/* eslint-disable no-script-url */\n\nimport React from 'react';\n\nexport default function Hooks() {\n\n\nconst [page, setPage] = React.useState(0);\nconst [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n\n  const allhooks = {\n    page : page, \n    setPage:setPage,\n    rowsPerPage:rowsPerPage,\n    setRowsPerPage:setRowsPerPage\n  }\n\n  return allhooks; \n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\n  createData('KitKat', 518, 26.0, 65, 7.0),\n  createData('Lollipop', 392, 0.2, 98, 0.0),\n  createData('Marshmallow', 318, 0, 81, 2.0),\n  createData('Nougat', 360, 19.0, 9, 37.0),\n  createData('Oreo', 437, 18.0, 63, 4.0),\n];\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Mobile' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Nic' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Sim' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Distributer' },\n  { id: 'protein', numeric: true, disablePadding: false, label: ' Status' },\n];\n\nfunction EnhancedTableHead(props) {\n\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={order}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable(props) {\n\n  if(props.products.length)\n  console.log(\"Vijay products\",props.products[0].distributer);\n\n\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'previous page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'next page',\n          }}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n","import React, { useState }  from \"react\";\nimport ActivationService from \"../service/ActivationService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Notify from \"../../utils/Notify\";\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\n\n\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {Container} from \"@material-ui/core\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport \"./DataEntry.css\";\n\nimport StickyHeadTable from '../verify/StickyHeadTable';\n\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Hooks from './Hooks'; \n\nimport EnhancedTable from './EnhancedTable';\n\n\n\n\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass DataEntryList extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state ={\n            products: [],\n            searchedproducts: null,\n            searchby:'',\n            listingTakingTime : null,\n            listofzones:[],\n            selectedZone:[],\n            zone:''\n\n        };\n        this.loadProductList = this.loadProductList.bind(this);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n\n        this.onChange = this.onChange.bind(this);\n\n        this.page = Hooks.page; \n        this.rowsPerPage=Hooks.rowsPerPage; \n        console.log( \"Hooks.page: \" ,  Hooks.page); \n     \n    }\n\n    // myhooks(){\n    //     [this.page, this.setPage] = React.useState(0);\n    //     [this.rowsPerPage, this.setRowsPerPage] = React.useState(5);\n    // }\n\n    componentDidMount() {\n        this.loadProductList();\n        localStorage.setItem(\"lastUrl\",\"dataentry\");\n\n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value})\n    }\n     \n    loadProductList(mobileNumber) {\n        var d = new Date();\n        var endTime = d.getTime();\n\n        var startTime = endTime - 259200000; \n       \n        var  data =  {\n            \"endDate\": endTime,\n            \"mobileNumber\": mobileNumber ? mobileNumber : null,\n            \"noOfRecords\": 20,\n            \"role\": \"DE\",\n            \"startDate\": 0,\n            \"txnId\": 0,\n            \"type\": \"next\",\n            \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n        }\n\n        document.getElementById('showMessage').innerHTML = \"Please Wait Loading...\";\n\n        ActivationService.listDocs(data)\n            .then((res) => {\n              \n                let data = resolveResponse(res);\n                if(data && data.result && data.result.activationList){\n                    this.setState({products: data && data.result.activationList})\n                    this.setState({searchedproducts:data && data.result.activationList})\n                    var listingIds = data.result.activationList.map(function(val, index){\n                        return val.txnId\n                    })\n                    localStorage.setItem(\"dataentryListingTxn\",listingIds);\n                    document.getElementById('showMessage').innerHTML = \"\";\n\n                 }else {\n                    if(document.getElementById('showMessage')) \n                        document.getElementById('showMessage').innerHTML = \"No new documents for data entry.\";\n                 }\n            });\n\n            setTimeout(() => {\n                if(this.state.searchedproducts && this.state.searchedproducts.length ==0){\n                    document.getElementById('showMessage').innerHTML = \"Server taking time to response please reload again and check\";\n                }\n            }, 7000);\n\n            ActivationService.getStaticData('DE').then(res => {\n                let data = resolveResponse(res);\n                this.setState({listofzones: data && data.result && data.result.zones}) \n            })\n\n    }\n\n    addProduct() {\n        this.props.history.push('/add-product');\n    }\n\n    searchOnDB(mobileNumber) {\n        \n\n        this.loadProductList(mobileNumber) ;\n\n\n        // console.log(mobileNumber);\n\n        // ActivationService.searchMobileNo(mobileNumber).then(res => {\n        //     let data = resolveResponse(res);\n        //     const selectedProduct = data.result;            \n        //     if(selectedProduct && selectedProduct.transactionId){\n        //         window.localStorage.setItem(\"dataEntryId\", selectedProduct.transactionId);\n        //         this.props.history.push('/data-edit');\n        //         // this.setState({\n        //         //     });\n        //     }\n           \n        // })\n    }\n\n    onChange = (e) => {\n        // this.setState({[e.target.name]: e.target.value});\n        // if(this.state.searchby){\n        //     this.setState({searchedproducts: this.state.products.filter(l => {\n        //         return l.mobileNumber.toLowerCase().match( e.target.value );\n        //     })});\n        // }else{\n        //     this.setState({searchedproducts: this.state.products})\n        // }\n        // if(e.target.value.length > 10){\n        //     this.setState({searchby: e.target.value.substring(0, 10)});\n            \n        // }\n        const re = /^[0-9\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n            this.setState({searchby: e.target.value})\n        }\n    }\n\n\n    editProduct(productId) {\n        console.log(\"productid\",productId )\n        \n        window.localStorage.setItem(\"dataEntryId\", productId);\n        this.props.history.push('/data-edit');\n\n        // this.props.history.push({\n        //     pathname: '/edit-doc',\n        //     search: '?query=abc',\n        //     state: { rowdata: productId }\n        //   })\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n\n      \n\n    render(){\n       \n        // const [page, setPage] = React.useState(0);\n        // const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n\n        // function handleChangePage(event, newPage){\n        //     setPage(newPage);\n        // }\n\n        // function handleChangePage(event){\n        //     setRowsPerPage(+event.target.value);\n        //     setPage(0);\n        // }\n\n\n        // function handleChangeRowsPerPage(event){\n        //     setRowsPerPage(+event.target.value);\n        //     setPage(0);\n        // };\n\n\n        // const editProduct = (productId) => {\n        //   window.localStorage.setItem(\"selectedProductId\", productId);\n        //  // props.history.push('/edit-doc');\n        // };\n\n      \n      //  console.log(\"this.state.products\",this.state.products); \n        return(\n            <React.Fragment>\n                <PostLoginNavBar/>\n                <Paper style={{padding:\"10px\"}}>\n                {/* <Container  > */}\n                    {/* <EnhancedTable products={this.state.products}/> */}\n\n                    {/* <StickyHeadTable products={this.state.products} />\n                     */}\n\n                    <Grid syt  container spacing={3} container\n                        direction=\"row\"\n                        justify=\"right\"\n                        alignItems=\"center\">\n                            <Grid item  xs={12} xs={6}>\n                            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                              Data Entry\n                            </Typography> \n                            </Grid>\n\n                            <Grid item xs={10} sm={3}> \n                                <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                        <Select\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        multiple\n                                        name=\"selectedZone\"\n                                        value={this.state.selectedZone}\n                                        onChange={this.zoneChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        {this.state.listofzones ? this.state.listofzones.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                        </Select>\n                                    </FormControl>\n                            </Grid>\n                            \n\n                            <Grid item xs={10} sm={2} alignItems=\"flex-end\" alignContent=\"flex-end\"  justify=\"flex-end\" > \n                                <TextField value={this.state.searchby}  label=\"Search by Mobile No.\"  style={{width:\"100%\"}} name=\"Search by Mobile No.\" name=\"searchby\" onChange={this.onChange} />\n                            </Grid>\n                            <Grid item xs={2} sm={1} alignItems=\"flex-end\" alignContent=\"flex-end\"  justify=\"flex-end\" > \n                               <Button type=\"submit\"  onClick={() => this.searchOnDB( this.state.searchby )} variant=\"contained\"  style={{marginLeft: '20px'}} >Search</Button>\n                            </Grid>\n                            \n                          \n                        </Grid>\n\n                \n                \n\n                    <div style={{padding:\"10px\", overflow:\"auto\", height:\"550px\"}} >\n\n\n                    {/* style={{whiteSpace: \"nowrap\"}}   style={{background:\"#eeee\"}} */}\n                    <Table  size=\"small\"   aria-label=\"sticky table\">\n                        <TableHead style={{width:\"170px\",whiteSpace: \"nowrap\"}}>\n                            <TableRow >\n                            <TableCell align=\"\">View</TableCell>\n\n                            <TableCell align=\"\">Mobile Number</TableCell>\n\n                                <TableCell align=\"\">NIC</TableCell>\n                                <TableCell align=\"\">SIM</TableCell>\n                                <TableCell align=\"\">PEF Count</TableCell>\n                                <TableCell align=\"\">NIC Count</TableCell>\n                                <TableCell align=\"\">Distributor</TableCell>\n                                <TableCell align=\"\">Zone</TableCell>\n                                <TableCell align=\"\">FTA Date</TableCell>\n                                {/* <TableCell align=\"\">Status</TableCell> */}\n                                <TableCell align=\"\">Resubmit</TableCell>\n                                <TableCell align=\"\">Verified Date</TableCell>\n                                <TableCell align=\"\">Submit Date</TableCell>\n                                <TableCell align=\"\">Resubmit Date</TableCell>\n\n                            </TableRow>\n                        </TableHead>\n                        <TableBody style={{width:\"170px\",whiteSpace: \"nowrap\"}}>\n                            {this.state.searchedproducts ? this.state.searchedproducts.map(row => (\n                                <TableRow  >\n                                    <TableCell align=\"center\" onClick={() => this.editProduct(row.txnId)}  hover key={row.txnId}><VisibilityIcon style={{cursor:\"hand\"}} /></TableCell>\n                                    <TableCell component=\"th\" scope=\"row\" className=\"hidden\">\n                                        {row.mobileNumber}\n                                    </TableCell>\n                                    <TableCell align=\"center\">{row.nic}</TableCell>\n                                    <TableCell align=\"center\">{row.sim}</TableCell>\n                                    <TableCell align=\"center\">{row.pefCount}</TableCell>\n                                    <TableCell align=\"center\">{row.nicCount}</TableCell>\n                                    <TableCell align=\"center\">{row.distributer}</TableCell>\n                                    <TableCell align=\"center\">{row.zone}</TableCell>\n                                    <TableCell align=\"center\">{row.ftaDate.substring(0, 10)}</TableCell>\n                                    {/* <TableCell align=\"center\">{row.status ? 'YES' : 'NO'}</TableCell> */}\n                                    <TableCell align=\"center\">{row.resubmit}</TableCell>\n\n                                    <TableCell align=\"center\">{row.verifiedDate ? row.verifiedDate.substring(0, 10) : \"none\"}</TableCell>\n                                    <TableCell align=\"center\">{row.submitDate ? row.submitDate.substring(0, 10) : \"none\"}</TableCell>\n                                    <TableCell align=\"center\">{row.resubmitDate ? row.resubmitDate.substring(0, 10) : \"none\"}</TableCell>\n                                  \n                                </TableRow>\n                            )): \"\"}\n                        </TableBody>\n                    </Table>\n                    <div style={{color:\"gray\", fontSize:\"15px\", textAlign:\"center\"}}> <br/> <span id=\"showMessage\"> </span></div>\n\n                    </div>\n                    {/* <TablePagination\n                        rowsPerPageOptions={[5, 10, 25, 100]}\n                        component=\"div\"\n                        count={this.state.searchedproducts.length}\n                        rowsPerPage={5}\n                        page={1}\n                        backIconButtonProps={{\n                        'aria-label': 'previous page',\n                        }}\n                        nextIconButtonProps={{\n                        'aria-label': 'next page',\n                        }}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                    /> */}\n                \n                {/* </Container> */}\n\n                </Paper>\n            </React.Fragment>\n        )\n    }\n\n}\n//this.myhooks();\n\nconst handleChangePage = (event, newPage) => {\n    this.setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n   \n    this.setRowsPerPage(parseInt(event.target.value, 10));\n   this.setPage(0);\n  };\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'left'\n    }\n    ,\n    selectStyle:{\n        // minWidth: '100%',\n         marginBottom: '0px',\n          minWidth: 340,\n          maxWidth: 340,\n    }\n}\n\n\nexport default DataEntryList;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n  },\n}));\n\nexport default function PaperSheet(props) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Paper className={classes.root}>\n        <Typography variant=\"h5\" component=\"h3\">\n          Mobile No: 909222000\n        </Typography>\n        <Typography component=\"p\">\n          Paper can be used to build surface or other elements for your application.\n        </Typography>\n      </Paper>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\n\nconst src = 'https://mediaassets.koaa.com/cordillera-network/wp-content/uploads/sites/11/2019/04/11123547/Colorado-Safety-Act-DL-1024x576.jpg'\n\n\n//const src = \"https://www.researchgate.net/profile/Jayesh_Kumar4/publication/23743730/figure/tbl1/AS:650037189165092@1531992351493/Data-structure-for-NIC-2-digit-Industry-code-Based-on-the-industrial-classification-of.png\"; \n\nclass Zoom extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    backgroundImage: `url(${this.props.imageUrl})`,\n    backgroundPosition: '0% 0%'\n  }\n\n  handleMouseMove = e => {\n    const { left, top, width, height } = e.target.getBoundingClientRect()\n    const x = (e.pageX - left) / width * 100\n    const y = (e.pageY - top) / height * 100\n    this.setState({ backgroundPosition: `${x}% ${y}%` })\n  }\n\n  render = (props) =>\n    <figure onMouseMove={this.handleMouseMove} style={this.state}>\n      <img src={this.props.imageUrl} width=\"400\" />\n    </figure>\n}\n\nexport default Zoom;\n\n// ReactDOM.render(<Zoom />, document.getElementById('viewImg'))\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport ActivationService from \"../service/ActivationService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function CheckboxList(props) {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([0]);\n\n\n\n // console.log('props.rejectionReasons', props);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    alert(newChecked);\n    setChecked(newChecked);\n\n\n  };\n\n   var verifyreasons = [\"Customer - Rejection reason 1\",\"Customer - Rejection reason 2\",\"Customer - Rejection reason 3\",\"Customer - Rejection reason 4\",\"Customer - Rejection reason 5\"]\n  // const userDetails = JSON.parse(localStorage.getItem(\"userDetails\")); \n  // console.log(\"Role\", userDetails.roleCode);\n  // ActivationService.getStaticData(userDetails.roleCode).then(res => {\n  //     let data = resolveResponse(res);\n  //     console.log(\"Static Data vks\", data.result.rejectionReasons);\n  //     verifyreasons  =  data.result.rejectionReasons; \n  // })\n  \n  return (\n    <>\n   \n    <List className={classes.root}>\n      {  verifyreasons.map(value => {\n        const labelId = `checkbox-list-label-${value}`;\n\n        return (\n          \n          <ListItem key={value} role={undefined} dense button onClick={handleToggle(value)}>\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                checked={checked.indexOf(value) !== -1}\n                tabIndex={-1}\n                disableRipple\n                inputProps={{ 'aria-labelledby': labelId }}\n               \n              />\n            </ListItemIcon>\n            <ListItemText id={labelId} primary={`${value}`} />\n             \n          </ListItem>\n        );\n      })}\n    </List>\n    </>\n  );\n}\n","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nfunction addMonths(date, months) {\n  var d = date.getDate();\n  date.setMonth(date.getMonth() + +months);\n  if (date.getDate() != d) {\n    date.setDate(0);\n  }\n  return date;\n}\n\n\n\nexport default function MaterialUIPickers(props) {\n\n  console.log(\"startDatestartDate,\",props ); \n  var requiredDate ='';\n  // The first commit of Material-UI\n  var [selectedStartDate, setSelectedStartDate] = React.useState(new Date());\n  var [selectedEndDate, setSelectedEndDate] = React.useState(new Date());\n  const handleStartDateChange = date => {\n     \n     setSelectedStartDate(date);\n    props.callbackFromParent.myCallback(date,\"START_DATE\");\n  };\n  const handleEndDateChange = date => {\n    console.log(date,\"SELECTED_DATE\")\n    setSelectedEndDate(date);\n    props.callbackFromParent.myCallback(date,\"END_DATE\");\n  };\n\n  console.log(props)\n\n  // var date = new Date(); \n  // date.getMonth() - 6; \n\n  \n  //  var dateObj = new Date(selectedStartDate);\n\n  \n\n  //  var requiredDate = dateObj.setMonth(dateObj.getMonth() + 6);\n\n\n  // var currDate = new Date();\n  // var back18Month= currDate.setMonth(currDate.getMonth() - 18);\n  // console.log(new Date(back18Month),\"back18Month\");\n\n  // if(selectedStartDate <  back18Month){\n  //   selectedStartDate = back18Month;\n  // }\n\n  // if(selectedEndDate <  selectedStartDate){\n  //   selectedEndDate = requiredDate;\n  // }\n\n  // if(requiredDate > new Date() ) {\n  //   requiredDate = new Date();\n  // }\n  var date15Years = new Date(); \n      date15Years.setFullYear( date15Years.getFullYear() - 15 );\n    //  selectedStartDate =  date;\n // var requiredDate = selectedStartDate.setMonth(selectedStartDate.getMonth() + 6)\n\n//  console.log(\"selectedStartDate\",selectedStartDate, new Date()); \n//  if(selectedStartDate != new Date()){\n//   selectedStartDate = null; \n//  }\nvar today = new Date();\nif(selectedStartDate && selectedStartDate.getDate() == today.getDate() && selectedStartDate.getFullYear() == today.getFullYear()  && selectedStartDate.getMonth() == today.getMonth()){\n  setSelectedStartDate(null);\n }\n\n\n return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container justify=\"space-around\">\n     \n        <KeyboardDatePicker\n        required={true}\n        //  emptyLabel=\"\"\n          margin=\"normal\"\n          //readOnly=\"true\"\n          // disabled=\"true\"\n          disableFuture=\"true\"\n         // autoOk={false}\n          allowKeyboardControl=\"true\"\n          maxDate={date15Years}\n         // minDate={back18Month}\n         // minDateMessage=\"Only 18 months back report can be fatch.\"\n          id=\"date-picker-dialog\"\n          label=\"Date of Birth\"\n          format=\"dd/MM/yyyy\"\n          value={ selectedStartDate }\n         // value={selectedStartDate}\n          onChange={handleStartDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n        {/* <KeyboardDatePicker\n      \n          disableFuture=\"true\"\n          maxDateMessage=\"Max allowed date range is 6 months.\"\n          minDateMessage=\"End date can't be less than start date.\"\n          minDate={selectedStartDate}\n          maxDate={requiredDate}\n          margin=\"normal\"\n          id=\"date-picker-dialog\"\n          label=\"End Date\"\n          format=\"dd/MM/yyyy\"\n          value={selectedEndDate}\n          onChange={handleEndDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        /> */}\n       \n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 545,\n  },\n  media: {\n    height: 170,\n    width: 240,\n  },\n});\n\nexport default function MediaCard(props) {\n  const classes = useStyles();\n\n  const imageDetails = props.imageDetails; \n\n  console.log(\"details\",imageDetails)\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={imageDetails.img}\n          title={imageDetails.title}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"body2\" component=\"span\">\n          {imageDetails.title}\n          </Typography>\n          {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n            across all continents except Antarctica\n          </Typography> */}\n        </CardContent>\n      </CardActionArea>\n      {/* <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions> */}\n    </Card>\n  );\n}","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\n//import Lightbox from \"react-image-lightbox\";\n//import Lightbox from \"react-image-lightbox-rotate-fixed\";\n\nimport Lightbox from \"rhino-react-image-lightbox-rotate\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nimport $ from 'jquery';\n\nimport \"react-image-lightbox/style.css\";\n\n\nimport RecipeReviewCard from './RecipeReviewCard'; \n\nclass ImageGalary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      photoIndex: 0,\n      isOpen: false\n    };\n\n    this.openImageGalary = this.openImageGalary.bind(this);\n\n  }\n\n  openImageGalary = (index) => {\n\n    console.log(\"index\", index); \n    this.setState({\n      isOpen: true,\n      photoIndex:index\n      // mainSrc:'https://pbs.twimg.com/media/Bpbm1DXCAAA5vk4?format=jpg&name=900x900'\n    });\n    \n    $('.MuiToolbar-root').hide();   \n  }\n\n\n  render() {\n\n\n\n  const styles = {\n    imgTextStyle : {\n      textAlign: 'center',\n      position: 'relative',\n      marginBottom: '-24px',\n      fontSize: 'inherit',\n      color:\"white\",\n      fontWeight:\"bold\"\n    }, \n    topImgStyle:{\n      width:\"100%\", \n      height:\"390px\", \n      cursor:\"zoom-in\", \n      borderRadius:\"3px\"\n    },\n    buttomImgSyle: {\n      width:\"100%\", \n      height:\"240px\", \n      cursor:\"zoom-in\", \n      borderRadius:\"3px\"\n    },\n    displayBlock:{\n      display:'block', \n    },\n    displayNone:{\n      display:'none', \n    }\n\n  };\n\n    const { photoIndex, isOpen } = this.state;\n    const imageDetails = this.props.imageDetails;\n    \n      var images = []; \n      const topImgItem = []\n      const buttomImgItem = []\n\n\n      // topImg: topImg,\n      // bottomImg :bottomImg\n\n      var  topImg = this.props.imageDetails;\n\n      topImg.map((data,i)=>{\n        images.push(topImg[i].img); \n\n        if(data.title == \"POI Front Image\" || data.title == \"POI Back Image\"){\n          topImgItem.push(\n            <Grid item xs={12} sm={12} >\n              <div style={styles.imgTextStyle}> {data.title} </div> \n              <img onClick={() => this.openImageGalary(i)} src={data.img}  style={styles.topImgStyle} />\n            </Grid>\n            ); \n        }else{\n          buttomImgItem.push(\n            <Grid item xs={12} sm={4} onClick={() => this.openImageGalary(i)}>\n             <div style={styles.imgTextStyle}> {data.title} </div>\n             <img onClick={() => this.openImageGalary(i)}  src={data.img}  style={styles.buttomImgSyle} />\n           </Grid>\n            ); \n        }\n      })\n   \n\n \n    \n    return (\n       \n      <div style={{justifyContent:\"center\"}}>\n\n            <Grid container  spacing={1}  direction=\"row\" justify=\"center\" alignItems=\"center\">\n            {topImgItem}\n              {/* <Grid style={images[0] ? styles.displayBlock : styles.displayNone} item xs={12} sm={6}  onClick={() => this.openImageGalary(0)} >\n                <div style={styles.imgTextStyle}> {imageDetails[0].title} </div>\n                <img onClick={() => this.openImageGalary(0)}  src={images[0]}  style={styles.topImgStyle} />\n              </Grid>\n\n              <Grid style={images[1] ? styles.displayBlock : styles.displayNone}  item xs={12} sm={6}  onClick={() => this.openImageGalary(1)} >\n                <div style={styles.imgTextStyle}> {imageDetails[1].title} </div>\n                <img onClick={() => this.openImageGalary(1)}  src={images[1]}  style={styles.topImgStyle} />\n              </Grid> */}\n\n              \n            </Grid>\n\n            <Grid container  spacing={1} direction=\"row\" justify=\"center\" alignItems=\"center\">\n            {buttomImgItem}\n              {/* <Grid style={images[2] ? styles.displayBlock : styles.displayNone}  item xs={12} sm={4} onClick={() => this.openImageGalary(2)}>\n                <div style={styles.imgTextStyle}> {imageDetails[2].title} </div>\n                <img onClick={() => this.openImageGalary(2)}  src={images[2]}  style={styles.buttomImgSyle} />\n              </Grid>\n\n               <Grid style={images[3] ? styles.displayBlock : styles.displayNone}  item xs={12} sm={4} onClick={() => this.openImageGalary(3)}>\n                <div style={styles.imgTextStyle}> {imageDetails[3].title} </div>\n                <img onClick={() => this.openImageGalary(3)}  src={images[3]}  style={styles.buttomImgSyle} />\n              </Grid>\n\n               <Grid style={images[4] ? styles.displayBlock : styles.displayNone}  item xs={12} sm={4} onClick={() => this.openImageGalary(4)}>\n                <div style={styles.imgTextStyle}> {imageDetails[4].title} </div>\n                <img onClick={() => this.openImageGalary(4)}  src={images[4]}  style={styles.buttomImgSyle} />\n              </Grid> */}\n            </Grid>\n\n          \n            {/* <table cellSpacing=\"0\">\n              <tr> \n                <td style={{textAlign:\"center\"}}><img style={styles.imageFormat} style={{width:\"100%\", height:\"300px\", cursor:\"zoom-in\", borderRadius:\"3px\"}}   onClick={() => this.openImageGalary(0)}   src={images[0]}/><br />{imageDetails[0].title}  </td> \n                <td  colSpan=\"2\" style={{textAlign:\"center\"}}><img style={styles.imageFormat}  style={{width:\"100%\", height:\"300px\", cursor:\"zoom-in\", borderRadius:\"3px\"}}   onClick={() => this.openImageGalary(1)}  src={images[1]} /><br/>{imageDetails[1].title}</td> \n              </tr> \n              <tr> \n                <td style={{textAlign:\"center\"}}> <img style={styles.imageFormat}  style={{width:\"100%\", height:\"200px\", cursor:\"zoom-in\", borderRadius:\"3px\"}} onClick={() => this.openImageGalary(2)}  src={images[2]}/><br />{imageDetails[2].title}</td> \n                <td style={{textAlign:\"center\"}}><img  style={styles.imageFormat}  style={{width:\"100%\", height:\"200px\", cursor:\"zoom-in\", borderRadius:\"3px\"}}  onClick={() => this.openImageGalary(3)}  src={images[3]}/><br />{imageDetails[3].title} </td> \n                <td style={{textAlign:\"center\"}}><img  style={styles.imageFormat}  style={{width:\"100%\", height:\"200px\", borderRadius:\"3px\"}} onClick={() => this.openImageGalary(2)}  src={images[3]}/><br />{imageDetails[3].title} </td> \n              </tr> \n            </table>  */}\n\n        {isOpen && (\n          <Lightbox\n            mainSrc={images[photoIndex]}\n            nextSrc={images[(photoIndex + 1) % images.length]}\n            prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n            onCloseRequest={() => {this.setState({ isOpen: false }); $('.MuiToolbar-root').show(); }}\n            onMovePrevRequest={() =>{\n                this.setState({\n                  photoIndex: (photoIndex + images.length - 1) % images.length\n                })\n              }\n              \n            }\n            onMoveNextRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + 1) % images.length\n              })\n            }\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ImageGalary; ","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport ReactPanZoom from \"react-image-pan-zoom-rotate\";\n\n//import tileData from './tileData';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 500,\n    height: 450,\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n}));\n\n\n/**\nThe example data is structured as follows:\n *\nimport image from 'path/to/image.jpg';\n[etc...]\n *\nconst tileData = [\n  {\n    img: image,\n    title: 'Image',\n    author: 'author',\n  },\n  {\n    [etc...]\n  },\n];\n */\n\n const tileData = [\n   {\n     img: 'https://www.immigrant-education.ca/wp-content/uploads/2017/09/DL-Sam-Sample-AB-DL-Face-V8b-Sam-Sample.jpg',\n     title: 'Image1',\n     author: 'author1',\n   },\n   {\n    img: 'https://www.immigrant-education.ca/wp-content/uploads/2017/09/DL-Sam-Sample-AB-DL-Face-V8b-Sam-Sample.jpg',\n    title: 'Image2',\n    author: 'author2',\n  },\n  {\n    img: 'https://www.immigrant-education.ca/wp-content/uploads/2017/09/DL-Sam-Sample-AB-DL-Face-V8b-Sam-Sample.jpg',\n    title: 'Image2',\n    author: 'author2',\n  },\n  {\n    img: 'https://www.immigrant-education.ca/wp-content/uploads/2017/09/DL-Sam-Sample-AB-DL-Face-V8b-Sam-Sample.jpg',\n    title: 'Image2',\n    author: 'author2',\n  }\n ];\n\nexport default function TitlebarGridList() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={180} className={classes.gridList}>\n        <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n          <ListSubheader component=\"div\">Documents</ListSubheader>\n        </GridListTile>\n        {tileData.map(tile => (\n          <GridListTile key={tile.img}>\n            {/* <img src={tile.img} alt={tile.title} /> */}\n            <ReactPanZoom image={tile.img} alt={tile.title}/>\n\n            <GridListTileBar\n              title={tile.title}\n              subtitle={<span>by: {tile.author}</span>}\n              actionIcon={\n                <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\n                  <InfoIcon />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </div>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport ActivationService from \"../service/ActivationService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {Container} from \"@material-ui/core\";\nimport Notify from \"../../utils/Notify\";\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport PaperSheet from './PaperSheet';\nimport Zoom from \"./Zoom\"\nimport CheckboxList from \"./CheckboxList\"\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\n\nimport MaterialUIPickers from \"./MaterialUIPickers\";\n\nimport ImageGalary from \"./ImageGalary\";\n\n//import SlideShowGalary from \"./SlideShowGalary\";\n\nimport SlideShowGalary from \"../../utils/SlideShowGalary\";\n\n\n\nimport \"./DataEntry.css\";\nimport Divider from '@material-ui/core/Divider';\nimport ReactPanZoom from \"react-image-pan-zoom-rotate\";\nimport TitlebarGridList from './TitlebarGridList'\nimport ImageZoom from 'react-medium-image-zoom'\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport DoneSharpIcon from '@material-ui/icons/DoneSharp';\n\n//import TEST from '../expriment/Test';\n\n\n\n\n\n\n\n// const useStyles = makeStyles(theme => ({\n//     root: {\n//       padding: theme.spacing(3, 2),\n//     },\n//   }));\n// const SampleFab = () => {\n//     const classes = useStyles();\n//     return <Paper className={classes.root}></Paper>;\n//  }\n\n\n \n  \n\n\nclass DataEntryEdit extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n                txnId: '',\n                mobileNumber: '', \n                poiNumber:'',\n                poiType:'',\n                title:'',\n                gender:'',\n                dob:'',\n                rejectedReasons:'',\n                approveLoader:false,\n                approveDone:false,\n                approveButton:true,\n                loginId:'',\n                firstName:\"\",\n                middleName:\"\",\n                lastName:\"\",\n                altContactNumber:'', \n                propMobile:'',\n                emailid:'',\n                address1:'',\n                address2:'',\n                address3:'',\n                customerImageUrl:\"\",\n                presentAddress:\"\",\n                pefImageUrl:'',\n                comment:\"\"\n                \n        }\n        this.updateLocalActList = this.updateLocalActList.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.skipThisVerify = this.skipThisVerify.bind(this);\n        this.loadOneTransection = this.loadOneTransection.bind(this);\n        this.myCallback = this.myCallback.bind(this);\n\n    }\n    myCallback = (date, fromDate) => {\n        if (fromDate === \"START_DATE\") {\n            console.log(\"date\",date)\n            this.setState({ dob: new Date(date).getTime() });\n        } \n    };\n\n    loadOneTransection(){\n        const dataEntryId = localStorage.getItem(\"dataEntryId\");\n        // console.log( \"selectedProductId\",  selectedProductId);\n         \n         if(dataEntryId == null) {\n            // alert(\"Please select a product to edit.\");\n             this.props.history.push('/dataentry');\n         }else {\n \n             ActivationService.getOneDataEntry(dataEntryId).then(res => {\n                 let data = resolveResponse(res);\n                 const selectedProduct = data.result;\n                 \n                 var genderSelect=''; \n                 if(selectedProduct && selectedProduct.title == \"Ms\"){\n                     genderSelect = \"F\"; \n                 }\n                 if(selectedProduct && selectedProduct.title == \"Mr\"){\n                    genderSelect = \"M\"; \n                }\n\n                 var rejectmsg = ''; \n                 if(selectedProduct && selectedProduct.rejectedReasons){\n                    rejectmsg = selectedProduct.rejectedReasons\n                 }\n                 if(selectedProduct){\n                    this.setState({\n                        mobileNumber: selectedProduct.mobileNumber,\n                        poiNumber: selectedProduct.poiNumber,\n                        poiType: selectedProduct.poiType,\n                         customerImageUrl: selectedProduct.customerImageUrl, \n                         customerSignatureUrl:selectedProduct.customerSignatureUrl, \n                         poiBackImageUrl :selectedProduct.poiBackImageUrl, \n                         poiFrontImageUrl:selectedProduct.poiFrontImageUrl, \n                         retailerSignatureUrl : selectedProduct.retailerSignatureUrl,\n                         pefImageUrl:selectedProduct.pefImageUrl,\n                         rejectedReasons : rejectmsg,\n                         title : selectedProduct.title,\n                         gender: genderSelect, \n                         firstName: selectedProduct.firstName,\n                         altContactNumber:selectedProduct.altContactNumber,\n                         emailid:selectedProduct.emailid,\n                         presentAddress: selectedProduct.presentAddress,\n                         //address1 : selectedProduct.address1,\n                         //address2:  selectedProduct.address2,\n                         //address3 : selectedProduct.address3,\n\n                        // deDateTime : selectedProduct.deDateTime, \n                        // deUser: selectedProduct.deUser, \n                        // dob:selectedProduct.dob, \n                        // firstName:selectedProduct.firstName, \n                        });\n\n                        console.log(\"getonedata\",this.state); \n                 }\n\n                \n             })\n \n             const userDetails = JSON.parse(localStorage.getItem(\"userDetails\")); \n             console.log(\"this.state afer load\", this.state);\n\n             this.setState({  loginId : userDetails.loginId });\n\n             ActivationService.getStaticData(\"DE\").then(res => {\n                 let data = resolveResponse(res);\n \n                 this.setState({\n                     propertiesName: data.result && data.result.screenFields && data.result.screenFields[0].fields\n                     });\n                console.log(\"propertiesName screenFields\", this.state.propertiesName);\n\n             })\n         }\n    }\n\n    componentDidMount() {\n        this.loadOneTransection(); \n        localStorage.setItem(\"lastUrl\",\"data-edit\");\n        if(document.getElementById(\"addressone\")){\n            document.getElementById(\"addressone\").style.fontSize = \"12px\";\n        }\n        if(document.getElementById(\"addresstwo\")){\n            document.getElementById(\"addresstwo\").style.fontSize = \"12px\";\n        }\n        if(document.getElementById(\"addressthree\")){\n            document.getElementById(\"addressthree\").style.fontSize = \"12px\";\n        }\n        if(document.getElementById(\"presentAddress\")){\n            document.getElementById(\"presentAddress\").style.fontSize = \"12px\";\n        }\n    }\n\n\n    render() {\n\n        var imageDetails = []; var baseUrl=\"\"; //\"https://retailer.airtel.lk\";\n        if(this.state.poiFrontImageUrl){\n          imageDetails.push({\n              img: baseUrl+ this.state.poiFrontImageUrl, \n              title: 'POI Front Image',\n              author: 'Front Image',\n              featured: true,\n            }); \n        }\n        \n        if(this.state.poiBackImageUrl){\n          imageDetails.push({\n              img: baseUrl+ this.state.poiBackImageUrl,\n              title: 'POI Back Image',\n              author: 'Back Image',\n              featured: true,\n            }); \n        }\n        if(this.state.customerImageUrl){\n          imageDetails.push({\n              img: baseUrl+ this.state.customerImageUrl,\n              title: 'Customer Image',\n              author: 'Customer Image',\n              featured: true,\n            }); \n        }\n        \n        if(this.state.customerSignatureUrl){\n          imageDetails.push({\n              img:  baseUrl+this.state.customerSignatureUrl,\n              title: 'Customer Signature',\n              author: 'Customer Signature',\n              featured: true,\n            }); \n        }\n\n        if(this.state.retailerSignatureUrl){\n          imageDetails.push({\n              img: baseUrl+ this.state.retailerSignatureUrl,\n              title: 'Retailer Signature',\n              author: 'Retailer Signature',\n              featured: true,\n            }); \n        }\n        if(this.state.pefImageUrl){\n            imageDetails.push({\n                img:  this.state.pefImageUrl,\n                title: 'PEF Image',\n                author: 'PEF Image',\n                featured: true,\n              }); \n          }\n\n          const dateParam = {\n            myCallback: this.myCallback,\n            startDate: '',\n            endDate: ''\n\n        }\n\n        \n\n\n\n        return(\n            <React.Fragment>\n            <PostLoginNavBar/>\n            {/* <h2  style={styles.textStyle}> View and Verify Document </h2> */}\n            <Typography variant=\"h6\" style={styles.textStyle} >Data Entry Details</Typography>\n\n            <Grid container className=\"flexGrow\" spacing={1}>\n               <Grid item  xs={12} sm={8} style={{overflow:\"scroll\"}}>\n                   \n                    <Paper style={{paddingLeft:\"5px\", paddingRight:\"5px\", height:\"80vh\", width: \"135vh\" }}>\n                    {/* <ReactPanZoom image=\"https://drscdn.500px.org/photo/105738331/q%3D80_m%3D2000/v2?webp=true&sig=538a4f76f4966c84acb01426bb4a4a5e4a85b72a2c3bd64973d3a369f9653007\" alt=\"document image\"/>\n\n                    <ReactPanZoom image=\"https://qph.fs.quoracdn.net/main-qimg-212927c733fa6407344ee9b257445d17.webp\" alt=\"document image\"/> */}\n\n                        {/* <br /> */}\n                        {/* <Typography variant=\"body1\" style={styles.textStyle}>Document Uploaded</Typography> */}\n\n                         {/* <ImageGalary imageDetails={imageDetails} />  */}\n                         <SlideShowGalary imageDetails={imageDetails} />\n\n                    </Paper>\n\n                </Grid>\n\n      \n                <Grid item  xs={12} sm={4}>\n\n                {/* <Container maxWidth=\"sm\"> */}\n                    <Paper style={{paddingLeft:\"20px\",paddingRight:\"20px\", paddingBottom:\"5px\", }}>\n                    <Typography variant=\"body1\" style={styles.textStyle}><b>Update User Details</b></Typography>\n                    <form id=\"dataentryform\" style={styles.formContainer}>\n                        {/* <Typography variant=\"h6\" component=\"h3\">Mobile : {this.state.mobileNumber}   </Typography> */}\n\n                        <Grid spacing={1} container direction=\"row\">\n                            <Grid item xs={12} sm={6}>\n                                <TextField label=\"Mobile No\" required={true} fullWidth disabled name=\"mobileNumber\" value={this.state.mobileNumber} onChange={this.onChange}/>\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                                <TextField type=\"number\" label=\"Alternate Contact No\" value={this.state.altContactNumber} fullWidth name=\"altContactNumber\"  onChange={this.onChange}/>\n                            </Grid>\n                        </Grid>\n\n                        <Grid spacing={1} container direction=\"row\">\n                            <Grid item xs={12} sm={12}>\n                            {/* placeholder=\"Email id\"  */}\n                                <TextField label=\"Email id\"  fullWidth  name=\"emailid\" value={this.state.emailid} onChange={this.onChange}/>\n                            </Grid>\n\n                          \n                        </Grid>\n\n                        <Grid spacing={1} container direction=\"row\">\n                            <Grid item xs={12} sm={6}>\n                                 <FormControl style={styles.selectStyle}>\n                                    <InputLabel htmlFor=\"gender\">POI Type</InputLabel>\n                                    <Select value={this.state.poiType}  name=\"poiType\" onChange={this.onChange}>\n                                        <MenuItem value={\"NIC\"}>NIC</MenuItem>\n                                        <MenuItem value={\"DL\"}>DL</MenuItem>\n                                        <MenuItem value={\"PASSPORT\"}>PASSPORT</MenuItem>\n                                    </Select>\n                                </FormControl>\n                                {/* <TextField label=\"POI Type\" required={true} fullWidth name=\"poiType\"  onChange={this.onChange}/> */}\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                                <TextField label=\"POI Number\" required={true} fullWidth name=\"poiNumber\" value={this.state.poiNumber} onChange={this.onChange}/>\n\n                                {/* <TextField label=\"POI Number\" value={this.state.poiNumber} required={true} fullWidth name=\"poiNumber\" onChange={this.onChange}/> */}\n                            </Grid>\n                        </Grid>\n\n                        {/* \n                        <Grid item xs={12} sm={1}>\n                        <InputLabel htmlFor=\"age-simple\">Title</InputLabel>\n                            <Select value={this.state.title}>\n                            <MenuItem value={10}>Mr.</MenuItem>\n                            <MenuItem value={20}>Mrs.</MenuItem>\n                            </Select>\n                        </Grid> */}\n\n                        {/* <Grid container direction=\"row\" justify=\"flex-end\"> */}\n\n\n                        <Grid spacing={1} container direction=\"row\">\n                            <Grid item xs={12} sm={6}>\n\n                             <FormControl style={styles.selectStyle}>\n                                    <InputLabel htmlFor=\"title\">Title</InputLabel>\n                                    <Select value={this.state.title}  name=\"title\" onChange={this.onChange}>\n                                        <MenuItem value={\"Mr\"}>Mr</MenuItem>\n                                        <MenuItem value={\"Ms\"}>Ms</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                            <TextField label=\"First Name\" value={this.state.firstName} required={true} fullWidth name=\"firstName\"  onChange={this.onChange}/>\n\n                            </Grid>\n                        </Grid>\n                       \n                         <Grid spacing={1} container direction=\"row\">\n                            {/* <Grid item xs={12} sm={4}>\n                                <TextField label=\"First Name\" required={true} fullWidth name=\"firstName\"  onChange={this.onChange}/>\n                            </Grid> */}\n                            <Grid item xs={12} sm={6}>\n                                <TextField label=\"Middle Name\"  value={this.state.middleName} fullWidth name=\"middleName\" onChange={this.onChange}/>\n                            </Grid>\n                            <Grid item xs={12} sm={6} >\n                                <TextField label=\"Last Name\" required={true} value={this.state.lastName}  fullWidth name=\"lastName\"  onChange={this.onChange}/>\n                            </Grid> \n                         </Grid>\n\n                        {/* </Grid> */}\n\n                        <Grid spacing={1} container direction=\"row\">\n                            <Grid item xs={12} sm={6}>\n                                {/* <TextField data-date-format=\"dd-mm-yyyy\" InputLabelProps={{ shrink: true}} value={this.state.dob} style={styles.selectStyle} type=\"date\" label=\"Date of Birth\"  name=\"dob\"  onChange={this.onChangeDob}/> */}\n                                <MaterialUIPickers callbackFromParent={dateParam} />\n\n\n                            </Grid>\n \n                            <Grid item xs={12} sm={6}>\n                                <FormControl style={styles.selectStyle}>\n                                    <InputLabel htmlFor=\"gender\">Gender</InputLabel>\n                                    <Select value={this.state.gender}  name=\"gender\" onChange={this.onChange}>\n                                        <MenuItem value={\"M\"}>Male</MenuItem>\n                                        <MenuItem value={\"F\"}>Female</MenuItem>\n                                        {/* <MenuItem value={\"O\"}>Others</MenuItem> */}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n\n                        <Grid spacing={1} container direction=\"row\">\n                            <Grid item xs={12} sm={6}>\n                                <TextField id=\"presentAddress\" disabled  objects={styles.MuiTextField} label=\"Present Address\" value={this.state.presentAddress} fullWidth/>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField id=\"addressone\"  label=\"Address 1\"  value={this.state.address1}  fullWidth name=\"address1\" onChange={this.onChange}/>\n                            </Grid>\n\n                        </Grid>\n\n                        <Grid spacing={1} container direction=\"row\">\n                            <Grid item xs={12} sm={6}>\n                                <TextField id=\"addresstwo\"  label=\"Address 2\"  value={this.state.address2}  fullWidth name=\"address2\" onChange={this.onChange}/>\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                                 <TextField id=\"addressthree\"  label=\"Address 3\" value={this.state.address3}   fullWidth name=\"address3\" onChange={this.onChange}/>\n                            </Grid>\n\n                           \n                        </Grid>\n\n\n                       \n                        \n                        <br />\n                        {/* <InputLabel htmlFor=\"title\">Rejected Reasons</InputLabel> */}\n\n                        <Input fullWidth\n                            placeholder=\"Rejected Reasons\" \n                            disabled\n                            value={this.state.rejectedReasons}\n                            inputProps={{\n                            'aria-label': 'description',\n                            }}\n                        />\n                        {/* <TextField  value={this.state.rejectedReasons} multiline rows={2} label=\"Rejected Reasons\" fullWidth margin=\"none\" name=\"helpText\" onChange={this.onChange}/> */}\n                        {/* <TextField\n                            label=\"Comments\"\n                            id=\"outlined-start-adornment\"\n                           \n                           \n                            variant=\"outlined\"\n                            />\n                        */}\n                         \n                        <TextField multiline variyant rows={2} value={this.state.comment} label=\"Comments upto 200 characters\" fullWidth margin=\"none\" name=\"comment\" onChange={this.onChange}/>\n                        <div><Grid  container spacing={24} style={{paddingTop:\"4px\"}} container\n                            direction=\"row\"\n                            justify=\"center\"\n                            alignItems=\"center\">\n\n                                    {this.state.approveLoader ? <CircularProgress />: \"\"} \n                                    {/* <CheckCircleIcon color=\"primary\" fontSize=\"large\"/> */}\n                                    {this.state.approveDone ?  <Button  style={{marginLeft: \"20px\"}} variant=\"outlined\" color=\"primary\" > <DoneSharpIcon color=\"primary\" /> Saved & Loading Next</Button> : \"\"} \n                                    {this.state.approveButton ? <Button variant=\"contained\" color=\"primary\" style={{marginLeft: '20px'}} onClick={this.submitDataEntry}>Submit</Button>: \"\"} \n\n\n                                <Button variant=\"contained\" color=\"secondary\" style={{marginLeft: '20px', backgroundColor:\"#33691e\"}} onClick={this.skipThisVerify}> SKIP </Button>\n                                <Button variant=\"contained\" color=\"default\" style={{marginLeft: '20px'}} onClick={this.cancel}>Back to Listing</Button>\n                            \n                        </Grid></div>\n                    \n                    </form>\n                    </Paper>\n\n\n                    \n                {/* </Container> */}\n                </Grid>\n            \n                </Grid>\n\n             \n\n\n            <div>\n \n  \n        </div>\n\n            </React.Fragment>\n        )\n    }\n\n    \n    updateLocalActList = (txn) =>{\n        var activationList = localStorage.getItem(\"dataEntryActivationList\") && JSON.parse(localStorage.getItem(\"dataEntryActivationList\")); \n\n        var index = -1;\n        for(var i=0; i < activationList.length; i++ ){\n            if(activationList[i].txnId == txn){\n                index =i;\n                break; \n            }\n        }        \n        if (index > -1) {\n            activationList.splice(index, 1);\n        }\n        localStorage.setItem(\"dataEntryActivationList\",JSON.stringify(activationList));    \n    }\n\n\n    onlockTransectionOnSkip = (txn) =>{\n\n        var transactionsIds = {\n            transactionsIds : [txn]\n        }\n        ActivationService.unlockTransectionsSkip( transactionsIds ).then(res => {\n            let data = resolveResponse(res);\n            if(data.message != 'ok'){\n                Notify.showError(\"Didn't unlocked\");\n            }\n       })\n    }\n\n\n    skipThisVerify = (e) => {\n        //  e.preventDefault();\n          var dataEntryId = localStorage.getItem(\"dataEntryId\"); \n          var dataentryListingTxn = localStorage.getItem(\"dataentryListingTxn\"); \n          dataentryListingTxn =  dataentryListingTxn && dataentryListingTxn.split(','); \n          var nextid = ''; \n          for(var i=0; i < dataentryListingTxn.length; i++ ){\n              if(dataEntryId == parseInt(dataentryListingTxn[i])){\n                  nextid =  parseInt(dataentryListingTxn[i+1]);  \n                  break; \n              }\n          }\n  \n         // this.updateLocalActList(dataEntryId); \n          this.onlockTransectionOnSkip(dataEntryId); \n          console.log(\"nextid\",nextid); \n          if(nextid){\n//            Notify.showSuccess(\"Acquisition skipped successfully and Lodding next...\");\n\n              localStorage.setItem(\"dataEntryId\", nextid); \n              this.loadOneTransection();\n              this.setState({ approveLoader: false});\n              this.setState({ approveDone: false});\n              this.setState({ approveButton: true});\n\n\n            \n           //  this.props.history.push('/data-edit');\n             // this.render(); \n              //this.forceUpdate(); \n              console.log(\"push to data-edit\",nextid);   \n\n          }else{\n             // Notify.showError(\"No item available\");\n              this.props.history.push('/dataentry');\n          }\n      };\n\n    handleChange = name => event => {\n        this.setState({ ...this.state, [name]: event.target.checked });\n    };\n\n\n\n    submitDataEntry = (e) => {\n        e.preventDefault();\n      \n\n      //  Notify.showSuccess(\"Approved\");\n        console.log(\"data entry post data\",this.state)\n\n        if(!this.state.gender || !this.state.title || !this.state.poiNumber || !this.state.dob || !this.state.firstName || !this.state.lastName || !this.state.address1 ){\n            Notify.showError(\"Missing required fields\");\n            return;\n        }\n\n\n        if(this.state.comment && this.state.comment.length > 200){\n            Notify.showError(\"Comments allow upto 200 characters only\");\n            return;\n        }\n\n            this.setState({ approveLoader: true});\n            this.setState({ approveButton: false});\n            \n            const dataEntryId = localStorage.getItem(\"dataEntryId\");\n\n            const product = {\n                \"transactionId\": dataEntryId,\n                \"poiNumber\": this.state.poiNumber,\n                \"poiType\": this.state.poiType,\n                \"title\": this.state.title,\n                \"gender\":this.state.gender ,\n                \"dob\": this.state.dob,\n                \"firstName\": this.state.firstName,\n                \"middleName\": this.state.middleName,\n                \"lastName\": this.state.lastName,\n                \"address1\": this.state.address1,\n                \"address2\": this.state.address2,\n                \"address3\": this.state.address3,\n                \"altContactNumber\": this.state.altContactNumber,\n                \"comments\": this.state.comment,\n                \"deDateTime\": new Date(),\n                \"deUser\": this.state.loginId,\n                \"emailid\":this.state.emailid\n            }\n        \n            ActivationService.saveDataEntry(product)\n            .then(res => {\n                resolveResponse(res, \"Details updated successfully and Lodding next acquisition to verify...\");\n               // this.props.history.push('/dataentry');\n            //   this.updateLocalActList(dataEntryId); \n\n            this.setState({ approveLoader: false});\n            this.setState({ approveDone: true});\n            this.setState({ altContactNumber: '',dob:''});\n\n            document.getElementById('dataentryform').reset();\n            \n\n            //  this.skipThisVerify(); \n               setTimeout(() => {\n                    this.skipThisVerify(); \n                }, 2000);\n\n            });\n    };\n\n    reject = (e) => {\n        e.preventDefault();\n       // alert(\"Reject\"); \n       Notify.showSuccess(\"Rejected\");\n\n        if(!this.state.productName || !this.state.displayName || !this.state.servingTimeInMins || !this.state.priority\n            || !this.state.iconUrl ){\n            Notify.showError(\"Missing required fields\");\n            return;\n        }\n        const product = {id:this.state.id, active: this.state.active, onlineBooking: this.state.onlineBooking, showRecent: this.state.showRecent, productName: this.state.productName,\n            displayName: this.state.displayName,servingTimeInMins: this.state.servingTimeInMins, priority: this.state.priority,iconUrl: this.state.iconUrl, tagUrl: this.state.tagUrl, helpTextImage: this.state.helpTextImage, helpText: this.state.helpText};\n        ActivationService.updateProduct(product)\n            .then(res => {\n                resolveResponse(res, \"Updated successfully.\");\n                this.props.history.push('/dataentry');\n            });\n    };\n\n    cancel = (e) => {\n        this.props.history.push('/dataentry');\n    };\n\n    onChange = (e) => {\n     //   console.log(e.target.name, e.target.value);\n\n\n        //this.setState({[e.target.name]: e.target.value});\n        var data =  e.target.value.trim();\n        var test = !data.includes(\"@\") && !data.includes(\"$\") && !data.includes(\"&\") ; \n        if(test){\n            this.setState({[e.target.name]: e.target.value});\n        }\n\n       \n\n        if(e.target.name == \"altContactNumber\" && e.target.value.length > 10){\n            this.setState({altContactNumber: e.target.value.substring(0, 10)});   \n        }\n\n        if(e.target.name == \"title\" &&  e.target.value == \"Ms\"){\n            this.setState({gender: \"F\"});   \n        }\n        if(e.target.name == \"title\" &&  e.target.value == \"Mr\"){\n            this.setState({gender: \"M\"});   \n        }\n\n\n\n    }\n\n    onChangeDob = (e) => {\n        var  year = e.target.value && e.target.value.split('-')[0]; \n        if(year.length>4){\n            return;\n        }else {\n            this.setState({[e.target.name]: e.target.value});\n\n        }\n    }\n\n}\n\nconst styles ={\n    formContainer : {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle :{\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle:{\n        display:'flex'\n    }, \n\n    selectStyle:{\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    MuiTextField:{\n        fontSize:\"12px\", \n    },\n\n    footerButton: {\n        position: 'fixed',\n        left: 0,\n        bottom: '20px',\n        width: '100%',\n        textAlign: 'right'\n    }\n\n};\n\n\n\n\n\nexport default DataEntryEdit;","import React, { useState }  from \"react\";\nimport ActivationService from \"../service/ActivationService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TextField from '@material-ui/core/TextField';\nimport axios from \"axios\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Notify from \"../../utils/Notify\";\n\n\nimport Paper from \"@material-ui/core/Paper\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {Container} from \"@material-ui/core\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\nimport StickyHeadTable from '../verify/StickyHeadTable';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\n\nimport TablePagination from '@material-ui/core/TablePagination';\n\n\nclass DataEntryList extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state ={\n            products: [],\n            mobile:'',\n            sim:'',\n            txnId:'',\n            user_image:false,\n            user_image_upload:false,\n            user_signature_loader:false,\n            user_signature_upload:false,\n\n            retailer_signature_loader:false,\n            retailer_signature_upload:false,\n\n            poi_front_image_loader:false,\n            poi_front_image_upload:false,\n\n            poi_back_image_loader:false,\n            poi_back_image_upload:false,\n\n            pef_image_loader:false,\n            pef_image_upload:false,\n            pef_image_response:false,\n            poi_front_image_response:false,\n            poi_back_image_response:false\n            \n        };\n\n        this.loadProductList = this.loadProductList.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.searchOnDB = this.searchOnDB.bind(this); \n        this.onUploadFiles = this.onUploadFiles.bind(this);\n        \n        \n        \n     \n    }\n\n\n    componentDidMount() {\n        // this.loadProductList();\n    }\n \n\n    onChange = (e) => {\n        this.setState({[e.target.name]: e.target.value});\n\n       // console.log(e.target.value , e.target.value.length,  e.target.value.substring(0, 10));\n        if(e.target.name ==\"mobile\" && e.target.value.length > 10){\n            this.setState({mobile: e.target.value.substring(0, 10)});   \n        }\n\n        if(e.target.name ==\"sim\" && e.target.value.length > 20){\n            this.setState({sim: e.target.value.substring(0, 20)});   \n        }\n       \n    }\n     \n    loadProductList() {\n        var d = new Date();\n        var endTime = d.getTime();\n\n        var startTime = endTime - 259200000; \n        const data = {\n            \"zone\" : \"West 1\",\n            \"startDate\" : startTime,\n            \"endDate\" : endTime,\n            \"type\" : \"NEXT\",\n            \"noOfRecords\" : 20\n        }; \n           ActivationService.listDocs(data)\n            .then((res) => {\n              \n                let data = resolveResponse(res);\n                if(data.result && data.result.activationList)\n                this.setState({products: data.result.activationList})\n            });   \n        \n    }\n\n    searchOnDB() {                        \n            const data = {\n                \"mobileNumber\" : this.state.mobile,\n                \"simNumber\" : this.state.sim\n            }; \n\n           ActivationService.searchDistributer(data)\n            .then((res) => {\n              \n                let data = resolveResponse(res);\n                if(data.result && data.result.transactionId){\n                    this.setState({txnId:data.result.transactionId})\n\n                    this.setState({ user_image_upload: true, user_signature_upload :true,  retailer_signature_upload: true});\n                    this.setState({ poi_front_image_upload:data.result.poiFrontPending, poi_back_image_upload : data.result.poiBackPending,pef_image_upload : data.result.pefFPending});\n\n                    if(!data.result.pefFPending){\n                        this.setState({pef_image_response: true })\n                    }\n\n                    if(!data.result.poiFrontPending){\n                        this.setState({poi_front_image_response: true})\n                    }\n                    if(!data.result.poiBackPending){\n                        this.setState({poi_back_image_response: true})\n                    }\n\n\n                }else {\n                    this.setState({pef_image_response: false, poi_front_image_response: false,poi_back_image_response: false })\n                    this.setState({txnId:''})\n                    this.setState({user_image_upload:false})\n\n                 //   this.props.history.push('/');\n                }\n            });\n\n            document.getElementById(\"uploadform\").reset();\n\n            // document.getElementById('user_image_response').innerHTML = ''; \n            // document.getElementById('user_signature_response').innerHTML = ''; \n            // document.getElementById('retailer_signature_response').innerHTML = ''; \n\n            document.getElementById('poi_front_image_response').innerHTML = ''; \n            document.getElementById('poi_back_image_response').innerHTML = ''; \n            document.getElementById('pef_image_response').innerHTML = ''; \n\n            \n            this.setState({ user_image_upload: false, user_signature_upload :false,  retailer_signature_upload: false});\n            this.setState({ poi_front_image_upload:false, poi_back_image_upload : false,pef_image_upload:false});\n\n    }\n\n    onChangeFileUpload = e => {\n        console.log(e.target.name); \n        this.setState({ [e.target.name]: e.target.files[0]})\n        // if(e.target.name == \"poi_front_image\" && e.target.files[0].name != \"poi_front_image.png\" ){\n        //     document.getElementById(e.target.name+'_file').value = \"\";\n        //     Notify.showError(\"Image name to be 'poi_front_image.png'\");\n        //     return;\n        // }\n        // if(e.target.name == \"poi_back_image\" && e.target.files[0].name != \"poi_back_image.png\" ){\n        //     document.getElementById(e.target.name+'_file').value = \"\";\n        //     Notify.showError(\"Image name to be 'poi_back_image.png'\");\n        //     return;\n        // }\n    }; \n\n\n    handleSubmit(e){\n        e.preventDefault();\n        e.target.reset();\n    }\n    \n\n    onUploadFiles = imageType => {\n\n    console.log(\"imageType\",  this.state[imageType]); \n\n    if(!this.state[imageType]){\n        Notify.showError(\"Please select a \"+imageType.split('_').join(' ')+'.');\n        return;\n    }else{\n       \n        this.setState({ [imageType + '_loader']: true});\n        this.setState({ [imageType + '_upload']: false}); \n\n\n    }\n\n\n\n    const formData = new FormData();\n    formData.append('file',this.state[imageType]);\n    formData.append('transactionId', this.state.txnId);\n    formData.append('isResubmit', 0);\n\n    // if(imageType == \"poi_back_image\" || imageType == \"poi_front_image\")\n    // formData.append('ImageType', 'poi');\n    // else\n    formData.append('ImageType', imageType);\n\n\n    ActivationService.uploadDistrubuter(formData)\n        .then((res) => {\n            \n            let data = resolveResponse(res);\n            if(data.status == 200 && data.message == \"ok\"){\n\n                this.setState({ [imageType + '_loader']: false});\n                document.getElementById(imageType+'_response').innerHTML= data.result.message;  \n                document.getElementById(imageType+'_file').value = \"\";\n                this.setState({[imageType]: null}); \n\n            }else {\n                this.setState({ [imageType + '_loader']: false});\n                this.setState({ [imageType + '_upload']: true}); \n\n            }\n        });\n   \n  };\n\n\n    render(){\n     \n      //  console.log(\"this.state.products\",this.state.products); \n        return(\n            <React.Fragment>\n                <PostLoginNavBar/>\n                <Paper style={{padding:\"30px\"}}>\n                <Container  >\n                    {/* <EnhancedTable products={this.state.products}/> */}\n\n                    {/* <StickyHeadTable products={this.state.products} someAction={this.someAction}/>\n                     */}\n\n                      \n                    {/* <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                      Search Mobile No.\n                      \n\n                    </Typography>  */}\n\n                        <form onSubmit={() => this.searchOnDB( this.state.searchby )} >\n\n                        <Grid spacing={1}  container  container\n                            direction=\"row\"\n                            justify=\"right\"\n                            alignItems=\"center\">\n\n                            <Grid item xs={12} sm={7} >\n                            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                             Distributor document upload\n                            </Typography> \n                            </Grid>\n                            {/* InputLabelProps={{ shrink: true }} */}\n                            <Grid item xs={12} sm={2} alignItems=\"flex-end\" alignContent=\"flex-end\"  justify=\"flex-end\" > \n                                <TextField type=\"number\" value={this.state.mobile}  label=\"Mobile No.\"  style={{width:\"100%\"}} name=\"Search by Mobile No.\" name=\"mobile\" onChange={this.onChange} />\n                            </Grid>\n                            <Grid item xs={12} sm={2} alignItems=\"flex-end\" alignContent=\"flex-end\"  justify=\"flex-end\" > \n                                <TextField type=\"text\" value={this.state.sim}  label=\"Sim No.\"  style={{width:\"100%\"}} name=\"Search by Mobile No.\" name=\"sim\" onChange={this.onChange} />\n                            </Grid>\n                            <Grid item xs={12} sm={1} alignItems=\"flex-end\" alignContent=\"flex-end\"  justify=\"flex-end\" > \n                               <Button type=\"button\"  onClick={() => this.searchOnDB(  )} variant=\"contained\"  style={{marginLeft: '20px'}} >Search</Button>\n                            </Grid>\n                        </Grid>\n                        </form>\n\n                    <br /> \n                       \n                       <Paper style={{padding:\"20px\"}}>\n                        <Grid spacing={5} alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n                            \n                            <Grid item xs={12} sm={4}>\n                             <span style={{fontSize:\"18px\"}}>  Mobile Number: <b> {this.state.mobile} </b> </span>\n                            </Grid>\n                            <Grid item xs={12} sm={4}>\n                            <span style={{fontSize:\"18px\"}}>  Sim Number:  <b>{this.state.sim}  </b>  </span>\n                            </Grid>\n                            <Grid item xs={12} sm={4}>\n                            <span style={{fontSize:\"18px\"}}>  TxnId:<b>  {this.state.txnId}</b>  </span>\n                            </Grid>\n                        </Grid>\n                        </Paper>\n                        <br /> \n                        <form id=\"uploadform\"  onSubmit={this.handleSubmit.bind(this)} >\n                        {/* <Paper style={{padding:\"20px\"}}> \n                            <Grid spacing={5} alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n                                <Grid item xs={12} sm={4}>\n                                    <InputLabel htmlFor=\"gender\">User Images</InputLabel>\n                                    <input id=\"user_image_file\" type=\"file\" name=\"user_image\" onChange={this.onChangeFileUpload} />\n                                </Grid>\n\n                                <Grid item xs={12} sm={2}>\n                                    {this.state.user_image_loader ? <CircularProgress />: \"\"} \n                                    {this.state.user_image_upload?<Button type=\"submit\"  onClick={() => this.onUploadFiles('user_image')} variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button>:<Button type=\"submit\"  disabled variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button> } \n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                        <span style={{fontSize:\"16px\",color:\"green\"}}><b id=\"user_image_response\"> </b> </span>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                        <br /> \n                        <Paper style={{padding:\"20px\"}}> \n                            <Grid spacing={5} alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n                                <Grid item xs={12} sm={4}>\n                                    <InputLabel htmlFor=\"gender\">User Signature</InputLabel>\n                                    <input id=\"user_signature_file\" type=\"file\" name=\"user_signature\" onChange={this.onChangeFileUpload} />\n                                </Grid>\n\n                                <Grid item xs={12} sm={2}>\n                                    {this.state.user_signature_loader ? <CircularProgress />: \"\"} \n                                    {this.state.user_signature_upload?<Button type=\"submit\"  onClick={() => this.onUploadFiles('user_signature')} variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button>:<Button type=\"submit\"  disabled variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button> } \n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                        <span style={{fontSize:\"16px\",color:\"green\"}}><b id=\"user_signature_response\"> </b> </span>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n\n                        <br /> \n                        <Paper style={{padding:\"20px\"}}> \n                            <Grid spacing={5} alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n                                <Grid item xs={12} sm={4}>\n                                    <InputLabel htmlFor=\"gender\">Retailer Signature</InputLabel>\n                                    <input id=\"retailer_signature_file\" type=\"file\" name=\"retailer_signature\" onChange={this.onChangeFileUpload} />\n                                </Grid>\n\n                                <Grid item xs={12} sm={2}>\n                                    {this.state.retailer_signature_loader ? <CircularProgress />: \"\"} \n                                    {this.state.retailer_signature_upload?<Button type=\"submit\"  onClick={() => this.onUploadFiles('retailer_signature')} variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button>:<Button type=\"submit\"  disabled variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button> } \n                                </Grid>\n                                <Grid item xs={12} sm={6}> \n                                        <span style={{fontSize:\"16px\",color:\"green\"}}><b id=\"retailer_signature_response\"> </b> </span>\n                                </Grid>\n                            </Grid>\n                        </Paper> */}\n                        \n\n                        <br /> \n                        <Paper style={{padding:\"20px\"}}> \n                            <Grid spacing={5} alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n                                <Grid item xs={12} sm={4}>\n                                    <InputLabel htmlFor=\"gender\">POI Front Image</InputLabel>\n                                    <input id=\"poi_front_image_file\" type=\"file\" name=\"poi_front_image\" onChange={this.onChangeFileUpload} />\n                                    {/* <InputLabel style={{fontSize:\"14px\"}}>Note: image name should be \"poi_front_image.png\"</InputLabel> */}\n\n                                </Grid>\n\n                                <Grid item xs={12} sm={2}>\n                                    {this.state.poi_front_image_loader ? <CircularProgress />: \"\"} \n                                    {this.state.poi_front_image_upload?<Button type=\"submit\"  onClick={() => this.onUploadFiles('poi_front_image')} variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button>:<Button type=\"submit\"  disabled variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button> } \n                                </Grid>\n                                <Grid item xs={12} sm={6}> \n                                        <span style={{fontSize:\"16px\",color:\"green\"}}><b id=\"poi_front_image_response\"> {this.state.poi_front_image_response} </b> </span>\n                                        {this.state.poi_front_image_response?<span><b> POI front image already uploaded </b> </span> :\"\"}\n\n                                </Grid>\n                            </Grid>\n                        </Paper>\n\n                        <br /> \n                        <Paper style={{padding:\"20px\"}}> \n                            <Grid spacing={5} alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n                                <Grid item xs={12} sm={4}>\n                                    <InputLabel htmlFor=\"gender\">POI Back Image</InputLabel>\n                                    <input id=\"poi_back_image_file\" type=\"file\" name=\"poi_back_image\" onChange={this.onChangeFileUpload} />\n                                    {/* <InputLabel style={{fontSize:\"14px\"}}>Note: image name should be \"poi_back_image.png\"</InputLabel> */}\n\n                                </Grid>\n                                <Grid item xs={12} sm={2}>\n                                    {this.state.poi_back_image_loader ? <CircularProgress />: \"\"} \n                                    {this.state.poi_back_image_upload?<Button type=\"submit\"  onClick={() => this.onUploadFiles('poi_back_image')} variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button>:<Button type=\"submit\"  disabled variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button> } \n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                        <span style={{fontSize:\"16px\",color:\"green\"}}><b id=\"poi_back_image_response\"> {this.state.poi_back_image_response} </b> </span>\n                                        {this.state.poi_back_image_response?<span><b> POI back image already uploaded </b> </span> :\"\"}\n\n                                </Grid>\n                            </Grid>\n                        </Paper>\n\n                        <br /> \n                        <Paper style={{padding:\"20px\"}}> \n                            <Grid spacing={5} alignItems=\"center\" style={styles.textStyle} container direction=\"row\">\n                                <Grid item xs={12} sm={4}>\n                                    <InputLabel htmlFor=\"gender\">PEF Image</InputLabel>\n                                    <input id=\"pef_image_file\" type=\"file\" name=\"pef_image\" onChange={this.onChangeFileUpload} />\n                                    <InputLabel style={{fontSize:\"14px\"}}>Note: It's sigle image</InputLabel>\n\n                                </Grid>\n                                <Grid item xs={12} sm={2}>\n                                    {this.state.pef_image_loader ? <CircularProgress />: \"\"} \n                                    {this.state.pef_image_upload?<Button type=\"submit\"  onClick={() => this.onUploadFiles('pef_image')} variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button>:<Button type=\"submit\"  disabled variant=\"contained\"  color=\"primary\" style={{marginLeft: '20px'}} >Upload</Button> } \n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                        <span style={{fontSize:\"16px\",color:\"green\"}}><b id=\"pef_image_response\">  </b> </span>\n                                        {this.state.pef_image_response?<span><b> PFE image already uploaded </b> </span> :\"\"}\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                        </form>\n\n                        \n                        \n                 </Container> \n                 <br />  <br />  <br /> \n                </Paper>\n            </React.Fragment>\n        )\n    }\n\n\n\n}\n\nconst styles ={\n    formContainer : {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle :{\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    imgStyle:{\n        display:'flex'\n    }, \n\n    selectStyle:{\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n\n    show:{\n        display:\"block\"\n    },\n    hide:{\n        display:\"node\"\n    }\n};\n\n\n\nexport default DataEntryList;\n\n","import React from \"react\";\nimport RetailerAdminService from \"../service/RetailerAdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CreateIcon from '@material-ui/icons/Create';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport {connect} from \"react-redux\";\nimport {setPackLoaded} from \"../../action\";\nimport Spinner from \"react-spinner-material\";\nimport ActivationService from \"../service/ActivationService\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\n\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass BaneerList extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.addProduct = this.addProduct.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        this.zoneChange = this.zoneChange.bind(this);\n\n        this.state = {\n            products:[],\n            listofzones:[],\n            selectedZone:[],\n            zone:'',\n            selectAllzone:'Select All'\n\n        }\n    }\n\n    zoneChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value});\n\n        if(e.target.value.includes(\"Select All\")){\n            this.setState({selectedZone: this.state.listofzones})\n            this.setState({selectAllzone: \"Remove All\"})\n        }\n    \n        if(e.target.value.includes(\"Remove All\")){\n            this.setState({selectedZone: []})\n            this.setState({selectAllzone: \"Select All\"})\n        }\n\n    }\n\n    componentDidMount() {\n        this.loadBannerList();\n        localStorage.setItem(\"lastUrl\",\"banners\");\n        ActivationService.getStaticData('BOA').then(res => {\n            let data = resolveResponse(res);\n            this.setState({listofzones: data.result && data.result.zones}) \n        })\n\n    }\n\n    loadBannerList() {\n\n        var data =  {\n            \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n          }\n\n        RetailerAdminService.getAllBanner(data)\n            .then((res) => {\n                let data = resolveResponse(res);\n                console.log(data);\n\n                if(data.result){\n                    this.setState({products: data.result});\n                }\n            });\n        //    var sampledata =  {\"status\":200,\"message\":\"ok\",\"result\":[{\"title\":\"title2\",\"active\":true,\"order\":1,\"bannerType\":\"type1\",\"lob\":\"prepaid\",\"section\":\"one\",\"categoryType\":\"Recharhe\",\"category\":\"bonus\",\"forAndroid\":\"true\",\"forIos\":\"true\",\"forWindows\":\"true\",\"publishDay\":12345678,\"expireDay\":1234566,\"updateTime\":\"1234567\",\"updateBy\":\"mansi\",\"imageURL\":\"http://10.5.200.246:31424/visman//banner/title2_xyz.png\",\"createdOn\":null,\"lastModifiedOn\":null},{\"title\":\"title3\",\"active\":true,\"order\":1,\"bannerType\":\"type1\",\"lob\":\"prepaid\",\"section\":\"one\",\"categoryType\":\"Recharhe\",\"category\":\"bonus\",\"forAndroid\":\"true\",\"forIos\":\"true\",\"forWindows\":\"true\",\"publishDay\":12345678,\"expireDay\":1234566,\"updateTime\":\"1234567\",\"updateBy\":\"mansi\",\"imageURL\":\"http://10.5.200.246:31424/visman/banner/title3_xyz.png\",\"createdOn\":null,\"lastModifiedOn\":null},{\"title\":\"title1\",\"active\":true,\"order\":1,\"bannerType\":\"type1\",\"lob\":\"prepaid\",\"section\":\"one\",\"categoryType\":\"Recharhe\",\"category\":\"bonus\",\"forAndroid\":\"true\",\"forIos\":\"true\",\"forWindows\":\"true\",\"publishDay\":12345678,\"expireDay\":1234566,\"updateTime\":\"1234567\",\"updateBy\":\"mansi\",\"imageURL\":\"http://xyz.com\",\"createdOn\":null,\"lastModifiedOn\":null}]};\n        //    this.setState({products: sampledata.result});\n    }\n\n    addProduct=(e)=> {\n        console.log(this.props)\n        this.props.history.push('/add-banner');\n    }\n\n    editProduct(productId) {\n        window.localStorage.removeItem(\"selectedBannerId\");\n        window.localStorage.setItem(\"selectedBannerId\", productId);\n        this.props.history.push('/banner-edit');\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n    dateFormat(date){\n        var d = new Date(date);\n        var fd = d.toLocaleDateString() + ' ' + d.toTimeString().substring(0, d.toTimeString().indexOf(\"GMT\"));\n        return fd;\n    }\n   \n    \n\n    render(){\n        console.log(this.props,\"PROPS\")\n\n       \n      return(\n        <React.Fragment>\n            <PostLoginNavBar/>\n\n\n\n            <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n\n\n            <Grid syt  container spacing={1}  direction=\"row\" alignItems=\"center\" container>\n                            <Grid item xs={12} sm={6} >\n                                <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                    Banner Details\n                                </Typography> \n                            </Grid>\n                            <Grid item xs={10} sm={3}> \n                                <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                        <Select\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        multiple\n                                        name=\"selectedZone\"\n                                        value={this.state.selectedZone}\n                                        onChange={this.zoneChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        <MenuItem key={this.state.selectAllzone} value={this.state.selectAllzone} >\n                                            <b> {this.state.selectAllzone}   </b>                                         \n                                          </MenuItem>\n                                        {this.state.listofzones ? this.state.listofzones.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                        </Select>\n                                    </FormControl>\n                            </Grid>\n\n                            <Grid item xs={2} sm={1}  > \n                                 {/* InputLabelProps={{ shrink: true }} */}\n                                 <Button type=\"submit\"  onClick={() => this.loadBannerList()} variant=\"contained\"  style={{marginLeft: '20px'}} >Search</Button>\n                            </Grid>\n                            <Grid item xs={2} sm={2} alignItems=\"left\"> \n                            <Button variant=\"contained\" color=\"primary\" onClick={() => this.addProduct()}>\n                                Add Banner\n                            </Button>      \n                            </Grid>\n\n                            \n                </Grid>\n            \n\n            <Table  size=\"small\"   aria-label=\"sticky table\" >\n                <TableHead style={{width:\"\",whiteSpace: \"nowrap\"}} variant=\"head\">\n                    <TableRow variant=\"head\">\n                          {/* <TableCell align=\"center\">Edit</TableCell> */}\n\n\n                        <TableCell align=\"center\">Icon</TableCell>\n                        <TableCell align=\"center\">Title</TableCell>\n                        <TableCell align=\"center\">Banner Type</TableCell>\n                        <TableCell align=\"center\">Active</TableCell>\n                        {/* <TableCell align=\"center\">Lob</TableCell> */}\n                        {/* <TableCell align=\"center\">Section</TableCell> */}\n                        <TableCell align=\"center\">Category Type</TableCell>\n                        {/* <TableCell align=\"center\">Category</TableCell> */}\n                        <TableCell align=\"center\">Publish Date</TableCell>\n\n                        <TableCell align=\"center\">Expire Days</TableCell>\n\n                      \n\n                    </TableRow>\n                </TableHead>\n                <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                \n                    {this.state.products && this.state.products ? this.state.products.map(row => (\n                        <TableRow key={row.productId} onClick={() => this.editProduct( row.bannerId)}>\n\n                            <TableCell align=\"center\"> <img style={{width:\"100px\", height:\"50px\"}} src={row.imageURL} /> </TableCell>\n                            <TableCell align=\"center\">{row.title}</TableCell>\n                            <TableCell align=\"center\">{row.bannerType}</TableCell>\n                            <TableCell align=\"center\">{row.active ? 'Active' : \"Inactive\"}</TableCell>\n                            {/* <TableCell align=\"center\">{row.lob}</TableCell> */}\n                            {/* <TableCell align=\"center\">{row.section}</TableCell> */}\n                            <TableCell align=\"center\">{row.categoryType}</TableCell>\n                            {/* <TableCell align=\"center\">{row.category}</TableCell> */}\n                             <TableCell align=\"center\">{row.publishDay ? new Date(row.publishDay).toString().substring(0, 15) : \"\"}</TableCell>\n                            <TableCell align=\"center\">{row.expireDay ? new Date(row.expireDay).toString().substring(0, 15): \"\"}</TableCell>\n\n                            \n                        </TableRow>\n                    )):<Spinner/>}\n                </TableBody>\n            </Table>\n\n            </Paper>\n            </React.Fragment> \n        )\n    }\n}\n\nconst styles = {\n    tableStyle : {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    selectStyle:{\n        // minWidth: '100%',\n         marginBottom: '0px',\n          minWidth: 300,\n          maxWidth: 300,\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return {packs:state.packs.packs.data};\n}\n\n//export default connect(mapStateToProps,{setPackLoaded})(BaneerList);\nexport default BaneerList;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport RetailerAdminService from '../service/RetailerAdminService';\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport {Container,Paper} from \"@material-ui/core\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport Notify from \"../../utils/Notify\";\nimport MaterialUIPickers from \"./MaterialUIPickers\";\n\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from \"@material-ui/core/Input\";\n\n\nclass BaneerListAdd extends React.Component {\n   \n    constructor(props) {\n        super(props);\n        this.state = {\n            \"title\": \"title3\",\n            \"active\": '',\n            \"order\": 1,\n            \"bannerType\": \"type1\",\n            \"lob\": \"prepaid\",\n            \"section\": \"one\",\n            \"categoryType\": \"Recharhe\",\n            \"category\": \"bonus\",\n            \"forAndroid\": \"true\",\n            \"forIos\": \"true\",\n            \"forWindows\": \"true\",\n            \"publishDay\": 12345678,\n            \"expireDay\": 1234566,\n            \"updateTime\": \"1234567\",\n            \"updateBy\": \"mansi\",\n            \"imageURL\": \"https://www.earticleblog.com/wp-content/uploads/2014/07/freePromoBanner.jpg\",\n            \"createdOn\": null,\n            \"lastModifiedOn\": null\n        }\n        this.saveProduct = this.saveProduct.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onProductIconFileChange = this.onProductIconFileChange.bind(this);\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <PostLoginNavBar/>\n                <Container maxWidth=\"sm\">\n                    <Paper style={{padding:\"20px\"}}>\n                    <Typography variant=\"h5\" style={styles.textStyle}> Banner Details</Typography>\n                    <form style={styles.formContainer}>\n                    \t\t\t\n                        <TextField label=\"Title\" required={true} fullWidth name=\"productName\" value={this.state.productName} onChange={this.onChange}/>\n \n                        <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel htmlFor=\"Active\" required={true}>Order</InputLabel>\n                                <Select name=\"storeType\" value={this.state.order} onChange={this.onChange}>\n                                    <MenuItem value=\"1\">1</MenuItem>\n                                    <MenuItem value=\"2\">2</MenuItem>\n                                    <MenuItem value=\"1\">3</MenuItem>\n                                    <MenuItem value=\"2\">4</MenuItem>\n                                    <MenuItem value=\"2\">5</MenuItem>\n                                </Select>\n                            </FormControl>                        \n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel htmlFor=\"Active\" required={true}>Status</InputLabel>\n                                <Select name=\"storeType\" value={this.state.active} onChange={this.onChange}>\n                                    <MenuItem value=\"true\">Active</MenuItem>\n                                    <MenuItem value=\"false\">In Active</MenuItem>\n                                </Select>\n                            </FormControl>                        \n                        </Grid>\n\n\n                        <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel htmlFor=\"Connection Type\" required={true}>Type of Baneer</InputLabel>\n                                <Select name=\"storeType\" value={this.state.lob} onChange={this.handleChange}>\n                                    <MenuItem value=\"prepaid\">Prepaid</MenuItem>\n                                    <MenuItem value=\"postpaid\">Postpaid</MenuItem>\n                                </Select>\n                            </FormControl>                    \n                        </Grid>\n                      \n\n                         <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel htmlFor=\"Active\" required={true}>Section</InputLabel>\n                                <Select name=\"storeType\" value={this.state.section} onChange={this.onChange}>\n                                    <MenuItem value=\"one\">One</MenuItem>\n                                    <MenuItem value=\"two\">Two</MenuItem>\n                                </Select>\n                            </FormControl>                        \n                        </Grid>\n\n\n\n                        <FormControl style={styles.multiselect}>\n                            <InputLabel htmlFor=\"Connection Type\" required={true}>Category Type</InputLabel>\n                            <Select name=\"storeType\" value={this.state.categoryType} onChange={this.onChange}>\n                                <MenuItem value=\"Recharhe\">Recharge</MenuItem>\n                                <MenuItem value=\"Other\"> Other </MenuItem>\n                            </Select>\n                        </FormControl>\n\n                        <FormControl style={styles.multiselect}>\n                            <InputLabel htmlFor=\"Connection Type\" required={true}>Category</InputLabel>\n                            <Select name=\"storeType\" value={this.state.categoryType} onChange={this.onChange}>\n                                <MenuItem value=\"bonus\">Bonus</MenuItem>\n                                <MenuItem value=\"Bonus\">Other</MenuItem>\n                            </Select>\n                        </FormControl>\n\n                        \n\n\n                        {/* <TextField label=\"Pack Type\" required={true} fullWidth name=\"displayName\" value={this.state.displayName} onChange={this.onChange}/> */}\n\n\n                         <Grid item xs={12} sm={6}>\n                            <TextField label=\"Amount\" required={true} type=\"number\" min=\"1\" max=\"99999\" fullWidth name=\"servingTimeInMins\" value={this.state.servingTimeInMins} onChange={this.onChangeServingTime}/>\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel htmlFor=\"Connection Type\" required={true}>Status</InputLabel>\n                                <Select name=\"storeType\" value={this.state.active} onChange={this.onChange}>\n                                    <MenuItem value=\"true\">Active</MenuItem>\n                                    <MenuItem value=\"false\">In Active</MenuItem>\n                                </Select>\n                            </FormControl>                        \n                        </Grid>\n\n                        {/* <InputLabel htmlFor=\"Connection Type\" required={true}> For Which Devices</InputLabel> */}\n\n                        <FormControlLabel control=\n                            {<Checkbox checked={this.state.onlineBooking} name=\"onlineBooking\" onChange={this.handleChange('onlineBooking')}\n                                        value={this.state.onlineBooking} /> } label=\"Android\" color=\"primary\"/>\n\n                        <FormControlLabel control=\n                            {<Checkbox checked={this.state.showRecent} name=\"showRecent\" onChange={this.handleChange('showRecent')}\n                                        value={this.state.showRecent}/> }  label=\"IOS\" />\n\n                        <FormControlLabel control=\n                            {<Checkbox checked={this.state.showRecent} name=\"showRecent\" onChange={this.handleChange('showRecent')}\n                                        value={this.state.showRecent}/> }  label=\"Windows1\" />\n\n\n\n                        <TextField label=\"Publish Day\" type=\"\" multiline rows={2} fullWidth margin=\"none\" min=\"1\" max=\"999\" name=\"priority\" value={this.state.priority} onChange={this.onChangePriority}/>\n\n                        {/* <input accept=\"image/*\" style={styles.input} id=\"contained-button-file\" type=\"file\" onChange={this.onProductIconFileChange} /> */}\n                        {/*<label htmlFor=\"contained-button-file\" style={{margin: '15px 20px 0 0', }}>\n                            <Button variant=\"contained\" size=\"large\" component=\"span\">\n                                Upload Product Icon\n                                <CloudUploadIcon />\n                            </Button>\n                        </label>*/}\n\n                        <Grid item xs={12} sm={6}>\n                                 <TextField label=\"Validity Days\" required={true} type=\"number\" min=\"1\" max=\"999\" fullWidth name=\"servingTimeInMins\" value={this.state.servingTimeInMins} onChange={this.onChangeServingTime}/>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                                 <TextField label=\"Expire Days\" required={true} type=\"number\" min=\"1\" max=\"999\" fullWidth name=\"servingTimeInMins\" value={this.state.servingTimeInMins} onChange={this.onChangeServingTime}/>\n                        </Grid>\n\n                        \n\n\n                        <Grid  container spacing={24} container\n                        direction=\"row\"\n                        justify=\"flex-end\"\n                        >\n\n                            <Grid item xs={12} sm={3}>\n                            <FormControl style={styles.multiselect}>\n                                <InputLabel htmlFor=\"display-type\" required={true}>Upload Banner</InputLabel>\n                                \n                            </FormControl>\n\n                            </Grid>\n\n                            <Grid item xs={12} sm={9}>\n                            <FormControl style={styles.multiselect}>\n                                {/* <InputLabel htmlFor=\"display-type\" required={true}>Select Icon</InputLabel> */}\n                                <input style={{\n                                    marginTop: \"24px\", \n                                    marginLeft: \"18px\"}} \n                                    type=\"file\"/>\n                            </FormControl>\n                            </Grid>\n                    </Grid>\n                    {/* <TextField label=\"Comment\" fullWidth margin=\"normal\" name=\"helpTextImage\" value={this.state.helpTextImage} onChange={this.onChange}/> */}\n                    <Grid  container spacing={24} container\n                        direction=\"row\"\n                        justify=\"center\"\n                        >\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.saveProduct}>Save</Button>\n                    <Button variant=\"contained\" color=\"secondary\" style={{marginLeft: '150px'}} onClick={this.cancel}>Cancel</Button>\n                    </Grid>\n                    \n                  </form>\n                    </Paper>\n                </Container>\n            </React.Fragment>\n        )\n    }\n\n    saveProduct = (e) => {\n        e.preventDefault();\n        if(!this.state.productName || !this.state.displayName || !this.state.servingTimeInMins || !this.state.priority\n                || !this.state.iconUrl ){\n            Notify.showError(\"Missing required fields\");\n            return;\n        }\n        const product = {onlineBooking: this.state.onlineBooking, showRecent: this.state.showRecent, productName: this.state.productName, displayName: this.state.displayName,\n            servingTimeInMins: this.state.servingTimeInMins, priority: this.state.priority,iconUrl: this.state.iconUrl, tagUrl: this.state.tagUrl, helpTextImage: this.state.helpTextImage, helpText: this.state.helpText};\n        RetailerAdminService.addProduct(product)\n            .then(res => {\n                resolveResponse(res,\"Product saved successfully.\");\n                this.props.history.push('/products');\n            });\n    };\n\n    onChangeServingTime = (e) => {\n        if(e.target.value > 15 || e.target.value < 1) {\n            Notify.showError(\"Serving time should be in the range of 1 and 15.\");\n            return;\n        }\n        this.setState({[e.target.name]: e.target.value}\n        );\n    }\n\n    onChangePriority = (e) => {\n        if(e.target.value > 15 || e.target.value < 1) {\n            Notify.showError(\"Priority should be in the range of 1 and 15.\");\n            return;\n        }\n        this.setState({[e.target.name]: e.target.value}\n        );\n    }\n\n    cancel = (e) => {\n        this.props.history.push('/banners');\n    };\n\n    handleChange = name => event => {\n        this.setState({ ...this.state, [name]: event.target.checked });\n    };\n\n    onProductIconFileChange = event=>{\n\n        this.setState({\n            selectedIconFile: event.target.files[0],\n            loaded: 0,\n        });\n        if(!this.state.selectedIconFile){\n            alert(\"Please select the file again.\");\n            return;\n        }\n        const data = new FormData();\n        data.append('file', this.state.selectedIconFile);\n        data.append('fileType', 'product');\n\n        RetailerAdminService.upload(data).then(res => {\n            let data = resolveResponse(res);\n            this.setState({iconUrl: data.result.value});\n\n        });\n    };\n\n    onHelpTextImageChange = event=>{\n\n        this.setState({\n            selectedHelpTextImage: event.target.files[0]\n        });\n        if(!this.state.selectedHelpTextImage){\n            alert(\"Please select the file again.\");\n            return;\n        }\n        const data = new FormData();\n        data.append('file', this.state.selectedHelpTextImage);\n        data.append('fileType', 'product');\n\n        RetailerAdminService.upload(data).then(res => {\n            let data = resolveResponse(res);\n            this.setState({helpTextImage: data.result.value});\n        });\n    }\n\n    onChange = (e) =>\n        this.setState({ [e.target.name]: e.target.value });\n\n}\n\nconst styles ={\n\n    formContainer : {\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n\n    textStyle :{\n        display: 'flex',\n        justifyContent: 'center'\n\n    },\n    input: {\n        display: 'none'\n    },\n\n    textStyle :{\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    multiselect: {\n        minWidth: '100%',\n        marginBottom: '10px'\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: 3,\n    }\n};\n\nexport default BaneerListAdd;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nexport default function SimpleExpansionPanel(props) {\n  const classes = useStyles();\n\n  var message = props.message; \n\n  console.log(message);\n  // var list =[]; \n   \n\n  // for(var i=0; i < message.length; i++){\n  //   list.push( <p> <ListItem component='a'><ListItemText primary={message[i].laId +' | '+ message[i].reason} /></ListItem></p> );\n\n  // }\n\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography className={classes.heading}>Response</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n        \n\n        <table style={{width: \"none\"}}>\n        <TableHead>\n          <TableRow>\n            <TableCell>LaId</TableCell>\n            <TableCell>Reason</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {message && message.map(row => (\n            <TableRow key={row.name}>\n              <TableCell align=\"right\">{row.laId}</TableCell>\n              <TableCell align=\"right\">{row.reason}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </table>\n           \n           {/* {list} */}\n           {/* <ListItem button component='a' href={\"/#/offerupload\"} >\n            <ListItemText primary=\"Offer Upload\" />\n          </ListItem> */}\n\n         \n         \n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n     \n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Notify from \"../../utils/Notify\";\n\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SearchIcon from '@material-ui/icons/Search';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container } from \"@material-ui/core\";\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Title from './Title';\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nimport ActivationService from \"../service/ActivationService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\nimport SimpleExpansionPanel from './SimpleExpansionPanel';\n\nclass Retailer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            retailerOnboardExcelTemplatePath: \"\",\n            retailerDeleteExcelTemplatePath: \"\",\n            deletefile:'', \n            searchby:'',\n            retailerDetails: '',\n            uploadResponse: '', // [{laId: \"b0208057\", reason : \"Given Laid already created\"},{laId: \"b0208058\", reason : \"Given Laid already created\"}],\n            deleteResponse:\"\"\n\n\n        };\n        this.relailerOnboard = this.relailerOnboard.bind(this);\n        this.relailerDelete = this.relailerDelete.bind(this);\n        this.searchRetailer = this.searchRetailer.bind(this);\n    }\n\n    onChangeFileUpload = e => {\n        var extention =  e.target.files[0] && e.target.files[0].name.split('.').pop();\n        console.log(\"extention\",extention);\n        if(extention != 'xlsx' ){\n            Notify.showError(\"Only xlsx file allow to upload\");\n            document.getElementById(e.target.name).value = \"\";\n            return;\n        }else{\n            console.log(e.target.name); \n                this.setState({[e.target.name]: e.target.files[0]})\n        }\n    }\n\n\n\n    onChange = (e) => {\n        this.setState({searchby: e.target.value})\n        // const re = /^[0-9\\b]+$/;\n        // if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n        //     this.setState({searchby: e.target.value})\n        // }\n\n    }\n\n\n\n    componentDidMount() {\n       // this.getAdmminStaticData();\n       ActivationService.getStaticData('ADMIN').then(res => {\n        let data = resolveResponse(res);\n        this.setState({listofzones: data.result && data.result.zones}) \n    })\n    }\n\n    relailerOnboard() {\n    \n        console.log(this.state.uploadfile);\n\n            if(!this.state.uploadfile || document.getElementById('uploadfile').value ==\"\"){\n                Notify.showError(\"Missing required file to upload\");\n                return;\n            }\n\n            var userDetails = localStorage.getItem(\"userDetails\")\n            userDetails = userDetails && JSON.parse(userDetails);\n\n            const formData = new FormData();\n            formData.append('file',this.state.uploadfile);\n           \n        \n            \n            AdminService.uploadRetailer(formData).then(res => {\n          //  resolveResponse(res, \" On-Boarded successfully.\");\n            var data = resolveResponse(res);\n            if(data.status == 200 && data.message == 'ok'){\n                Notify.showSuccess(\"Agent On-Boarded successfully.\");\n\n            }\n\n            document.getElementById('uploadfile').value = \"\";\n            if(data.result && data.result.rejectedAgents){\n                this.setState({ uploadResponse:  data.result.rejectedAgents })\n            }\n        \n        \n            });\n    }\n\n\n    relailerDelete() {\n    \n        if(!this.state.deletefile || document.getElementById('deletefile').value ==\"\"){\n        Notify.showError(\"Missing required file to upload\");\n        return;\n        }\n\n        var userDetails = localStorage.getItem(\"userDetails\")\n        userDetails = userDetails && JSON.parse(userDetails);\n\n        const formData = new FormData();\n        formData.append('file',this.state.deletefile);\n    \n\n        \n        AdminService.deleteRetailer(formData).then(res => {\n        var data = resolveResponse(res,'');\n\n        if(data.status == 200 && data.message == 'ok'){\n            Notify.showSuccess(\"Agent info deleted successfully.\");\n\n        }\n\n        document.getElementById('deletefile').value = \"\"; \n\n        if(data.result && data.result.rejectedAgents){\n            this.setState({ deleteResponse:  data.result.rejectedAgents})\n        }\n       \n\n        });\n    }\n\n    searchRetailer(){\n       \n            if(!this.state.searchby){\n                Notify.showError(\"Type by lapu number or Retailer AirtelId Id \");\n                return;\n            }\n    \n            var userDetails = localStorage.getItem(\"userDetails\")\n            userDetails = userDetails && JSON.parse(userDetails);\n    \n          \n            AdminService.searchRetailer(this.state.searchby).then(res => {\n                var data =resolveResponse(res, \"Retailer On-Boarded successfully.\");\n                    if(data.result){\n                        this.setState({ retailerDetails :  [data.result[0]] })\n                    }\n\n                    console.log(\"retailerDetails\", this.state.retailerDetails); \n                });\n        \n              \n \n    }\n\n   \n\n\n\n\n\n\n    render() {\n\n        return (\n\n            <React.Fragment >\n                <PostLoginNavBar />\n\n\n                \n\n\n\n            <div style={{ padding: \"40px\" }} >\n\n\n                  \n                <Paper style={{padding:\"10px\", overflow:\"auto\"}} >\n                \n                <Grid syt  container spacing={24} container\n                    direction=\"row\"\n                    justify=\"right\"\n                    alignItems=\"center\">\n                        <Grid item xs={12} sm={7} >\n                        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                            Back Office User Search \n                        </Typography> \n                        </Grid>\n\n                        <Grid item xs={12} sm={3} item alignItems='flex-end'> \n                                <TextField type=\"text\" value={this.state.searchby } label=\"Search User\" style={{ width: \"100%\" }} name=\"searchby\" onChange={this.onChange} />\n                        </Grid>\n                        <Grid item xs={12} sm={2} item alignItems='flex-end'  > \n                            <Button startIcon={<SearchIcon/>} variant=\"contained\" color=\"\" style={{ marginLeft: '20px' }} onClick={this.searchRetailer} >Search</Button>\n                        </Grid>\n                    </Grid>\n\n\n                    <div style={{padding:\"10px\", overflow:\"auto\", height:\"100px\"}} >\n\n                            <Table size=\"small\"   aria-label=\"sticky table\">\n                                    <TableHead >\n                                        <TableRow style={{width:\"170px\",whiteSpace: \"nowrap\"}}>\n                                            <TableCell align=\"\">User Id</TableCell>\n                                            <TableCell align=\"\">Name </TableCell>\n                                            <TableCell align=\"\">Msisdn</TableCell>\n                                            <TableCell align=\"\">Email</TableCell>\n                                            <TableCell align=\"\">TL ID</TableCell>\n                                            <TableCell align=\"\">TL No.</TableCell>\n                                            <TableCell align=\"\">Manager Id</TableCell>\n                                            <TableCell align=\"\">Manager No.</TableCell>\n                                            <TableCell align=\"\">Role</TableCell>\n                                            <TableCell align=\"\">Department</TableCell>\n                                            <TableCell align=\"\">Remarks</TableCell>\n                                            <TableCell align=\"\">Is Active</TableCell>\n\n\n                                        </TableRow>\n                                    </TableHead>\n\n                                    <TableBody style={{width:\"\",whiteSpace: \"nowrap\"}}>\n                                        {this.state.retailerDetails ? this.state.retailerDetails.map(row => (\n                                            <TableRow hover   key={row.txnId} >\n                                               \n                                                <TableCell align=\"center\" >{row.laid}</TableCell>\n                                                <TableCell align=\"center\">{row.name}</TableCell>\n                                                <TableCell align=\"center\">{row.msisdn}</TableCell>\n                                                <TableCell align=\"center\">{row.emailId}</TableCell>\n                                                <TableCell align=\"center\">{row.tlId}</TableCell>\n                                                <TableCell align=\"center\">{row.tlNum}</TableCell>\n                                                <TableCell align=\"center\">{row.managerId}</TableCell>\n                                                <TableCell align=\"center\">{row.managerNum}</TableCell>\n                                                <TableCell align=\"center\">{row.role}</TableCell>\n                                                <TableCell align=\"center\">{row.department}</TableCell>\n                                                <TableCell align=\"center\">{row.remarks}</TableCell>\n                                                <TableCell align=\"center\">{row.active ? \"Yes\": \"No\"}</TableCell>\n\n                                                \n                                            </TableRow>\n                                        )):  \"\"}\n                                    </TableBody>\n                                </Table>\n\n                    </div>\n            </Paper>\n\n            <br /><br /> \n                <Paper style={{ padding: \"15px\" }}>\n                    <Title>Back Office On-Boarding </Title>\n                    <Grid container className=\"flexGrow\" spacing={3} style={{ padding: \"10px\" }}>\n                        <Grid item xs={12} sm={3}>\n                            <InputLabel htmlFor=\"Connection Type\" >\n                                <Typography variant=\"subtitle1\">\n                                    {/* <Link color=\"primary\" href={this.state.retailerOnboardExcelTemplatePath}>Download Sample</Link> */}\n                                    <Link color=\"primary\" href={\"/webdata/AgentOnboardingTemplate.xlsx\"}>Download Sample</Link>\n\n                                </Typography>\n                            </InputLabel>\n                        </Grid>\n\n                        <Grid item xs={12} sm={3}>\n                            <Typography variant=\"subtitle1\"> Upload or Update User </Typography>\n                        </Grid>\n\n                        <Grid item xs={12} sm={3}>\n                            <Typography variant=\"subtitle1\">\n\n                            <input\n                                    type=\"file\"\n                                    name=\"uploadfile\"\n                                    id=\"uploadfile\"\n\n                                    // onChange={this.onChangeHandler}\n                                    onChange={this.onChangeFileUpload}\n                                  />\n                            </Typography>\n                        </Grid>\n\n                        <Grid item xs={12} sm={3}>\n                            <Button startIcon={<CloudUploadIcon />}  variant=\"contained\" color=\"primary\" style={{ marginLeft: '20px' }} onClick={this.relailerOnboard}>Upload</Button>\n                        </Grid>\n\n\n                    </Grid>\n\n                    <Grid container className=\"flexGrow\" spacing={3} style={{ padding: \"10px\" }}>\n                        <Grid item xs={12} sm={12}>\n                            <Typography variant=\"subtitle1\"> </Typography>\n                             {this.state.uploadResponse ? <SimpleExpansionPanel message={ this.state.uploadResponse} />: \"\" }\n                            \n                        </Grid>\n\n                    </Grid>\n                </Paper>\n\n            \n\n                \n            \n\n                <br /><br />\n                <Paper style={{ padding: \"15px\" }}>\n                    <Title>Back Office Delete </Title>\n                    <Grid container className=\"flexGrow\" spacing={3} style={{ padding: \"10px\" }}>\n\n\n                        <Grid item xs={12} sm={3}>\n\n                            <InputLabel htmlFor=\"Connection Type\" >\n                                <Typography variant=\"subtitle1\">\n                                    {/* <Link color=\"primary\" href={this.state.retailerDeleteExcelTemplatePath}>Download Delete Sample </Link> */}\n                                    <Link color=\"primary\" href={\"/webdata/AgentDeleteTemplate.xlsx\"}>Download Delete Sample </Link> \n                                </Typography>\n                            </InputLabel>\n\n                        </Grid>\n                        <Grid item xs={12} sm={3}>\n                            <Typography variant=\"subtitle1\">Bulk Delete User</Typography>\n                        </Grid>\n\n                        <Grid item xs={12} sm={3}>\n                            <Typography variant=\"subtitle1\">\n                            <input\n                                    type=\"file\"\n                                    name=\"deletefile\"\n                                    id=\"deletefile\"\n                                    // onChange={this.onChangeHandler}\n                                    onChange={this.onChangeFileUpload}\n                                  />\n                            </Typography>\n                        </Grid>\n\n                        <Grid item xs={12} sm={3}>\n                            <Button startIcon={<DeleteIcon/>} variant=\"contained\" color=\"primary\" style={{ marginLeft: '20px' }} onClick={this.relailerDelete} >Delete</Button>\n                        </Grid>\n\n\n                    </Grid>\n\n                    <Grid container className=\"flexGrow\" spacing={3} style={{ padding: \"10px\" }}>\n                        <Grid item xs={12} sm={12}>\n                            <Typography variant=\"subtitle1\"> </Typography>\n                             {this.state.deleteResponse ? <SimpleExpansionPanel message={this.state.deleteResponse} />: \"\" }\n                            \n                        </Grid>\n\n                    </Grid>\n                </Paper>\n\n        </div>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle: {\n        display: 'flex',\n        justifyContent: 'left'\n    }\n}\n\n\nexport default Retailer;","import React, { useState } from \"react\";\nimport AdminService from \"../service/AdminService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Notify from \"../../utils/Notify\";\n\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SearchIcon from '@material-ui/icons/Search';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container } from \"@material-ui/core\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\nimport TextField from '@material-ui/core/TextField';\n\nimport Link from '@material-ui/core/Link';\n\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport Title from './Title';\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { CRO_API_BASE_URL } from \"../../utils/config\";\n\n\nclass OfferUpload extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            retailerOnboardExcelTemplatePath: \"\",\n            retailerDeleteExcelTemplatePath: \"\",\n            deletefile:'', \n            searchby:'',\n            retailerDetails: ''\n\n\n        };\n        this.getAdmminStaticData = this.getAdmminStaticData.bind(this);\n        this.relailerOnboard = this.relailerOnboard.bind(this);\n        this.relailerDelete = this.relailerDelete.bind(this);\n        this.searchRetailer = this.searchRetailer.bind(this);\n    }\n\n    onChangeFileUpload = e => {\n        var extention =  e.target.files[0] && e.target.files[0].name.split('.').pop();\n        console.log(\"extention\",extention);\n        if(extention != 'xlsx' ){\n            Notify.showError(\"Only xlsx file allow to upload\");\n            document.getElementById(e.target.name).value = \"\";\n            return;\n        }else{\n            console.log(e.target.name); \n                this.setState({[e.target.name]: e.target.files[0]})\n        }\n    }\n\n\n\n    onChange = (e) => {\n\n        const re = /^[0-9\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n            this.setState({searchby: e.target.value})\n        }\n\n    }\n\n\n\n    componentDidMount() {\n        this.getAdmminStaticData();\n    }\n\n    getAdmminStaticData() {\n\n        AdminService.getStaticData(\"ADMIN\")\n            .then((res) => {\n\n                let data = resolveResponse(res);\n\n                if (data.result && data.result)\n                    this.setState({ retailerOnboardExcelTemplatePath: data.result.retailerOnboardExcelTemplatePath, retailerDeleteExcelTemplatePath: data.result.retailerDeleteExcelTemplatePath })\n                \n                });\n\n\n           \n            \n\n    }\n\n\n    relailerOnboard() {\n    \n\n        console.log(this.state.uploadfile);\n\n            if(!this.state.uploadfile || document.getElementById('uploadfile').value ==\"\"){\n                Notify.showError(\"Missing required file to upload\");\n                return;\n            }\n\n            var userDetails = localStorage.getItem(\"userDetails\")\n            userDetails = userDetails && JSON.parse(userDetails);\n\n            const formData = new FormData();\n            formData.append('file',this.state.uploadfile);\n            formData.append('submittedBy',userDetails && userDetails.loginId);\n            formData.append('email', '');\n        \n            \n            AdminService.uploadRetailer(formData).then(res => {\n            resolveResponse(res, \"Retailer On-Boarded successfully.\");\n            Notify.showSuccess(\"Retailer On-Boarded successfully.\");\n            document.getElementById('uploadfile').value = \"\";\n\n        \n            });\n    }\n\n\n    relailerDelete() {\n    \n        if(!this.state.deletefile || document.getElementById('deletefile').value ==\"\"){\n        Notify.showError(\"Missing required file to upload\");\n        return;\n        }\n\n        var userDetails = localStorage.getItem(\"userDetails\")\n        userDetails = userDetails && JSON.parse(userDetails);\n\n        const formData = new FormData();\n        formData.append('file',this.state.deletefile);\n        formData.append('submittedBy', userDetails && userDetails.loginId);\n        formData.append('email', '');\n    \n        \n        AdminService.deleteRetailer(formData).then(res => {\n        resolveResponse(res,'');\n        Notify.showSuccess(\"Attached retailer info deleted successfully.\");\n        document.getElementById('deletefile').value = \"\"; \n\n        });\n    }\n\n    searchRetailer(){\n       \n            if(!this.state.searchby){\n                Notify.showError(\"Type by lapu number or Retailer AirtelId Id \");\n                return;\n            }\n    \n            var userDetails = localStorage.getItem(\"userDetails\")\n            userDetails = userDetails && JSON.parse(userDetails);\n    \n            const param = {\n                lapuNumber : this.state.searchby, \n                retailerAirtelId: this.state.searchby, \n            }\n        \n            AdminService.searchRetailer(param).then(res => {\n            var data = resolveResponse(res,'');\n           \n                var staticdata = {\n                    \"message\": \"string\",\n                    \"result\": {\n                    \"distributerId\": \"string\",\n                    \"distributerMsisdn\": \"string\",\n                    \"distributerName\": \"string\",\n                    \"district\": \"string\",\n                    \"fseId\": \"string\",\n                    \"fseMsisdn\": \"string\",\n                    \"fseName\": \"string\",\n                    \"retailerAirtelId\": \"string\",\n                    \"retailerName\": \"string\",\n                    \"retailerVLNumber\": \"string\",\n                    \"territory\": \"string\",\n                    \"tmId\": \"string\",\n                    \"tmMsisdn\": \"string\",\n                    \"tmName\": \"string\",\n                    \"zbmId\": \"string\",\n                    \"zbmMsisdn\": \"string\",\n                    \"zbmName\": \"string\",\n                    \"zone\": \"string\"\n                    },\n                    \"status\": 0\n                }\n                \n                if(data.result){\n                    this.setState({ retailerDetails :  [data.result] })\n                }else{\n                   // this.setState({ retailerDetails :  [staticdata.result] })\n                }\n        });\n    }\n\n    addProduct() {\n        this.props.history.push('/add-product');\n    }\n\n    someAction() {\n        alert(\"action happed in other commpornt\");\n    }\n\n\n    editProduct(productId) {\n        console.log(\"productid\", productId)\n\n        window.localStorage.setItem(\"selectedProductId\", productId);\n        this.props.history.push('/edit-doc');\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n\n\n\n\n    render() {\n\n        return (\n\n            <React.Fragment >\n                <PostLoginNavBar />\n\n            <div style={{ padding: \"40px\" }} >\n                <Paper style={{ padding: \"15px\" }}>\n                    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                         Customer Offer Upload\n                        </Typography> \n                    <Grid container className=\"flexGrow\" spacing={3} style={{ padding: \"10px\" }}>\n                        <Grid item xs={12} sm={3}>\n                            <InputLabel htmlFor=\"Connection Type\" >\n                                <Typography variant=\"subtitle1\">\n                                    <Link color=\"primary\" href={this.state.retailerOnboardExcelTemplatePath}>Download Sample</Link>\n                                </Typography>\n                            </InputLabel>\n                        </Grid>\n\n                        <Grid item xs={12} sm={3}>\n                            <Typography variant=\"subtitle1\">Upload Offer</Typography>\n                        </Grid>\n\n                        <Grid item xs={12} sm={3}>\n                            <Typography variant=\"subtitle1\">\n\n                            <input\n                                    type=\"file\"\n                                    name=\"uploadfile\"\n                                    id=\"uploadfile\"\n                                    // onChange={this.onChangeHandler}\n                                    onChange={this.onChangeFileUpload}\n                                  />\n                            </Typography>\n                        </Grid>\n\n                        <Grid item xs={12} sm={3}>\n                            <Button startIcon={<CloudUploadIcon />}  variant=\"contained\" color=\"primary\" style={{ marginLeft: '20px' }} onClick={this.relailerOnboard}>Upload</Button>\n                        </Grid>\n                    </Grid>\n                </Paper>\n\n        </div>\n\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle: {\n        display: 'flex',\n        justifyContent: 'left'\n    }\n}\n\n\nexport default OfferUpload;","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport storeService from \"../service/StoreService\";\nimport LoginNavBar from \"../LoginNavbar\";\nimport {Container} from \"@material-ui/core\";\nimport Notify from \"../../utils/Notify\";\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\n//import AdminWelcome from '../adminwelcome.png';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport ActivationService from \"../service/ActivationService\";\nimport {resolveResponse} from \"../../utils/ResponseHandler\";\n\n\nclass LoginComponent extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: \"\",\n            password: \"\", \n            isDasable:false,\n            isError:false,\n            \n        };\n        this.login = this.login.bind(this);\n    }\n\n\n    render() {\n        var password = \"U*0elFh:\"; \n\n        return(\n            <React.Fragment>\n                 <PostLoginNavBar/>\n                 <img style={styles.imagestyle} src={\"/webdata/adminwelcome.png\"} />\n            </React.Fragment>\n        )\n\n    }\n\n    componentDidMount() {\n      const token =   window.localStorage.getItem(\"token\"); \n\n    //   if(token){\n    //     const lastUrl = localStorage.getItem(\"lastUrl\"); \n    //     this.props.history.push('/'+lastUrl);\n    //   }\n    ActivationService.getStaticData('ADMIN').then(res => {\n        let data = resolveResponse(res);\n        this.setState({listofzones: data.result && data.result.zones}) \n    })\n\n        \n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value.trim() });\n    }\n\n    login = (e) => {\n        e.preventDefault();\n        if(!this.state.userName || !this.state.password){\n            this.setState({ isError: \"Olms Id and password is required.\" });\n\n            // setTimeout(() => {\n            //     this.setState({ isError: \"\" });\n            // }, 3000);\n\n          //  Notify.showError(\"Olms Id and password is required.\");\n            return;\n        }\n         \n        this.setState({ isDasable: true });\n        \n        const loginPayload = {\n            userName:  this.state.userName,\n            password: this.state.password\n        };\n        storeService.login(loginPayload)\n            .then(res => {\n              //  Notify.showError(\"Olms Id and password is required.\");\n            //  alert(JSON.stringify(res));\n\n              \n              this.setState({ isError: res.data.message });\n\n              //  let data = resolveResponse(res);\n                console.log(\"resolveResponse\",data); \n                // if(!data.result)\n                //     Notify.showError(\"Something Went worng...\");\n\n                var data = res.data; \n                this.setState({ isDasable: false });\n\n                // else\n                //     resolveResponse(res, \"Login success.\");\n\n                if(data.result){\n                    window.localStorage.setItem(\"userDetails\",JSON.stringify(data.result));\n                    window.localStorage.setItem(\"token\",data.result.token)\n                }\n               \n                // BO agent : BOA\n                // Data Entry : DE\n                // Admin : ADMIN\n                // Distributor : DIST\n\n                if(data.result && data.result.roleCode == \"BOA\")\n                this.props.history.push('/verify');\n\n                if(data.result && data.result.roleCode == \"DE\")\n                this.props.history.push('/dataentry');\n\n                if(data.result && data.result.roleCode == \"ADMIN\")\n                this.props.history.push('/packs');\n\n                if((data.result && data.result.roleCode== \"DIST\") || (data.result &&  data.result.roleCode== \"FSE\"))\n                this.props.history.push('/distributor');\n                \n            });\n          \n            // setTimeout(() => {\n            //     this.setState({ isError: \"\" });\n            // }, 3000);\n\n\n\n           \n    }\n\n}\n\nconst styles ={\n    formStyle :{\n        display: 'flex',\n        flexFlow: 'row wrap'\n    },\n    label: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    errorMessage:{\n        color:\"red\",\n        marginTop: '11px'\n    },\n    waitMessage:{\n        color:\"gray\",\n        marginTop: '11px'\n    },\n    imagestyle:{\n        width:\"100%\",\n        height: '100vh'\n    }\n\n}\n\nexport default LoginComponent;","import React, { useState } from \"react\";\nimport ActivationService from \"../service/ActivationService\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from '@material-ui/core/TextField';\nimport Notify from \"../../utils/Notify\";\n\nimport Divider from '@material-ui/core/Divider';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from \"@material-ui/core/Input\";\n\nimport Grid from '@material-ui/core/Grid';\n\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport PostLoginNavBar from \"../PostLoginNavbar\";\nimport { Container } from \"@material-ui/core\";\nimport { resolveResponse } from \"../../utils/ResponseHandler\";\n\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nconst handleChangePage = (event, newPage) => {\n    //  this.setPage(newPage);\n};\n\nconst handleChangeRowsPerPage = event => {\n\n    // this.setRowsPerPage(parseInt(event.target.value, 10));\n    // this.setPage(0);\n};\n\n\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nclass RoleManagement extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            searchedproducts: '',\n            searchby: '',\n            listofzones: [],\n            selectedZone: [],\n            zone: '',\n            addNewEnable:false,\n            roleName:\"\",\n            rejectedReasons: [\"Pack Activation\", \"Offer Upload\", \"Banner Upload\", \"Onboarding Agents\", \"Data Entry\", \"Verification\", \"Document Upload\", \"Agent Status Report\", \"Agent Audit Report\", \"Rejected Data\"]\n        };\n        this.loadProductList = this.loadProductList.bind(this);\n        this.editProduct = this.editProduct.bind(this);\n        this.convertBool = this.convertBool.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.zoneChange = this.zoneChange.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.addRole = this.addRole.bind(this);\n\n        this.deleteNewRole = this.deleteNewRole.bind(this);\n        this.deleteRole = this.deleteRole.bind(this);\n\n        \n\n\n    }\n\n    componentDidMount() {\n      //  this.loadProductList(\"\");\n        localStorage.setItem(\"lastUrl\", \"role\");\n\n        var roles = [\"Data Entry\", \"BO Agent\", \"Distributor\", \"FSE\"];\n\n        this.setState({ searchedproducts: roles })\n    }\n\n    searchOnDB(mobileNumber) {\n\n     //   this.loadProductList(mobileNumber);\n\n        // ActivationService.searchMobileNo(mobileNumber).then(res => {\n        //     let data = resolveResponse(res);\n        //     const selectedProduct = data.result;            \n\n        //     if(selectedProduct && selectedProduct.transactionId){\n        //         window.localStorage.setItem(\"selectedProductId\", selectedProduct.transactionId);\n        //         //window.localStorage.setItem(\"selectedSim\", '');\n\n        //         this.props.history.push('/verify-edit');\n        //         // this.setState({\n        //         //     });\n        //     }\n        //     // else{\n        //     //     Notify.showError(\"Not Found or already processed\");\n        //     // }\n\n        // })\n    }\n\n\n    loadProductList(mobileNumber) {\n\n\n        var d = new Date();\n        var endTime = d.getTime();\n\n        var startTime = endTime - 172800000;\n\n        var data = {\n            \"endDate\": endTime,\n            \"mobileNumber\": mobileNumber ? mobileNumber : null,\n            \"noOfRecords\": 20,\n            \"role\": \"BOA\",\n            \"startDate\": 0,\n            \"txnId\": 0,\n            \"type\": \"next\",\n            \"zones\": this.state.selectedZone.length ? this.state.selectedZone : null\n        }\n\n        document.getElementById('showMessage').innerHTML = \"Please Wait Loading...\";\n\n        ActivationService.listDocs(data)\n            .then((res) => {\n                let data = resolveResponse(res);\n                var activationList = data && data.result && data.result.activationList;\n                this.setState({ products: activationList })\n\n\n\n                //this.setState({searchedproducts: activationList})\n                var roles = [\"Data Entry\", \"BO Agent\", \"Distributor\", \"FSE\"];\n\n                this.setState({ searchedproducts: roles })\n\n                var listingIds = activationList && activationList.map(function (val, index) {\n                    return val.txnId\n                });\n\n                if (document.getElementById('showMessage')) {\n                    if (activationList == null) {\n                        document.getElementById('showMessage').innerHTML = \"No new documents for verification\";\n                    } else {\n                        document.getElementById('showMessage').innerHTML = \"\";\n                    }\n                }\n\n                localStorage.setItem(\"verifyListingTxn\", listingIds);\n            });\n\n        setTimeout(() => {\n            if (this.state.searchedproducts && this.state.searchedproducts.length == 0) {\n                document.getElementById('showMessage').innerHTML = \"Server taking time to response please reload again and check\";\n            }\n        }, 7000);\n\n\n        ActivationService.getStaticData('BOA').then(res => {\n            let data = resolveResponse(res);\n            this.setState({ listofzones: data && data.result && data.result.zones })\n        })\n\n\n\n        // ActivationService.testApi('BOA').then(res => {\n        //     let data = resolveResponse(res);\n        //     this.setState({listofzones: data.result && data.result.zones}) \n        // })\n\n    }\n\n    onChange = (e) => {\n\n    this.setState({ [e.target.name]: e.target.value })\n\n        // const re = /^[0-9\\b]+$/;\n        // if (e.target.value === '' || re.test(e.target.value) && e.target.value.length <= 10) {\n        //     this.setState({ searchby: e.target.value })\n        // }\n\n    }\n\n    zoneChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    addRole() {\n        this.setState({ addNewEnable: true }) \n    }\n\n    deleteNewRole(){\n        this.setState({ addNewEnable: false }) \n        this.setState({ roleName: \"\" }) \n\n\n    }\n\n    deleteRole(){\n\n        window.confirm(\"Please confirm if you want to delete the role?\"); \n        return;\n    }\n\n    someAction() {\n        alert(\"action happed in other commpornt\");\n    }\n\n\n\n\n    editProduct(productId, sim) {\n        console.log(\"productid, row.sim\", productId, sim)\n\n        window.localStorage.setItem(\"selectedProductId\", productId);\n        window.localStorage.setItem(\"selectedSim\", sim);\n\n        this.props.history.push('/verify-edit');\n\n        // this.props.history.push({\n        //     pathname: '/edit-doc',\n        //     search: '?query=abc',\n        //     state: { rowdata: productId }\n        //   })\n    }\n\n    convertBool(flag) {\n        return flag ? 'Yes' : 'No';\n    }\n\n\n    handleChange = name => event => {\n        this.setState({ ...this.state, selectedReasons: { ...this.state.selectedReasons, [name]: event.target.checked } });\n    };\n\n\n\n    render() {\n\n        var rejectedReasons = this.state.rejectedReasons;\n        var reasonList = [];\n        for (var i = 0; i < rejectedReasons.length; i++) {\n            if (rejectedReasons[i] == \"Verification\") {\n                reasonList.push(<div> <label> <input selected type=\"checkbox\" checked={true} /> {rejectedReasons[i]} </label></div>)\n\n            } else {\n                reasonList.push(<div> <label> <input selected type=\"checkbox\" checked={false} /> {rejectedReasons[i]} </label></div>)\n\n            }\n\n        }\n\n\n\n        return (\n\n            <React.Fragment>\n                <PostLoginNavBar />\n\n                <Paper style={{ padding: \"10px\", overflow: \"auto\" }} >\n\n                    <Grid container spacing={3} direction=\"row\" alignItems=\"center\" container>\n\n                        <Grid item xs={12} sm={9} >\n                            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n                                Role Management\n                                </Typography>\n                        </Grid>\n                        {/* <Grid item xs={10} sm={3}> \n                                <FormControl style={styles.selectStyle}>\n                                        <InputLabel id=\"demo-mutiple-name-label\">Select Zone</InputLabel>\n                                        <Select\n                                        labelId=\"demo-mutiple-name-label\"\n                                        id=\"demo-mutiple-name\"\n                                        multiple\n                                        name=\"selectedZone\"\n                                        value={this.state.selectedZone}\n                                        onChange={this.zoneChange}\n                                        input={<Input />}\n                                        MenuProps={MenuProps}\n                                        >\n                                        {this.state.listofzones ? this.state.listofzones.map(name => (\n                                            <MenuItem key={name} value={name} >\n                                                {name}\n                                            </MenuItem>\n                                        )): \"\"}\n                                        </Select>\n                                    </FormControl>\n                            </Grid> */}\n\n                        {/* <Grid item xs={2} sm={2}  > \n                                <TextField  value={this.state.searchby}  label=\"Search by Mobile No.\"  style={{width:\"100%\"}} name=\"Search by Mobile No.\" name=\"searchby\" onChange={this.onChange} />\n                            </Grid> */}\n                        {/* <Grid item xs={3} sm={3} alignItems=\"left\">\n                            <Button type=\"submit\" onClick={() => this.searchOnDB(this.state.searchby)} variant=\"contained\" style={{ marginLeft: '20px' }} >Add New</Button>\n                        </Grid> */}\n\n                    </Grid>\n\n\n\n\n\n\n                    <div style={{ padding: \"10px\", overflow: \"auto\", height: \"550px\" }} >\n\n\n\n                        {/* <Container  > */}\n                        {/* <EnhancedTable products={this.state.products}/> */}\n\n                        {/* <StickyHeadTable products={this.state.products} someAction={this.someAction}/>\n                     */}\n\n\n                        {/* <Typography variant=\"h5\" style={styles.tableStyle}>&nbsp;Document Verification</Typography> */}\n                        {/* <Button variant=\"contained\" color=\"primary\" onClick={() => this.addProduct()}>\n                        Add Product\n                    </Button> */}\n\n                        {/* style={{whiteSpace: \"nowrap\"}}   stickyHeader aria-label=\"sticky table\"*/}\n                        <Paper style={{ padding: \"10px\", overflow: \"auto\" }} >\n\n                            <Grid container spacing={3} direction=\"row\" alignItems=\"center\" container>\n\n\n                                <Grid item xs={12} sm={6} >\n\n                                    <Table size=\"small\" aria-label=\"sticky table\">\n                                        <TableHead >\n                                            <TableRow style={{ width: \"170px\", whiteSpace: \"nowrap\" }}>\n                                                {/* <TableCell align=\"\">View</TableCell> */}\n                                                <TableCell> \n                                                    <Typography color=\"primary\" gutterBottom>\n                                                        Role Name\n                                                    </Typography>\n                                                </TableCell>\n\n                                                <TableCell> \n                                                    <Typography color=\"primary\" gutterBottom>\n                                                        Delete\n                                                    </Typography>\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody style={{ whiteSpace: \"nowrap\" }}>\n                                            {this.state.searchedproducts ? this.state.searchedproducts.map(row => (\n                                                <TableRow hover key={row.txnId} >\n                                                    {/* <TableCell  align=\"center\" onClick={() => this.editProduct(row.txnId,row.sim)}><VisibilityIcon style={{cursor:\"hand\"}} /></TableCell> */}\n\n                                                    {row == \"BO Agent\" ?\n                                                        <><TableCell component=\"th\" scope=\"row\" className=\"hidden\">\n                                                            <b> {row} </b> \n                                                        </TableCell>\n                                                        <TableCell component=\"th\" scope=\"row\" className=\"hidden\">\n                                                        \n                                                        <Button onClick={() => this.deleteRole()} variant=\"contained\" style={{marginTop: \"12px\", marginLeft: \"5px\"}} size=\"small\" color=\"secondary\"> <DeleteForeverIcon/></Button> \n                                                   </TableCell> </>\n                                                        :\n                                                        <><TableCell component=\"th\" scope=\"row\" className=\"hidden\">\n                                                            {row}  \n                                                        </TableCell>\n                                                        <TableCell component=\"th\" scope=\"row\" className=\"hidden\">\n                                                         <Button onClick={() => this.deleteRole()} variant=\"contained\" style={{marginTop: \"12px\", marginLeft: \"5px\"}} size=\"small\" color=\"secondary\"> <DeleteForeverIcon/></Button> \n                                                    </TableCell></>}\n\n\n\n\n                                                </TableRow>\n                                            )) : \"\"}\n                                        </TableBody>\n                                    </Table>\n                                    {this.state.addNewEnable ? \n                                    <>\n                                    <TextField label=\"Add New Role\" style={{width: \"525px\"}}  name=\"roleName\" value={this.state.roleName} onChange={this.onChange}/>\n                                    <Button onClick={() => this.deleteNewRole()} variant=\"contained\" style={{marginTop: \"12px\", marginLeft: \"5px\"}} size=\"small\" color=\"secondary\">Delete</Button> </>\n                                    : \"\"}\n                                    \n                                </Grid>\n\n                                <Grid item xs={12} sm={6} >\n                                    <Typography color=\"primary\" gutterBottom>\n                                        Privileges\n                            </Typography>\n                                    {reasonList}\n                                </Grid>\n\n\n                            </Grid>\n\n                            \n                        {/* <br />\n                            <Divider /> <br /> */}\n                            <Grid container spacing={3} direction=\"row\" alignItems=\"center\" container>\n                           \n\n                                <Grid item xs={12} sm={6} >\n\n                                    <Button onClick={() => this.addRole()} variant=\"contained\" color=\"default\"  style={{ marginLeft: '20px' }} >Add New Role</Button>\n\n                                </Grid>\n\n                                <Grid item xs={12} sm={6} >\n                                    <Button variant=\"contained\" color=\"primary\" style={{ marginLeft: '20px' }} >Update</Button>\n\n\n                                </Grid>\n                            </Grid>\n\n\n\n\n                        </Paper>\n\n\n\n\n                        <div style={{ color: \"gray\", fontSize: \"15px\", textAlign: \"center\" }}> <br /> <span id=\"showMessage\"> </span></div>\n\n                        {/* </Container> */}\n\n                    </div>\n\n                </Paper>\n            </React.Fragment>\n        )\n    }\n\n}\n\nconst styles = {\n    tableStyle: {\n        display: 'flex',\n        justifyContent: 'left'\n    },\n    tableRow: {\n        hover: {\n            \"&:hover\": {\n                background: 'green !important',\n            },\n        },\n\n    },\n\n    selectStyle: {\n        // minWidth: '100%',\n        marginBottom: '0px',\n        minWidth: 340,\n        maxWidth: 340,\n    }\n}\n\n\n\nexport default RoleManagement;","import React, { Component } from \"react\";\nimport { Fade,Slide,Zoom } from 'react-slideshow-image';\nimport Grid from '@material-ui/core/Grid';\nimport $ from 'jquery';\nimport Lightbox from \"rhino-react-image-lightbox-rotate\";\n\n\nconst fadeProperties = {\n  duration: 10000,\n  transitionDuration: 500,\n  infinite: true,\n  indicators: true,\n  arrows: true,\n  scale: 0.4,\n  onChange: (oldIndex, newIndex) => {\n    console.log(`fade transition from ${oldIndex} to ${newIndex}`);\n  }\n}\n\n\n\nclass SlideSlowGalary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      photoIndex: 0,\n      isOpen: false\n    };\n\n    this.openImageGalary = this.openImageGalary.bind(this);\n\n  }\n\n  openImageGalary = (index) => {\n\n    console.log(\"index\", index); \n    this.setState({\n      isOpen: true,\n      photoIndex:index\n      // mainSrc:'https://pbs.twimg.com/media/Bpbm1DXCAAA5vk4?format=jpg&name=900x900'\n    });\n    \n    $('.MuiToolbar-root').hide();   \n  }\n\n\n  render() {\n\n  const styles = {\n    imgTextStyle : {\n      textAlign: 'center',\n      position: 'relative',\n      marginBottom: '-24px',\n      fontSize: 'inherit',\n      color:\"white\",\n      fontWeight:\"bold\"\n    }, \n    topImgStyle:{\n      width:\"100%\", \n      height:\"495px\", \n      cursor:\"zoom-in\", \n      borderRadius:\"3px\"\n    },\n    buttomImgSyle: {\n      width:\"100%\", \n      height:\"240px\", \n      cursor:\"zoom-in\", \n      borderRadius:\"3px\"\n    },\n    displayBlock:{\n      display:'block', \n    },\n    displayNone:{\n      display:'none', \n    }\n\n  };\n\n    const { photoIndex, isOpen } = this.state;\n    var  topImg = this.props.imageDetails;\n    \n        \n      var images = []; \n      const topImgItem = []\n          topImg.map((data,i)=>{\n            images.push(topImg[i].img); \n              topImgItem.push(\n                <Grid item xs={12} sm={12} >\n                  <div className=\"each-fade\">\n                        <div className=\"image-container\"> \n\n                        <img onClick={() => this.openImageGalary(i)}  src={data.img}  style={styles.topImgStyle} />\n                        </div>\n                        <div style={styles.imgTextStyle}> {data.title} </div> \n                      </div>\n                </Grid>\n                ); \n\n          })\n      \n \n    \n    return (\n       \n      <div style={{justifyContent:\"center\"}}>\n\n\n          <div className=\"slide-container\">\n                {/* <Fade {...fadeProperties}>\n                 {topImgItem}\n              </Fade> */}\n\n               <Slide {...fadeProperties}>\n                  {topImgItem}\n               </Slide>\n\n              {/* <Zoom {...fadeProperties}>\n                 {topImgItem}\n              </Zoom> */}\n              \n         </div>\n\n        {isOpen && (\n          <Lightbox\n            mainSrc={images[photoIndex]}\n            nextSrc={images[(photoIndex + 1) % images.length]}\n            prevSrc={images[(photoIndex + images.length - 1) % images.length]}\n            onCloseRequest={() => {this.setState({ isOpen: false }); $('.MuiToolbar-root').show(); }}\n            onMovePrevRequest={() =>{\n                this.setState({\n                  photoIndex: (photoIndex + images.length - 1) % images.length\n                })\n              }\n              \n            }\n            onMoveNextRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + 1) % images.length\n              })\n            }\n          />\n        )}\n      </div>\n    );\n  }\n}\n\n\nexport default SlideSlowGalary;\n\n\n\n//functional style \n// class SimpleAction extends React.Component {\n\n//   render() {\n//     return (\n//       <div style={{height:\"400px\"}}>\n//           <Slideshow />\n//       </div>\n     \n//     )\n//   }\n// }\n\n// const style={\n//   setWH :{\n//   height:\"300px\", \n//   width:\"500px\"\n  \n\n//   }\n// }\n\n// const Slideshow = (props) => {\n\n//   console.log(\"props\", props); \n//   var  topImg = props.imageDetails;\n\n//   var images = []; \n//   const topImgItem = []\n//   const buttomImgItem = []\n//       topImg.map((data,i)=>{\n//         images.push(topImg[i].img); \n//           topImgItem.push(\n//             <Grid item xs={12} sm={12} >\n//               <div className=\"each-fade\">\n//                     <div className=\"image-container\">\n//                     <img onClick={() => this.openImageGalary(i)} src={data.img}  style={styles.topImgStyle} />\n//                     </div>\n//                     <div style={styles.imgTextStyle}> {data.title} </div> \n//                   </div>\n//             </Grid>\n//             ); \n\n//       })\n   \n\n//   console.log(\"props\", props); \n//   return (\n//     <div className=\"slide-container\">\n//       <Fade {...fadeProperties}>\n//         {topImgItem}\n//       </Fade>\n//     </div>\n//   )\n// }\n\n// const styles = {\n//   imgTextStyle : {\n//     textAlign: 'center',\n//     position: 'relative',\n//     marginBottom: '-24px',\n//     fontSize: 'inherit',\n//     color:\"white\",\n//     fontWeight:\"bold\"\n//   }, \n//   topImgStyle:{\n//     width:\"100%\", \n//     height:\"390px\", \n//     cursor:\"zoom-in\", \n//     borderRadius:\"3px\"\n//   },\n//   buttomImgSyle: {\n//     width:\"100%\", \n//     height:\"240px\", \n//     cursor:\"zoom-in\", \n//     borderRadius:\"3px\"\n//   },\n//   displayBlock:{\n//     display:'block', \n//   },\n//   displayNone:{\n//     display:'none', \n//   }\n\n// };\n\n// export default Slideshow;\n","import { HashRouter as Router, Route, Switch , Redirect} from 'react-router-dom'\nimport React from \"react\";\nimport LoginComponent from \"./login/LoginComponent\";\nimport Report from \"./report/Report\";\nimport VerifyDocs from \"./expriment/VerifyDocs\";\nimport RechargePack from \"./rechargepack/RechargePack\";\nimport RechargePackAdd from \"./rechargepack/RechargePackAdd\";\nimport AddBanner from \"./banner/BannerAdd\";\nimport BannerEdit from \"./banner/BannerEdit\";\n\n\n\nimport EditRechargePack from \"./rechargepack/EditRechargePack\";\n\nimport VerifyList from './verify/VerifyList';\nimport VerifyEdit from './verify/VerifyEdit';\n//data entry\nimport DataEntryList from './dataentry/DataEntryList';\nimport DataEntryEdit from './dataentry/DataEntryEdit';\n//data entry\nimport DistributerList from './distributer/DistributerList';\nimport BaneerList from './banner/BannerList';\nimport BaneerListAdd from './banner/BaneerListAdd';\nimport BackOffice from './backoffice/BackOffice';\nimport OfferUpload from './backoffice/OfferUpload';\nimport AdminWelcome from './login/AdminWelcome';\nimport RoleManagement from './login/RoleManagement';\n\n\n\nimport Test from './expriment/Test';\n\n\nconst AppRouter = () => {\n\n    return(\n        <React.Fragment>\n            <Router>\n                <Switch>\n                    <Route path=\"/\" exact component={LoginComponent}/>\n                    <Route path=\"/login\" component={LoginComponent} />\n\n                    <Route path=\"/verify\" component={VerifyList} />\n                    <Route path=\"/verify-edit\" component={VerifyEdit} />\n\n                    <Route path=\"/dataentry\" component={DataEntryList} />\n                    <Route path=\"/data-edit\" replace component={DataEntryEdit} />\n\n                    <Route path=\"/distributor\" component={DistributerList} />\n\n                    {/* admin dashboard */}\n                    <Route path=\"/banners\" component={BaneerList} />\n                    <Route path=\"/add-banner\" component={AddBanner} />\n                    <Route path=\"/banner-edit\" component={BannerEdit} />\n\n                    <Route path=\"/packs\" component={RechargePack} />\n                    <Route path=\"/packadd\" component={RechargePackAdd} />\n                    <Route path=\"/editpacks\" component={EditRechargePack} />\n                    \n                    <Route path=\"/backoffice\" component={BackOffice} />\n                    <Route path=\"/offerupload\" component={OfferUpload} />\n\n                    <Route path=\"/report\" component={Report} />\n                    <Route path=\"/welcome\" component={AdminWelcome} />\n\n                    <Route path=\"/role\" component={RoleManagement} />\n\n                    \n                    <Route path=\"/test\" component={Test} />\n                    <Route path=\"*\" component={LoginComponent} />\n\n                    {/* <Route render={() => <Redirect to={{pathname: \"/\"}} />} /> */}\n                    \n                </Switch>\n            </Router>\n        </React.Fragment>\n    )\n}\n\nexport default AppRouter;","import React from 'react';\nimport './App.css';\nimport AppRouter from \"./components/RouterComponent\";\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n//import LoginComponent from \"./login/LoginComponent\";\n\nimport LoginComponent from \"./components/login/LoginComponent\";\n\n\n\nfunction App() {\n  const token = window.localStorage.getItem(\"token\"); \n\n  if(!token){\n     window.location.replace(\"/#/login\");  \n  }\n\n  return (\n    <React.Fragment>\n        <AppRouter/>\n        <ToastContainer/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./createStore\";\nimport App from \"./App\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);","module.exports = __webpack_public_path__ + \"static/media/airtellogo.09dde59b.png\";"],"sourceRoot":""}